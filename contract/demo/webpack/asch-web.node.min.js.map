{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/axios/lib/utils.js","webpack:///external \"crypto\"","webpack:///./src/constants.ts","webpack:///./node_modules/safe-buffer/index.js","webpack:///./node_modules/axios/lib/defaults.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///external \"buffer\"","webpack:///./node_modules/pbkdf2/lib/precondition.js","webpack:///./src/providers/index.ts","webpack:///./src/providers/provider.ts","webpack:///./node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/axios/lib/helpers/buildURL.js","webpack:///external \"http\"","webpack:///external \"https\"","webpack:///./node_modules/follow-redirects/index.js","webpack:///external \"url\"","webpack:///external \"stream\"","webpack:///./node_modules/follow-redirects/node_modules/debug/src/common.js","webpack:///external \"util\"","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///./src/builders/index.ts","webpack:///./src/time/slots.ts","webpack:///./src/utils.ts","webpack:///./node_modules/pbkdf2/lib/sync.js","webpack:///./node_modules/pbkdf2/lib/default-encoding.js","webpack:///./node_modules/inherits/inherits.js","webpack:///./src/contract/metadata.ts","webpack:///./src/index-build.ts","webpack:///./src/asch-web.ts","webpack:///./src/asch-api.ts","webpack:///./src/api.ts","webpack:///./src/providers/http-provider.ts","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/axios/lib/axios.js","webpack:///./node_modules/is-buffer/index.js","webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/axios/lib/helpers/btoa.js","webpack:///./node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/axios/lib/adapters/http.js","webpack:///external \"assert\"","webpack:///./node_modules/follow-redirects/node_modules/debug/src/index.js","webpack:///./node_modules/follow-redirects/node_modules/debug/src/browser.js","webpack:///./node_modules/follow-redirects/node_modules/ms/index.js","webpack:///./node_modules/follow-redirects/node_modules/debug/src/node.js","webpack:///external \"tty\"","webpack:///./node_modules/supports-color/index.js","webpack:///external \"os\"","webpack:///./node_modules/has-flag/index.js","webpack:///external \"zlib\"","webpack:///./node_modules/axios/lib/core/InterceptorManager.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/axios/lib/helpers/spread.js","webpack:///./src/providers/auto-provider.ts","webpack:///./src/asch-fee.ts","webpack:///./node_modules/bip39/index.js","webpack:///./node_modules/create-hash/index.js","webpack:///./node_modules/pbkdf2/index.js","webpack:///./node_modules/create-hmac/index.js","webpack:///./node_modules/pbkdf2/lib/async.js","webpack:///./node_modules/randombytes/index.js","webpack:///./node_modules/unorm/lib/unorm.js","webpack:///./node_modules/fast-sha256/sha256.js","webpack:///./node_modules/ripemd160/index.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/hash-base/index.js","webpack:///./node_modules/tweetnacl/nacl-fast.js","webpack:///./node_modules/bytebuffer/dist/bytebuffer-node.js","webpack:///./node_modules/long/dist/long.js","webpack:///./src/time/format.ts","webpack:///./src/validation.ts","webpack:///./src/asch-contract.ts","webpack:///./src/type.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isBuffer","toString","isArray","val","isObject","isFunction","forEach","obj","fn","length","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","arguments","extend","a","b","thisArg","trim","str","replace","require","XAS_PRECISION","CLIENT_DRIFT_SECONDS","LOCAL_NET_MAGIC","TEST_NET_MAGIC","MAIN_NET_MAGIC","URLS","server","development","production","test","accounts","mock","open","open2","url","new","count","deletates_voted","transactions","uncomfirmed","uncomfirmed_detail","blocks","detail","height","milestone","reward","supply","status","full","delegates","voters","list","forging_status","peers","version","loder","status_sync","v2","balances","pledges","transfers","proposals","gateways","validators","currencies_all","currencies_one","account_all","account_one","deposits","withdrawals","agents","clienteles","group","chains","uia","issuers_list","issuers_detail","assets_one","assets_all","assets_detail","contracts","code","metadata","states","results","constants_method","magics","Buffer","copyProps","src","dst","SafeBuffer","arg","encodingOrOffset","from","alloc","allocUnsafe","allocUnsafeSlow","TypeError","size","fill","encoding","buf","undefined","SlowBuffer","utils","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","headers","adapter","defaults","XMLHttpRequest","process","transformRequest","data","JSON","stringify","transformResponse","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","common","Accept","method","enhanceError","message","config","request","response","error","Error","MAX_ALLOC","Math","pow","checkBuffer","password","salt","iterations","keylen","__export","Provider","Network","args","Array","apply","createError","resolve","reject","encode","encodeURIComponent","params","paramsSerializer","serializedParams","parts","v","toISOString","push","join","indexOf","URL","http","https","assert","Writable","debug","SAFE_METHODS","GET","HEAD","OPTIONS","TRACE","eventHandlers","RedirectableRequest","options","responseCallback","this","_options","_ended","_ending","_redirectCount","_redirects","_requestBodyLength","_requestBodyBuffers","host","hostname","on","self","_onNativeResponse","_processResponse","pathname","path","searchPos","substring","search","_performRequest","startTimer","msecs","clearTimeout","_timeout","setTimeout","emit","clearTimer","wrap","protocols","maxRedirects","maxBodyLength","nativeProtocols","keys","scheme","protocol","nativeProtocol","wrappedProtocol","input","callback","urlStr","urlToOptions","err","assign","equal","end","noop","urlObject","startsWith","slice","hash","href","port","Number","event","_redirectable","write","_currentRequest","abort","currentRequest","setHeader","removeHeader","once","socket","substr","agent","_currentUrl","format","_isRedirect","buffers","writeNext","finished","trackRedirects","statusCode","location","followRedirects","removeAllListeners","header","redirectUrl","destroy","responseUrl","redirects","env","selectColor","namespace","charCodeAt","createDebug","colors","abs","prevTime","enabled","_len","_key","curr","Date","ms","diff","prev","coerce","unshift","index","match","formatter","formatters","splice","formatArgs","log","useColors","color","init","instances","delimiter","default","stack","disable","enable","namespaces","save","names","skips","split","len","RegExp","instance","humanize","load","__CANCEL__","Cancel","asch_fee_1","Constants","Slots","Utils","TransactionBuilder","buildTransaction","type","convertBigintMemberToString","String","transaction","fee","timestamp","senderPublicKey","senderId","getTime","convertSecondPwd","pwd","getKeys","publicKey","transferXAS","amount","to","setName","setSecondPassword","secondPwd","pubkey","setLock","unlock","setCouncil","members","min","max","updateInterval","registerAgent","setAgent","repealAgent","registerDelegate","voteDelegates","cleanVote","pledge","bandwidth","cpu","unPledge","registerIssuer","desc","registerAsset","symbol","maximum","precision","issueAsset","transferAsset","recipientId","registerDapp","link","icon","nlockNumber","updateBooker","dappId","addBooker","deleteBooker","depositDapp","currency","withdrawDapp","recipient","oid","signatures","createProposal","title","topic","content","endHeight","voteProposal","pid","activateProposal","registerGateway","gateway","openGatewayAccount","depositGateway","address","withdrawGateway","voteForCouncil","targetId","activCouncil","addMemberToCouncil","weight","removeMemberFromCouncil","replaceMemberFromCouncil","registerContract","consumeOwnerEnergy","gasLimit","callContract","contractName","methodName","methodArgs","enablePayGasInXAS","payContract","extraArgs","nameOrAddress","beginEpochTime","UTC","interval","time","floor","getEpochTime","getSlotNumber","epochTime","getRealTime","getSlotTime","slot","getNextSlot","getLastSlot","nextSlot","Bip39","sha256","RIPEMD160","nacl","ByteBuffer","Format","NORMAL_PREFIX","EPOCHTIME","ALPHABET","ALPHABET_MAP","BASE","LEADER","charAt","z","x","sha256Bytes","getHash","skipSignature","skipSecondSignature","getBytes","trs","bb","writeInt","writeLong","writeString","_i","_a","signature","signatureBuffer","idx","writeByte","secondSignature","signSignatureBuffer","flip","Uint8Array","toArrayBuffer","toBuffer","secret","getAddress","sign","detached","keypair","secretKey","signStr","id","getId","secondSign","keyPair","fromSeed","privateKey","fromHex","hex","toHex","bytes","base58Encode","payload","checksum","source","concat","digits","carry","j","k","q","generateMnemonic","h1","h2","update","digest","injectPromise","func","Promise","res","fullSign","unsignedTrx","secondSecret","trx","signBytes","console","verify","remove","signSignature","data2","senderPublicKeyBuffer","verifyBytes","isAddress","reverse","base58DecodeUnsafe","createAccount","mnemonic","fromSatoshi","rawAmount","toSatoshi","promiseInjector","scope","sizes","md5","sha1","sha224","sha384","sha512","rmd160","ripemd160","createHmac","checkParameters","defaultEncoding","DK","block1","copy","destPos","hLen","ceil","writeUInt32BE","T","U","browser","parseInt","util","inherits","CONTRACT_INITIALIZER_METHOD","TypeKind","ContractMetadataMananger","_className","_constVariables","Map","_interfaces","_customeTypes","_states","_methods","fromJSONObject","json","className","methods","set","customeTypes","toJSONObject","constVariables","dataInterfaces","values","updateMethod","delete","getCustomeType","getInterfaceType","getState","getMethod","registerConstVariables","variables","_this","variable","registerDataInterface","dataInterface","registerState","state","registerCustomeStateType","customeState","registerContractClass","contract","registerMethod","asch_web_1","AschWeb","asch_api_1","providers_1","asch_contract_1","builders_1","AschType","provider","api","defaultAccount","setProvider","setHttpProvider","net","Test","HTTPProvider","setSecret","setSecondSecret","ex","createContractFromJson","contractJson","AschContract","createContractFromName","getContractDetail","then","api_1","constants_1","Validation","AschAPI","_super","aschWeb","__extends","checkSecret","post","checkPublicKey","getAccountDetail","checkAddress","getPledges","queryBalances","queryVotedDelegates","generateAccount","getAccountCount","queryTransactions","offset","limit","orderBy","getTransactionDetail","tid","getUnconfirmedTransactionDetail","queryUnconfirmedTransactions","queryTransfers","ownerId","getBlockDetailById","getBlockDetailByHeight","getBlockDetailByHash","queryBlocks","getBlockDetailByIdOrHeight","idOrHeight","getBlocksHeight","getMilestone","getBlockReward","getXASSupply","getBlockchainStatus","getBlockFullDetailById","getBlockFullDetailByHeight","getDelegatesCount","getVotersOfDelegate","getDelegateDetailByAddress","getDelegateDetailByName","queryDelegates","getForgingStatusOfDelegate","queryPeers","getPeerVersion","getPeerDetail","ip","getLoaderStatus","getLoaderStatusSync","queryProposals","getProposalDetail","queryGateways","queryValidatorsOfGateway","queryAllCurrenciesOfGateways","queryCurrenciesOfGateway","getAccountOfGateway","queryAccountsOfGateway","querDepositsToGateway","querWithdrawalsFromGateway","queryAgents","queryClientelesOfAgent","queryGroups","querySideChainsRegistered","queryIssuers","getIssuerDetail","queryAssetsOfIssuer","querAllAssets","getAssetDetail","queryAssetBalances","queryContracts","getCodeOfContract","getMetadataOfContract","queryStatesOfContract","getResultOfContract","callConstantMethod","sent","broadcastTransaction","payDefaultContract","API","_provider","connect","isConnected","useHttpProvider","useAutoProvider","AutoProvider","uri","axios_1","provider_1","_url","_net","_instance","baseURL","headerForNet","addLogger","magic","Main","interceptors","use","toUpperCase","statusText","json2url","arr","postHeaders","toLowerCase","put","statusPage","catch","Axios","createInstance","defaultConfig","context","axios","instanceConfig","CancelToken","isCancel","all","promises","spread","constructor","readFloatLE","isSlowBuffer","_isBuffer","InterceptorManager","dispatchRequest","chain","promise","interceptor","fulfilled","rejected","shift","normalizedName","settle","buildURL","parseHeaders","isURLSameOrigin","btoa","requestData","requestHeaders","loadEvent","xDomain","XDomainRequest","onprogress","ontimeout","auth","username","Authorization","readyState","responseURL","responseHeaders","getAllResponseHeaders","responseType","responseText","onerror","cookies","xsrfValue","withCredentials","read","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","cancel","send","ignoreDuplicateOf","parsed","line","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","setAttribute","requestURL","chars","E","block","charCode","output","map","expires","domain","secure","cookie","toGMTString","decodeURIComponent","now","httpFollow","httpsFollow","zlib","pkg","timer","urlAuth","isHttps","httpsAgent","httpAgent","socketPath","transport","proxy","proxyEnv","proxyUrl","parsedProxyUrl","proxyUrlAuth","base64","req","aborted","stream","createUnzip","lastRequest","statusMessage","responseBuffer","chunk","responseData","__nwjs","_typeof","iterator","_console","lastC","storage","setItem","removeItem","getItem","DEBUG","documentElement","style","WebkitAppearance","firebug","exception","table","$1","localStorage","localstorage","h","w","y","plural","msAbs","isPlural","round","exec","parseFloat","isNaN","long","fmtLong","fmtShort","tty","inspectOpts","stderr","colorCode","prefix","hideDate","getDate","Boolean","isatty","fd","supportsColor","level","filter","reduce","prop","_","inspect","O","os","hasFlag","forceColor","getSupportLevel","hasBasic","has256","has16m","translateLevel","isTTY","platform","osRelease","release","versions","node","some","CI_NAME","TEAMCITY_VERSION","COLORTERM","TERM_PROGRAM_VERSION","TERM_PROGRAM","TERM","FORCE_COLOR","stdout","flag","argv","pos","terminatorPos","handlers","eject","transformData","isAbsoluteURL","combineURLs","throwIfCancellationRequested","throwIfRequested","reason","fns","relativeURL","executor","resolvePromise","token","feeFuncMap","1","2","3","4","5","6","7","8","9","10","11","12","13","14","100","101","102","103","200","201","202","203","204","205","300","301","302","400","401","402","403","404","500","501","502","503","504","600","601","602","trans","createHash","pbkdf2","pbkdf2Sync","randomBytes","unorm","CHINESE_SIMPLIFIED_WORDLIST","CHINESE_TRADITIONAL_WORDLIST","ENGLISH_WORDLIST","FRENCH_WORDLIST","ITALIAN_WORDLIST","JAPANESE_WORDLIST","KOREAN_WORDLIST","SPANISH_WORDLIST","DEFAULT_WORDLIST","INVALID_MNEMONIC","INVALID_ENTROPY","INVALID_CHECKSUM","lpad","padString","binaryToByte","bin","bytesToBinary","deriveChecksumBits","entropyBuffer","CS","mnemonicToSeed","mnemonicBuffer","nfkd","saltBuffer","mnemonicToEntropy","wordlist","words","bits","word","dividerIndex","entropyBits","checksumBits","entropyBytes","entropy","entropyToMnemonic","binary","mnemonicToSeedHex","strength","rng","validateMnemonic","wordlists","EN","JA","chinese_simplified","chinese_traditional","english","french","italian","japanese","korean","spanish","native","ZERO_BUF","sync","subtle","global","crypto","toBrowser","sha","sha-1","sha-256","sha-384","sha-512","checks","browserPbkdf2","algo","importKey","deriveBits","nextTick","out","prom","checkNative","resp","root","DEFAULT_FEATURE","CACHE_THRESHOLD","SBase","LBase","VBase","TBase","LCount","VCount","TCount","NCount","SCount","UChar","cp","feature","codepoint","cache","cacheCounter","strategies","next","needFeature","ret","base","SIndex","TIndex","f","udata","fromCharCode","reduceRight","strategy","isHighSurrogate","isLowSurrogate","prepFeature","getDecomp","isCompatibility","isExclude","getCanonicalClass","getComposite","following","UCharIterator","cursor","RecursDecompIterator","it","cano","canonical","resBuf","uchar","recursiveDecomp","decomp","DecompIterator","cc","inspt","CompIterator","procBuf","lastClass","composite","normalize","createIterator","0","60","824","61","62","65","768","769","770","771","772","774","775","776","777","778","780","783","785","803","805","808","66","817","67","807","68","813","69","816","70","71","72","814","73","74","75","76","77","78","79","779","795","80","82","83","806","84","85","804","86","87","88","89","90","97","98","99","104","105","106","107","108","109","110","111","112","114","115","116","117","118","119","120","121","122","160","168","834","170","175","178","179","180","181","184","185","186","188","189","190","192","193","194","195","196","197","198","199","206","207","209","210","211","212","213","214","216","217","218","219","220","221","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","241","242","243","244","245","246","248","249","250","251","252","253","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","296","297","298","299","303","304","306","307","308","309","310","311","313","314","315","316","317","318","319","320","323","324","325","326","327","328","329","332","333","334","335","336","337","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","416","417","431","432","439","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","478","479","480","481","482","483","486","487","488","489","490","491","492","493","494","495","496","497","498","499","505","506","507","508","509","510","511","66045","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","542","543","550","551","552","553","554","555","556","557","558","559","560","561","562","563","658","688","689","690","691","692","693","694","695","696","728","729","730","731","732","733","736","737","738","739","740","66272","773","781","782","784","786","787","788","789","790","791","792","793","794","796","797","798","799","800","801","802","809","810","811","812","815","818","819","820","821","822","823","825","826","827","828","829","830","831","832","833","835","836","837","838","839","840","841","842","843","844","845","846","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","884","890","894","900","901","902","903","904","905","906","908","910","911","912","913","917","919","921","927","929","933","937","938","939","940","941","942","943","944","945","949","951","953","959","961","965","969","970","971","972","973","974","976","977","978","979","980","981","982","1008","1009","1010","1012","1013","1017","66422","66423","66424","66425","66426","1024","1025","1027","1030","1031","1036","1037","1038","1040","1043","1045","1046","1047","1048","1049","1050","1054","1059","1063","1067","1069","1072","1075","1077","1078","1079","1080","1081","1082","1086","1091","1095","1099","1101","1104","1105","1107","1110","1111","1116","1117","1118","1140","1141","1142","1143","1155","1156","1157","1158","1159","1217","1218","1232","1233","1234","1235","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1272","1273","1280","1415","1425","1426","1427","1428","1429","1430","1431","1432","1433","1434","1435","1436","1437","1438","1439","1440","1441","1442","1443","1444","1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458","1459","1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1471","1473","1474","1476","1477","1479","1536","1552","1553","1554","1555","1556","1557","1558","1559","1560","1561","1562","1570","1571","1572","1573","1574","1575","1619","1620","1621","1608","1610","1611","1612","1613","1614","1615","1616","1617","1618","1622","1623","1624","1625","1626","1627","1628","1629","1630","1631","1648","1653","1654","1655","1656","1728","1729","1730","1746","1747","1749","1750","1751","1752","1753","1754","1755","1756","1759","1760","1761","1762","1763","1764","1767","1768","1770","1771","1772","1773","1792","1809","1840","1841","1842","1843","1844","1845","1846","1847","1848","1849","1850","1851","1852","1853","1854","1855","1856","1857","1858","1859","1860","1861","1862","1863","1864","1865","1866","2027","2028","2029","2030","2031","2032","2033","2034","2035","2048","2070","2071","2072","2073","2075","2076","2077","2078","2079","2080","2081","2082","2083","2085","2086","2087","2089","2090","2091","2092","2093","2137","2138","2139","2276","2277","2278","2279","2280","2281","2282","2283","2284","2285","2286","2287","2288","2289","2290","2291","2292","2293","2294","2295","2296","2297","2298","2299","2300","2301","2302","2303","2304","2344","2364","2345","2352","2353","2355","2356","2381","2385","2386","2387","2388","2392","2393","2394","2395","2396","2397","2398","2399","2492","2503","2494","2519","2507","2508","2509","2524","2525","2527","2560","2611","2614","2620","2637","2649","2650","2651","2654","2748","2765","68109","68111","68152","68153","68154","68159","68325","68326","2816","2876","2887","2878","2902","2903","2888","2891","2892","2893","2908","2909","2962","3031","2964","3014","3006","3015","3018","3019","3020","3021","3072","3142","3158","3144","3149","3157","3260","3263","3285","3264","3270","3266","3286","3271","3272","3274","3275","3277","3328","3398","3390","3415","3399","3402","3403","3404","3405","3530","3545","3535","3551","3546","3548","3549","3550","3584","3635","3640","3641","3642","3656","3657","3658","3659","3763","3768","3769","3784","3785","3786","3787","3804","3805","3840","3852","3864","3865","3893","3895","3897","3907","3917","3922","3927","3932","3945","3953","3954","3955","3956","3957","3958","3959","3960","3961","3962","3963","3964","3965","3968","3969","3970","3971","3972","3974","3975","3987","3997","4002","4007","4012","4025","4038","4096","4133","4142","4134","4151","4153","4154","4237","4348","69702","69759","69785","69818","69786","69787","69788","69797","69803","69817","4352","69888","69889","69890","69934","69935","69937","69927","69938","69939","69940","70003","70080","4608","70197","70198","70377","70378","4864","4957","4958","4959","70460","70471","70462","70487","70475","70476","70477","70502","70503","70504","70505","70506","70507","70508","70512","70513","70514","70515","70516","5120","70841","70832","70842","70845","70843","70844","70846","70850","70851","5376","71096","71087","71097","71098","71099","71103","71104","5632","71231","71350","71351","5888","5908","5940","6098","6109","6144","6313","6400","6457","6458","6459","6656","6679","6680","6752","6773","6774","6775","6776","6777","6778","6779","6780","6783","6832","6833","6834","6835","6836","6837","6838","6839","6840","6841","6842","6843","6844","6845","6912","6917","6965","6918","6919","6920","6921","6922","6923","6924","6925","6926","6929","6930","6964","6970","6971","6972","6973","6974","6975","6976","6977","6978","6979","6980","7019","7020","7021","7022","7023","7024","7025","7026","7027","7082","7083","7142","7154","7155","7168","7223","7376","7377","7378","7380","7381","7382","7383","7384","7385","7386","7387","7388","7389","7390","7391","7392","7394","7395","7396","7397","7398","7399","7400","7405","7412","7416","7417","7424","7468","7469","7470","7472","7473","7474","7475","7476","7477","7478","7479","7480","7481","7482","7484","7485","7486","7487","7488","7489","7490","7491","7492","7493","7494","7495","7496","7497","7498","7499","7500","7501","7503","7504","7505","7506","7507","7508","7509","7510","7511","7512","7513","7514","7515","7516","7517","7518","7519","7520","7521","7522","7523","7524","7525","7526","7527","7528","7529","7530","7544","7579","7580","7581","7582","7583","7584","7585","7586","7587","7588","7589","7590","7591","7592","7593","7594","7595","7596","7597","7598","7599","7600","7601","7602","7603","7604","7605","7606","7607","7608","7609","7610","7611","7612","7613","7614","7615","7616","7617","7618","7619","7620","7621","7622","7623","7624","7625","7626","7627","7628","7629","7630","7631","7632","7633","7634","7635","7636","7637","7638","7639","7640","7641","7642","7643","7644","7645","7646","7647","7648","7649","7650","7651","7652","7653","7654","7655","7656","7657","7658","7659","7660","7661","7662","7663","7664","7665","7666","7667","7668","7669","7676","7677","7678","7679","7680","7681","7682","7683","7684","7685","7686","7687","7688","7689","7690","7691","7692","7693","7694","7695","7696","7697","7698","7699","7700","7701","7702","7703","7704","7705","7706","7707","7708","7709","7710","7711","7712","7713","7714","7715","7716","7717","7718","7719","7720","7721","7722","7723","7724","7725","7726","7727","7728","7729","7730","7731","7732","7733","7734","7735","7736","7737","7738","7739","7740","7741","7742","7743","7744","7745","7746","7747","7748","7749","7750","7751","7752","7753","7754","7755","7756","7757","7758","7759","7760","7761","7762","7763","7764","7765","7766","7767","7768","7769","7770","7771","7772","7773","7774","7775","7776","7777","7778","7779","7780","7781","7782","7783","7784","7785","7786","7787","7788","7789","7790","7791","7792","7793","7794","7795","7796","7797","7798","7799","7800","7801","7802","7803","7804","7805","7806","7807","7808","7809","7810","7811","7812","7813","7814","7815","7816","7817","7818","7819","7820","7821","7822","7823","7824","7825","7826","7827","7828","7829","7830","7831","7832","7833","7834","7835","7840","7841","7842","7843","7844","7845","7846","7847","7848","7849","7850","7851","7852","7853","7854","7855","7856","7857","7858","7859","7860","7861","7862","7863","7864","7865","7866","7867","7868","7869","7870","7871","7872","7873","7874","7875","7876","7877","7878","7879","7880","7881","7882","7883","7884","7885","7886","7887","7888","7889","7890","7891","7892","7893","7894","7895","7896","7897","7898","7899","7900","7901","7902","7903","7904","7905","7906","7907","7908","7909","7910","7911","7912","7913","7914","7915","7916","7917","7918","7919","7920","7921","7922","7923","7924","7925","7926","7927","7928","7929","7936","7937","7938","7939","7940","7941","7942","7943","7944","7945","7946","7947","7948","7949","7950","7951","7952","7953","7954","7955","7956","7957","7960","7961","7962","7963","7964","7965","7968","7969","7970","7971","7972","7973","7974","7975","7976","7977","7978","7979","7980","7981","7982","7983","7984","7985","7986","7987","7988","7989","7990","7991","7992","7993","7994","7995","7996","7997","7998","7999","8000","8001","8002","8003","8004","8005","8008","8009","8010","8011","8012","8013","8016","8017","8018","8019","8020","8021","8022","8023","8025","8027","8029","8031","8032","8033","8034","8035","8036","8037","8038","8039","8040","8041","8042","8043","8044","8045","8046","8047","8048","8049","8050","8051","8052","8053","8054","8055","8056","8057","8058","8059","8060","8061","8064","8065","8066","8067","8068","8069","8070","8071","8072","8073","8074","8075","8076","8077","8078","8079","8080","8081","8082","8083","8084","8085","8086","8087","8088","8089","8090","8091","8092","8093","8094","8095","8096","8097","8098","8099","8100","8101","8102","8103","8104","8105","8106","8107","8108","8109","8110","8111","8112","8113","8114","8115","8116","8118","8119","8120","8121","8122","8123","8124","8125","8126","8127","8128","8129","8130","8131","8132","8134","8135","8136","8137","8138","8139","8140","8141","8142","8143","8144","8145","8146","8147","8150","8151","8152","8153","8154","8155","8157","8158","8159","8160","8161","8162","8163","8164","8165","8166","8167","8168","8169","8170","8171","8172","8173","8174","8175","8178","8179","8180","8182","8183","8184","8185","8186","8187","8188","8189","8190","8192","8193","8194","8195","8196","8197","8198","8199","8200","8201","8202","8209","8215","8228","8229","8230","8239","8243","8244","8246","8247","8252","8254","8263","8264","8265","8279","8287","8304","8305","8308","8309","8310","8311","8312","8313","8314","8315","8316","8317","8318","8319","8320","8321","8322","8323","8324","8325","8326","8327","8328","8329","8330","8331","8332","8333","8334","8336","8337","8338","8339","8340","8341","8342","8343","8344","8345","8346","8347","8348","8360","8400","8401","8402","8403","8404","8405","8406","8407","8408","8409","8410","8411","8412","8417","8421","8422","8423","8424","8425","8426","8427","8428","8429","8430","8431","8432","8448","8449","8450","8451","8453","8454","8455","8457","8458","8459","8460","8461","8462","8463","8464","8465","8466","8467","8469","8470","8473","8474","8475","8476","8477","8480","8481","8482","8484","8486","8488","8490","8491","8492","8493","8495","8496","8497","8499","8500","8501","8502","8503","8504","8505","8507","8508","8509","8510","8511","8512","8517","8518","8519","8520","8521","8528","8529","8530","8531","8532","8533","8534","8535","8536","8537","8538","8539","8540","8541","8542","8543","8544","8545","8546","8547","8548","8549","8550","8551","8552","8553","8554","8555","8556","8557","8558","8559","8560","8561","8562","8563","8564","8565","8566","8567","8568","8569","8570","8571","8572","8573","8574","8575","8585","8592","8594","8596","8602","8603","8622","8653","8654","8655","8656","8658","8660","8704","8707","8708","8712","8713","8715","8716","8739","8740","8741","8742","8748","8749","8751","8752","8764","8769","8771","8772","8773","8775","8776","8777","8781","8800","8801","8802","8804","8805","8813","8814","8815","8816","8817","8818","8819","8820","8821","8822","8823","8824","8825","8826","8827","8828","8829","8832","8833","8834","8835","8836","8837","8838","8839","8840","8841","8849","8850","8866","8872","8873","8875","8876","8877","8878","8879","8882","8883","8884","8885","8928","8929","8930","8931","8938","8939","8940","8941","8960","9001","9002","9216","9312","9313","9314","9315","9316","9317","9318","9319","9320","9321","9322","9323","9324","9325","9326","9327","9328","9329","9330","9331","9332","9333","9334","9335","9336","9337","9338","9339","9340","9341","9342","9343","9344","9345","9346","9347","9348","9349","9350","9351","9352","9353","9354","9355","9356","9357","9358","9359","9360","9361","9362","9363","9364","9365","9366","9367","9368","9369","9370","9371","9372","9373","9374","9375","9376","9377","9378","9379","9380","9381","9382","9383","9384","9385","9386","9387","9388","9389","9390","9391","9392","9393","9394","9395","9396","9397","9398","9399","9400","9401","9402","9403","9404","9405","9406","9407","9408","9409","9410","9411","9412","9413","9414","9415","9416","9417","9418","9419","9420","9421","9422","9423","9424","9425","9426","9427","9428","9429","9430","9431","9432","9433","9434","9435","9436","9437","9438","9439","9440","9441","9442","9443","9444","9445","9446","9447","9448","9449","9450","10752","10764","10868","10869","10870","10972","11264","11388","11389","11503","11504","11505","11520","11631","11647","11744","11745","11746","11747","11748","11749","11750","11751","11752","11753","11754","11755","11756","11757","11758","11759","11760","11761","11762","11763","11764","11765","11766","11767","11768","11769","11770","11771","11772","11773","11774","11775","11776","11935","12019","12032","12033","12034","12035","12036","12037","12038","12039","12040","12041","12042","12043","12044","12045","12046","12047","12048","12049","12050","12051","12052","12053","12054","12055","12056","12057","12058","12059","12060","12061","12062","12063","12064","12065","12066","12067","12068","12069","12070","12071","12072","12073","12074","12075","12076","12077","12078","12079","12080","12081","12082","12083","12084","12085","12086","12087","12088","12089","12090","12091","12092","12093","12094","12095","12096","12097","12098","12099","12100","12101","12102","12103","12104","12105","12106","12107","12108","12109","12110","12111","12112","12113","12114","12115","12116","12117","12118","12119","12120","12121","12122","12123","12124","12125","12126","12127","12128","12129","12130","12131","12132","12133","12134","12135","12136","12137","12138","12139","12140","12141","12142","12143","12144","12145","12146","12147","12148","12149","12150","12151","12152","12153","12154","12155","12156","12157","12158","12159","12160","12161","12162","12163","12164","12165","12166","12167","12168","12169","12170","12171","12172","12173","12174","12175","12176","12177","12178","12179","12180","12181","12182","12183","12184","12185","12186","12187","12188","12189","12190","12191","12192","12193","12194","12195","12196","12197","12198","12199","12200","12201","12202","12203","12204","12205","12206","12207","12208","12209","12210","12211","12212","12213","12214","12215","12216","12217","12218","12219","12220","12221","12222","12223","12224","12225","12226","12227","12228","12229","12230","12231","12232","12233","12234","12235","12236","12237","12238","12239","12240","12241","12242","12243","12244","12245","12288","12330","12331","12332","12333","12334","12335","12342","12344","12345","12346","12358","12441","12363","12364","12365","12366","12367","12368","12369","12370","12371","12372","12373","12374","12375","12376","12377","12378","12379","12380","12381","12382","12383","12384","12385","12386","12388","12389","12390","12391","12392","12393","12399","12442","12400","12401","12402","12403","12404","12405","12406","12407","12408","12409","12410","12411","12412","12413","12436","12443","12444","12445","12446","12447","12454","12459","12460","12461","12462","12463","12464","12465","12466","12467","12468","12469","12470","12471","12472","12473","12474","12475","12476","12477","12478","12479","12480","12481","12482","12484","12485","12486","12487","12488","12489","12495","12496","12497","12498","12499","12500","12501","12502","12503","12504","12505","12506","12507","12508","12509","12527","12528","12529","12530","12532","12535","12536","12537","12538","12541","12542","12543","12544","12593","12594","12595","12596","12597","12598","12599","12600","12601","12602","12603","12604","12605","12606","12607","12608","12609","12610","12611","12612","12613","12614","12615","12616","12617","12618","12619","12620","12621","12622","12623","12624","12625","12626","12627","12628","12629","12630","12631","12632","12633","12634","12635","12636","12637","12638","12639","12640","12641","12642","12643","12644","12645","12646","12647","12648","12649","12650","12651","12652","12653","12654","12655","12656","12657","12658","12659","12660","12661","12662","12663","12664","12665","12666","12667","12668","12669","12670","12671","12672","12673","12674","12675","12676","12677","12678","12679","12680","12681","12682","12683","12684","12685","12686","12690","12691","12692","12693","12694","12695","12696","12697","12698","12699","12700","12701","12702","12703","12800","12801","12802","12803","12804","12805","12806","12807","12808","12809","12810","12811","12812","12813","12814","12815","12816","12817","12818","12819","12820","12821","12822","12823","12824","12825","12826","12827","12828","12829","12830","12832","12833","12834","12835","12836","12837","12838","12839","12840","12841","12842","12843","12844","12845","12846","12847","12848","12849","12850","12851","12852","12853","12854","12855","12856","12857","12858","12859","12860","12861","12862","12863","12864","12865","12866","12867","12868","12869","12870","12871","12880","12881","12882","12883","12884","12885","12886","12887","12888","12889","12890","12891","12892","12893","12894","12895","12896","12897","12898","12899","12900","12901","12902","12903","12904","12905","12906","12907","12908","12909","12910","12911","12912","12913","12914","12915","12916","12917","12918","12919","12920","12921","12922","12923","12924","12925","12926","12928","12929","12930","12931","12932","12933","12934","12935","12936","12937","12938","12939","12940","12941","12942","12943","12944","12945","12946","12947","12948","12949","12950","12951","12952","12953","12954","12955","12956","12957","12958","12959","12960","12961","12962","12963","12964","12965","12966","12967","12968","12969","12970","12971","12972","12973","12974","12975","12976","12977","12978","12979","12980","12981","12982","12983","12984","12985","12986","12987","12988","12989","12990","12991","12992","12993","12994","12995","12996","12997","12998","12999","13000","13001","13002","13003","13004","13005","13006","13007","13008","13009","13010","13011","13012","13013","13014","13015","13016","13017","13018","13019","13020","13021","13022","13023","13024","13025","13026","13027","13028","13029","13030","13031","13032","13033","13034","13035","13036","13037","13038","13039","13040","13041","13042","13043","13044","13045","13046","13047","13048","13049","13050","13051","13052","13053","13054","13056","13057","13058","13059","13060","13061","13062","13063","13064","13065","13066","13067","13068","13069","13070","13071","13072","13073","13074","13075","13076","13077","13078","13079","13080","13081","13082","13083","13084","13085","13086","13087","13088","13089","13090","13091","13092","13093","13094","13095","13096","13097","13098","13099","13100","13101","13102","13103","13104","13105","13106","13107","13108","13109","13110","13111","13112","13113","13114","13115","13116","13117","13118","13119","13120","13121","13122","13123","13124","13125","13126","13127","13128","13129","13130","13131","13132","13133","13134","13135","13136","13137","13138","13139","13140","13141","13142","13143","13144","13145","13146","13147","13148","13149","13150","13151","13152","13153","13154","13155","13156","13157","13158","13159","13160","13161","13162","13163","13164","13165","13166","13167","13168","13169","13170","13171","13172","13173","13174","13175","13176","13177","13178","13179","13180","13181","13182","13183","13184","13185","13186","13187","13188","13189","13190","13191","13192","13193","13194","13195","13196","13197","13198","13199","13200","13201","13202","13203","13204","13205","13206","13207","13208","13209","13210","13211","13212","13213","13214","13215","13216","13217","13218","13219","13220","13221","13222","13223","13224","13225","13226","13227","13228","13229","13230","13231","13232","13233","13234","13235","13236","13237","13238","13239","13240","13241","13242","13243","13244","13245","13246","13247","13248","13249","13250","13251","13252","13253","13254","13255","13256","13257","13258","13259","13260","13261","13262","13263","13264","13265","13266","13267","13268","13269","13270","13271","13272","13273","13274","13275","13276","13277","13278","13279","13280","13281","13282","13283","13284","13285","13286","13287","13288","13289","13290","13291","13292","13293","13294","13295","13296","13297","13298","13299","13300","13301","13302","13303","13304","13305","13306","13307","13308","13309","13310","13311","27136","92912","92913","92914","92915","92916","27392","92976","92977","92978","92979","92980","92981","92982","42496","42607","42612","42613","42614","42615","42616","42617","42618","42619","42620","42621","42652","42653","42655","42736","42737","42752","42864","43000","43001","43008","43014","43204","43232","43233","43234","43235","43236","43237","43238","43239","43240","43241","43242","43243","43244","43245","43246","43247","43248","43249","43264","43307","43308","43309","43347","43443","43456","43520","43696","43698","43699","43700","43703","43704","43710","43711","43713","43766","43776","43868","43869","43870","43871","44013","48128","113822","53504","119134","119135","119136","119137","119138","119139","119140","119141","119142","119143","119144","119145","119149","119150","119151","119152","119153","119154","119163","119164","119165","119166","119167","119168","119169","119170","119173","119174","119175","119176","119177","119178","119179","119210","119211","119212","119213","119227","119228","119229","119230","119231","119232","53760","119362","119363","119364","54272","119808","119809","119810","119811","119812","119813","119814","119815","119816","119817","119818","119819","119820","119821","119822","119823","119824","119825","119826","119827","119828","119829","119830","119831","119832","119833","119834","119835","119836","119837","119838","119839","119840","119841","119842","119843","119844","119845","119846","119847","119848","119849","119850","119851","119852","119853","119854","119855","119856","119857","119858","119859","119860","119861","119862","119863","119864","119865","119866","119867","119868","119869","119870","119871","119872","119873","119874","119875","119876","119877","119878","119879","119880","119881","119882","119883","119884","119885","119886","119887","119888","119889","119890","119891","119892","119894","119895","119896","119897","119898","119899","119900","119901","119902","119903","119904","119905","119906","119907","119908","119909","119910","119911","119912","119913","119914","119915","119916","119917","119918","119919","119920","119921","119922","119923","119924","119925","119926","119927","119928","119929","119930","119931","119932","119933","119934","119935","119936","119937","119938","119939","119940","119941","119942","119943","119944","119945","119946","119947","119948","119949","119950","119951","119952","119953","119954","119955","119956","119957","119958","119959","119960","119961","119962","119963","119964","119966","119967","119970","119973","119974","119977","119978","119979","119980","119982","119983","119984","119985","119986","119987","119988","119989","119990","119991","119992","119993","119995","119997","119998","119999","120000","120001","120002","120003","120005","120006","120007","120008","120009","120010","120011","120012","120013","120014","120015","120016","120017","120018","120019","120020","120021","120022","120023","120024","120025","120026","120027","120028","120029","120030","120031","120032","120033","120034","120035","120036","120037","120038","120039","120040","120041","120042","120043","120044","120045","120046","120047","120048","120049","120050","120051","120052","120053","120054","120055","120056","120057","120058","120059","120060","120061","120062","120063","54528","120064","120065","120066","120067","120068","120069","120071","120072","120073","120074","120077","120078","120079","120080","120081","120082","120083","120084","120086","120087","120088","120089","120090","120091","120092","120094","120095","120096","120097","120098","120099","120100","120101","120102","120103","120104","120105","120106","120107","120108","120109","120110","120111","120112","120113","120114","120115","120116","120117","120118","120119","120120","120121","120123","120124","120125","120126","120128","120129","120130","120131","120132","120134","120138","120139","120140","120141","120142","120143","120144","120146","120147","120148","120149","120150","120151","120152","120153","120154","120155","120156","120157","120158","120159","120160","120161","120162","120163","120164","120165","120166","120167","120168","120169","120170","120171","120172","120173","120174","120175","120176","120177","120178","120179","120180","120181","120182","120183","120184","120185","120186","120187","120188","120189","120190","120191","120192","120193","120194","120195","120196","120197","120198","120199","120200","120201","120202","120203","120204","120205","120206","120207","120208","120209","120210","120211","120212","120213","120214","120215","120216","120217","120218","120219","120220","120221","120222","120223","120224","120225","120226","120227","120228","120229","120230","120231","120232","120233","120234","120235","120236","120237","120238","120239","120240","120241","120242","120243","120244","120245","120246","120247","120248","120249","120250","120251","120252","120253","120254","120255","120256","120257","120258","120259","120260","120261","120262","120263","120264","120265","120266","120267","120268","120269","120270","120271","120272","120273","120274","120275","120276","120277","120278","120279","120280","120281","120282","120283","120284","120285","120286","120287","120288","120289","120290","120291","120292","120293","120294","120295","120296","120297","120298","120299","120300","120301","120302","120303","120304","120305","120306","120307","120308","120309","120310","120311","120312","120313","120314","120315","120316","120317","120318","120319","54784","120320","120321","120322","120323","120324","120325","120326","120327","120328","120329","120330","120331","120332","120333","120334","120335","120336","120337","120338","120339","120340","120341","120342","120343","120344","120345","120346","120347","120348","120349","120350","120351","120352","120353","120354","120355","120356","120357","120358","120359","120360","120361","120362","120363","120364","120365","120366","120367","120368","120369","120370","120371","120372","120373","120374","120375","120376","120377","120378","120379","120380","120381","120382","120383","120384","120385","120386","120387","120388","120389","120390","120391","120392","120393","120394","120395","120396","120397","120398","120399","120400","120401","120402","120403","120404","120405","120406","120407","120408","120409","120410","120411","120412","120413","120414","120415","120416","120417","120418","120419","120420","120421","120422","120423","120424","120425","120426","120427","120428","120429","120430","120431","120432","120433","120434","120435","120436","120437","120438","120439","120440","120441","120442","120443","120444","120445","120446","120447","120448","120449","120450","120451","120452","120453","120454","120455","120456","120457","120458","120459","120460","120461","120462","120463","120464","120465","120466","120467","120468","120469","120470","120471","120472","120473","120474","120475","120476","120477","120478","120479","120480","120481","120482","120483","120484","120485","120488","120489","120490","120491","120492","120493","120494","120495","120496","120497","120498","120499","120500","120501","120502","120503","120504","120505","120506","120507","120508","120509","120510","120511","120512","120513","120514","120515","120516","120517","120518","120519","120520","120521","120522","120523","120524","120525","120526","120527","120528","120529","120530","120531","120532","120533","120534","120535","120536","120537","120538","120539","120540","120541","120542","120543","120544","120545","120546","120547","120548","120549","120550","120551","120552","120553","120554","120555","120556","120557","120558","120559","120560","120561","120562","120563","120564","120565","120566","120567","120568","120569","120570","120571","120572","120573","120574","120575","55040","120576","120577","120578","120579","120580","120581","120582","120583","120584","120585","120586","120587","120588","120589","120590","120591","120592","120593","120594","120595","120596","120597","120598","120599","120600","120601","120602","120603","120604","120605","120606","120607","120608","120609","120610","120611","120612","120613","120614","120615","120616","120617","120618","120619","120620","120621","120622","120623","120624","120625","120626","120627","120628","120629","120630","120631","120632","120633","120634","120635","120636","120637","120638","120639","120640","120641","120642","120643","120644","120645","120646","120647","120648","120649","120650","120651","120652","120653","120654","120655","120656","120657","120658","120659","120660","120661","120662","120663","120664","120665","120666","120667","120668","120669","120670","120671","120672","120673","120674","120675","120676","120677","120678","120679","120680","120681","120682","120683","120684","120685","120686","120687","120688","120689","120690","120691","120692","120693","120694","120695","120696","120697","120698","120699","120700","120701","120702","120703","120704","120705","120706","120707","120708","120709","120710","120711","120712","120713","120714","120715","120716","120717","120718","120719","120720","120721","120722","120723","120724","120725","120726","120727","120728","120729","120730","120731","120732","120733","120734","120735","120736","120737","120738","120739","120740","120741","120742","120743","120744","120745","120746","120747","120748","120749","120750","120751","120752","120753","120754","120755","120756","120757","120758","120759","120760","120761","120762","120763","120764","120765","120766","120767","120768","120769","120770","120771","120772","120773","120774","120775","120776","120777","120778","120779","120782","120783","120784","120785","120786","120787","120788","120789","120790","120791","120792","120793","120794","120795","120796","120797","120798","120799","120800","120801","120802","120803","120804","120805","120806","120807","120808","120809","120810","120811","120812","120813","120814","120815","120816","120817","120818","120819","120820","120821","120822","120823","120824","120825","120826","120827","120828","120829","120830","120831","59392","125136","125137","125138","125139","125140","125141","125142","60928","126464","126465","126466","126467","126469","126470","126471","126472","126473","126474","126475","126476","126477","126478","126479","126480","126481","126482","126483","126484","126485","126486","126487","126488","126489","126490","126491","126492","126493","126494","126495","126497","126498","126500","126503","126505","126506","126507","126508","126509","126510","126511","126512","126513","126514","126516","126517","126518","126519","126521","126523","126530","126535","126537","126539","126541","126542","126543","126545","126546","126548","126551","126553","126555","126557","126559","126561","126562","126564","126567","126568","126569","126570","126572","126573","126574","126575","126576","126577","126578","126580","126581","126582","126583","126585","126586","126587","126588","126590","126592","126593","126594","126595","126596","126597","126598","126599","126600","126601","126603","126604","126605","126606","126607","126608","126609","126610","126611","126612","126613","126614","126615","126616","126617","126618","126619","126625","126626","126627","126629","126630","126631","126632","126633","126635","126636","126637","126638","126639","126640","126641","126642","126643","126644","126645","126646","126647","126648","126649","126650","126651","61696","127232","127233","127234","127235","127236","127237","127238","127239","127240","127241","127242","127248","127249","127250","127251","127252","127253","127254","127255","127256","127257","127258","127259","127260","127261","127262","127263","127264","127265","127266","127267","127268","127269","127270","127271","127272","127273","127274","127275","127276","127277","127278","127280","127281","127282","127283","127284","127285","127286","127287","127288","127289","127290","127291","127292","127293","127294","127295","127296","127297","127298","127299","127300","127301","127302","127303","127304","127305","127306","127307","127308","127309","127310","127311","127338","127339","127376","61952","127488","127489","127490","127504","127505","127506","127507","127508","127509","127510","127511","127512","127513","127514","127515","127516","127517","127518","127519","127520","127521","127522","127523","127524","127525","127526","127527","127528","127529","127530","127531","127532","127533","127534","127535","127536","127537","127538","127539","127540","127541","127542","127543","127544","127545","127546","127552","127553","127554","127555","127556","127557","127558","127559","127560","127568","127569","63488","194560","194561","194562","194563","194564","194565","194566","194567","194568","194569","194570","194571","194572","194573","194574","194575","194576","194577","194578","194579","194580","194581","194582","194583","194584","194585","194586","194587","194588","194589","194590","194591","194592","194593","194594","194595","194596","194597","194598","194599","194600","194601","194602","194603","194604","194605","194606","194607","194608","194609","194610","194611","194612","194613","194614","194615","194616","194617","194618","194619","194620","194621","194622","194623","194624","194625","194626","194627","194628","194629","194630","194631","194632","194633","194634","194635","194636","194637","194638","194639","194640","194641","194642","194643","194644","194645","194646","194647","194648","194649","194650","194651","194652","194653","194654","194655","194656","194657","194658","194659","194660","194661","194662","194663","194664","194665","194666","194667","194668","194669","194670","194671","194672","194673","194674","194675","194676","194677","194678","194679","194680","194681","194682","194683","194684","194685","194686","194687","194688","194689","194690","194691","194692","194693","194694","194695","194696","194697","194698","194699","194700","194701","194702","194703","194704","194705","194706","194707","194708","194709","194710","194711","194712","194713","194714","194715","194716","194717","194718","194719","194720","194721","194722","194723","194724","194725","194726","194727","194728","194729","194730","194731","194732","194733","194734","194735","194736","194737","194738","194739","194740","194741","194742","194743","194744","194745","194746","194747","194748","194749","194750","194751","194752","194753","194754","194755","194756","194757","194758","194759","194760","194761","194762","194763","194764","194765","194766","194767","194768","194769","194770","194771","194772","194773","194774","194775","194776","194777","194778","194779","194780","194781","194782","194783","194784","194785","194786","194787","194788","194789","194790","194791","194792","194793","194794","194795","194796","194797","194798","194799","194800","194801","194802","194803","194804","194805","194806","194807","194808","194809","194810","194811","194812","194813","194814","194815","63744","63745","63746","63747","63748","63749","63750","63751","63752","63753","63754","63755","63756","63757","63758","63759","63760","63761","63762","63763","63764","63765","63766","63767","63768","63769","63770","63771","63772","63773","63774","63775","63776","63777","63778","63779","63780","63781","63782","63783","63784","63785","63786","63787","63788","63789","63790","63791","63792","63793","63794","63795","63796","63797","63798","63799","63800","63801","63802","63803","63804","63805","63806","63807","63808","63809","63810","63811","63812","63813","63814","63815","63816","63817","63818","63819","63820","63821","63822","63823","63824","63825","63826","63827","63828","63829","63830","63831","63832","63833","63834","63835","63836","63837","63838","63839","63840","63841","63842","63843","63844","63845","63846","63847","63848","63849","63850","63851","63852","63853","63854","63855","63856","63857","63858","63859","63860","63861","63862","63863","63864","63865","63866","63867","63868","63869","63870","63871","63872","63873","63874","63875","63876","63877","63878","63879","63880","63881","63882","63883","63884","63885","63886","63887","63888","63889","63890","63891","63892","63893","63894","63895","63896","63897","63898","63899","63900","63901","63902","63903","63904","63905","63906","63907","63908","63909","63910","63911","63912","63913","63914","63915","63916","63917","63918","63919","63920","63921","63922","63923","63924","63925","63926","63927","63928","63929","63930","63931","63932","63933","63934","63935","63936","63937","63938","63939","63940","63941","63942","63943","63944","63945","63946","63947","63948","63949","63950","63951","63952","63953","63954","63955","63956","63957","63958","63959","63960","63961","63962","63963","63964","63965","63966","63967","63968","63969","63970","63971","63972","63973","63974","63975","63976","63977","63978","63979","63980","63981","63982","63983","63984","63985","63986","63987","63988","63989","63990","63991","63992","63993","63994","63995","63996","63997","63998","63999","194816","194817","194818","194819","194820","194821","194822","194823","194824","194825","194826","194827","194828","194829","194830","194831","194832","194833","194834","194835","194836","194837","194838","194839","194840","194841","194842","194843","194844","194845","194846","194847","194848","194849","194850","194851","194852","194853","194854","194855","194856","194857","194858","194859","194860","194861","194862","194863","194864","194865","194866","194867","194868","194869","194870","194871","194872","194873","194874","194875","194876","194877","194878","194879","194880","194881","194882","194883","194884","194885","194886","194887","194888","194889","194890","194891","194892","194893","194894","194895","194896","194897","194898","194899","194900","194901","194902","194903","194904","194905","194906","194907","194908","194909","194910","194911","194912","194913","194914","194915","194916","194917","194918","194919","194920","194921","194922","194923","194924","194925","194926","194927","194928","194929","194930","194931","194932","194933","194934","194935","194936","194937","194938","194939","194940","194941","194942","194943","194944","194945","194946","194947","194948","194949","194950","194951","194952","194953","194954","194955","194956","194957","194958","194959","194960","194961","194962","194963","194964","194965","194966","194967","194968","194969","194970","194971","194972","194973","194974","194975","194976","194977","194978","194979","194980","194981","194982","194983","194984","194985","194986","194987","194988","194989","194990","194991","194992","194993","194994","194995","194996","194997","194998","194999","195000","195001","195002","195003","195004","195005","195006","195007","195008","195009","195010","195011","195012","195013","195014","195015","195016","195017","195018","195019","195020","195021","195022","195023","195024","195025","195026","195027","195028","195029","195030","195031","195032","195033","195034","195035","195036","195037","195038","195039","195040","195041","195042","195043","195044","195045","195046","195047","195048","195049","195050","195051","195052","195053","195054","195055","195056","195057","195058","195059","195060","195061","195062","195063","195064","195065","195066","195067","195068","195069","195070","195071","64000","64001","64002","64003","64004","64005","64006","64007","64008","64009","64010","64011","64012","64013","64016","64018","64021","64022","64023","64024","64025","64026","64027","64028","64029","64030","64032","64034","64037","64038","64042","64043","64044","64045","64046","64047","64048","64049","64050","64051","64052","64053","64054","64055","64056","64057","64058","64059","64060","64061","64062","64063","64064","64065","64066","64067","64068","64069","64070","64071","64072","64073","64074","64075","64076","64077","64078","64079","64080","64081","64082","64083","64084","64085","64086","64087","64088","64089","64090","64091","64092","64093","64094","64095","64096","64097","64098","64099","64100","64101","64102","64103","64104","64105","64106","64107","64108","64109","64112","64113","64114","64115","64116","64117","64118","64119","64120","64121","64122","64123","64124","64125","64126","64127","64128","64129","64130","64131","64132","64133","64134","64135","64136","64137","64138","64139","64140","64141","64142","64143","64144","64145","64146","64147","64148","64149","64150","64151","64152","64153","64154","64155","64156","64157","64158","64159","64160","64161","64162","64163","64164","64165","64166","64167","64168","64169","64170","64171","64172","64173","64174","64175","64176","64177","64178","64179","64180","64181","64182","64183","64184","64185","64186","64187","64188","64189","64190","64191","64192","64193","64194","64195","64196","64197","64198","64199","64200","64201","64202","64203","64204","64205","64206","64207","64208","64209","64210","64211","64212","64213","64214","64215","64216","64217","195072","195073","195074","195075","195076","195077","195078","195079","195080","195081","195082","195083","195084","195085","195086","195087","195088","195089","195090","195091","195092","195093","195094","195095","195096","195097","195098","195099","195100","195101","64256","64257","64258","64259","64260","64261","64262","64275","64276","64277","64278","64279","64285","64286","64287","64288","64289","64290","64291","64292","64293","64294","64295","64296","64297","64298","64299","64300","64301","64302","64303","64304","64305","64306","64307","64308","64309","64310","64312","64313","64314","64315","64316","64318","64320","64321","64323","64324","64326","64327","64328","64329","64330","64331","64332","64333","64334","64335","64336","64337","64338","64339","64340","64341","64342","64343","64344","64345","64346","64347","64348","64349","64350","64351","64352","64353","64354","64355","64356","64357","64358","64359","64360","64361","64362","64363","64364","64365","64366","64367","64368","64369","64370","64371","64372","64373","64374","64375","64376","64377","64378","64379","64380","64381","64382","64383","64384","64385","64386","64387","64388","64389","64390","64391","64392","64393","64394","64395","64396","64397","64398","64399","64400","64401","64402","64403","64404","64405","64406","64407","64408","64409","64410","64411","64412","64413","64414","64415","64416","64417","64418","64419","64420","64421","64422","64423","64424","64425","64426","64427","64428","64429","64430","64431","64432","64433","64467","64468","64469","64470","64471","64472","64473","64474","64475","64476","64477","64478","64479","64480","64481","64482","64483","64484","64485","64486","64487","64488","64489","64490","64491","64492","64493","64494","64495","64496","64497","64498","64499","64500","64501","64502","64503","64504","64505","64506","64507","64508","64509","64510","64511","64512","64513","64514","64515","64516","64517","64518","64519","64520","64521","64522","64523","64524","64525","64526","64527","64528","64529","64530","64531","64532","64533","64534","64535","64536","64537","64538","64539","64540","64541","64542","64543","64544","64545","64546","64547","64548","64549","64550","64551","64552","64553","64554","64555","64556","64557","64558","64559","64560","64561","64562","64563","64564","64565","64566","64567","64568","64569","64570","64571","64572","64573","64574","64575","64576","64577","64578","64579","64580","64581","64582","64583","64584","64585","64586","64587","64588","64589","64590","64591","64592","64593","64594","64595","64596","64597","64598","64599","64600","64601","64602","64603","64604","64605","64606","64607","64608","64609","64610","64611","64612","64613","64614","64615","64616","64617","64618","64619","64620","64621","64622","64623","64624","64625","64626","64627","64628","64629","64630","64631","64632","64633","64634","64635","64636","64637","64638","64639","64640","64641","64642","64643","64644","64645","64646","64647","64648","64649","64650","64651","64652","64653","64654","64655","64656","64657","64658","64659","64660","64661","64662","64663","64664","64665","64666","64667","64668","64669","64670","64671","64672","64673","64674","64675","64676","64677","64678","64679","64680","64681","64682","64683","64684","64685","64686","64687","64688","64689","64690","64691","64692","64693","64694","64695","64696","64697","64698","64699","64700","64701","64702","64703","64704","64705","64706","64707","64708","64709","64710","64711","64712","64713","64714","64715","64716","64717","64718","64719","64720","64721","64722","64723","64724","64725","64726","64727","64728","64729","64730","64731","64732","64733","64734","64735","64736","64737","64738","64739","64740","64741","64742","64743","64744","64745","64746","64747","64748","64749","64750","64751","64752","64753","64754","64755","64756","64757","64758","64759","64760","64761","64762","64763","64764","64765","64766","64767","64768","64769","64770","64771","64772","64773","64774","64775","64776","64777","64778","64779","64780","64781","64782","64783","64784","64785","64786","64787","64788","64789","64790","64791","64792","64793","64794","64795","64796","64797","64798","64799","64800","64801","64802","64803","64804","64805","64806","64807","64808","64809","64810","64811","64812","64813","64814","64815","64816","64817","64818","64819","64820","64821","64822","64823","64824","64825","64826","64827","64828","64829","64848","64849","64850","64851","64852","64853","64854","64855","64856","64857","64858","64859","64860","64861","64862","64863","64864","64865","64866","64867","64868","64869","64870","64871","64872","64873","64874","64875","64876","64877","64878","64879","64880","64881","64882","64883","64884","64885","64886","64887","64888","64889","64890","64891","64892","64893","64894","64895","64896","64897","64898","64899","64900","64901","64902","64903","64904","64905","64906","64907","64908","64909","64910","64911","64914","64915","64916","64917","64918","64919","64920","64921","64922","64923","64924","64925","64926","64927","64928","64929","64930","64931","64932","64933","64934","64935","64936","64937","64938","64939","64940","64941","64942","64943","64944","64945","64946","64947","64948","64949","64950","64951","64952","64953","64954","64955","64956","64957","64958","64959","64960","64961","64962","64963","64964","64965","64966","64967","65008","65009","65010","65011","65012","65013","65014","65015","65016","65017","65018","65019","65020","65024","65040","65041","65042","65043","65044","65045","65046","65047","65048","65049","65056","65057","65058","65059","65060","65061","65062","65063","65064","65065","65066","65067","65068","65069","65072","65073","65074","65075","65076","65077","65078","65079","65080","65081","65082","65083","65084","65085","65086","65087","65088","65089","65090","65091","65092","65095","65096","65097","65098","65099","65100","65101","65102","65103","65104","65105","65106","65108","65109","65110","65111","65112","65113","65114","65115","65116","65117","65118","65119","65120","65121","65122","65123","65124","65125","65126","65128","65129","65130","65131","65136","65137","65138","65140","65142","65143","65144","65145","65146","65147","65148","65149","65150","65151","65152","65153","65154","65155","65156","65157","65158","65159","65160","65161","65162","65163","65164","65165","65166","65167","65168","65169","65170","65171","65172","65173","65174","65175","65176","65177","65178","65179","65180","65181","65182","65183","65184","65185","65186","65187","65188","65189","65190","65191","65192","65193","65194","65195","65196","65197","65198","65199","65200","65201","65202","65203","65204","65205","65206","65207","65208","65209","65210","65211","65212","65213","65214","65215","65216","65217","65218","65219","65220","65221","65222","65223","65224","65225","65226","65227","65228","65229","65230","65231","65232","65233","65234","65235","65236","65237","65238","65239","65240","65241","65242","65243","65244","65245","65246","65247","65248","65249","65250","65251","65252","65253","65254","65255","65256","65257","65258","65259","65260","65261","65262","65263","65264","65265","65266","65267","65268","65269","65270","65271","65272","65273","65274","65275","65276","65280","65281","65282","65283","65284","65285","65286","65287","65288","65289","65290","65291","65292","65293","65294","65295","65296","65297","65298","65299","65300","65301","65302","65303","65304","65305","65306","65307","65308","65309","65310","65311","65312","65313","65314","65315","65316","65317","65318","65319","65320","65321","65322","65323","65324","65325","65326","65327","65328","65329","65330","65331","65332","65333","65334","65335","65336","65337","65338","65339","65340","65341","65342","65343","65344","65345","65346","65347","65348","65349","65350","65351","65352","65353","65354","65355","65356","65357","65358","65359","65360","65361","65362","65363","65364","65365","65366","65367","65368","65369","65370","65371","65372","65373","65374","65375","65376","65377","65378","65379","65380","65381","65382","65383","65384","65385","65386","65387","65388","65389","65390","65391","65392","65393","65394","65395","65396","65397","65398","65399","65400","65401","65402","65403","65404","65405","65406","65407","65408","65409","65410","65411","65412","65413","65414","65415","65416","65417","65418","65419","65420","65421","65422","65423","65424","65425","65426","65427","65428","65429","65430","65431","65432","65433","65434","65435","65436","65437","65438","65439","65440","65441","65442","65443","65444","65445","65446","65447","65448","65449","65450","65451","65452","65453","65454","65455","65456","65457","65458","65459","65460","65461","65462","65463","65464","65465","65466","65467","65468","65469","65470","65474","65475","65476","65477","65478","65479","65482","65483","65484","65485","65486","65487","65490","65491","65492","65493","65494","65495","65498","65499","65500","65504","65505","65506","65507","65508","65509","65510","65512","65513","65514","65515","65516","65517","65518","nfc","nfd","nfkc","shimApplied","form","RangeError","__WEBPACK_AMD_DEFINE_RESULT__","factory","digestLength","blockSize","K","Uint32Array","hashBlocks","g","u","t1","t2","Hash","Int32Array","temp","bufferLength","bytesHashed","reset","clean","dataLength","dataPos","finish","left","bitLenHi","bitLenLo","padLength","_saveState","_restoreState","HMAC","inner","outer","pad","istate","ostate","hmac","dkLen","prf","ctr","dk","HashBase","ARRAY16","zl","zr","sl","sr","hl","hr","_b","_c","_d","_e","rotl","fn1","fn2","fn3","fn4","fn5","_update","_block","readInt32LE","al","bl","cl","dl","el","ar","br","cr","dr","er","tl","tr","_digest","_blockOffset","writeUInt32LE","_length","writeInt32LE","ctor","superCtor","super_","writable","configurable","TempCtor","Transform","_blockSize","_finalized","_transform","_flush","throwIfNotStringOrBuffer","gf","Float64Array","randombytes","_0","_9","gf0","gf1","_121665","D","D2","X","Y","I","ts64","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","inp","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t0","t3","t4","t5","t6","t7","Uint16Array","leftover","fin","crypto_onetimeauth","outpos","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","sel25519","pack25519","neq25519","par25519","unpack25519","A","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","S","inv25519","crypto_scalarmult","x32","subarray","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","mask","want","crypto_box_afternm","crypto_box_open_afternm","crypto_hashblocks_hl","hh","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","wh","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","crypto_hash","add","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","crypto_sign","sm","smlen","unpackneg","chk","num","den","den2","den4","den6","pow2523","crypto_sign_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_NONCEBYTES","checkLengths","checkArrayTypes","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_ZEROBYTES","crypto_secretbox_BOXZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_BEFORENMBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","secretbox","msg","nonce","box","keyLength","nonceLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","fromSecretKey","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","tmp","mlen","sig","seed","seedLength","signatureLength","hashLength","setPRNG","msCrypto","getRandomValues","Long","memcpy","capacity","littleEndian","noAssert","DEFAULT_CAPACITY","DEFAULT_ENDIAN","DEFAULT_NOASSERT","EMPTY_BUFFER","markedOffset","VERSION","LITTLE_ENDIAN","BIG_ENDIAN","ByteBufferPrototype","__isByteBuffer__","stringFromCharCode","accessor","allocate","isByteBuffer","bi","fromBase64","fromBinary","fromUTF8","fromDebug","clone","byteOffset","byteLength","writeBitSet","relative","start","bit","writeVarint32","readBitSet","readVarint32","readByte","readBytes","writeBytes","append","writeInt8","capacity0","resize","readInt8","writeUint8","capacity1","writeUInt8","readUint8","readUInt8","writeInt16","capacity2","writeShort","readInt16","readShort","writeUint16","capacity3","writeUInt16","readUint16","readUInt16","writeInt32","capacity4","readInt32","readInt","writeUint32","capacity5","writeUInt32","readUint32","readUInt32","writeInt64","fromNumber","fromString","capacity6","lo","low","hi","high","readInt64","readLong","writeUint64","capacity7","writeUInt64","readUint64","readUInt64","writeFloat32","capacity8","writeFloatLE","writeFloatBE","writeFloat","readFloat32","readFloatBE","readFloat","writeFloat64","capacity9","writeDoubleLE","writeDoubleBE","writeDouble","readFloat64","readDoubleLE","readDoubleBE","readDouble","MAX_VARINT32_BYTES","calculateVarint32","zigZagEncode32","zigZagDecode32","capacity10","writeVarint32ZigZag","readVarint32ZigZag","MAX_VARINT64_BYTES","calculateVarint64","part0","toInt","part1","shiftRightUnsigned","part2","zigZagEncode64","unsigned","toSigned","shiftLeft","xor","shiftRight","toUnsigned","zigZagDecode64","and","ONE","negate","writeVarint64","capacity11","writeVarint64ZigZag","readVarint64","fromBits","readVarint64ZigZag","writeCString","capacity12","readCString","string","writeIString","capacity13","readIString","readUTF8String","METRICS_BYTES","METRICS_CHARS","writeUTF8String","capacity14","calculateUTF8Chars","utfx","calculateUTF16asUTF8","calculateUTF8Bytes","calculateString","metrics","sd","cs","ps","decodeUTF8","UTF8toUTF16","readString","writeVString","capacity15","readVString","capacity16","appendTo","target","clear","compact","begin","copyTo","targetOffset","sourceOffset","sourceLimit","targetRelative","ensureCapacity","current","mark","order","LE","BE","bigEndian","prepend","prependTo","printDebug","toDebug","remaining","skip","forceCopy","ab","toUTF8","toBase64","toBinary","toColumns","atob","b64","columns","asc","ch","rs","ho","hm","fail","MAX_CODEPOINT","encodeUTF8","UTF16toUTF8","c1","c2","encodeUTF16toUTF8","decodeUTF8toUTF16","calculateCodePoint","calculateUTF8","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","isLong","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","isFinite","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","radix","radixToPower","power","mul","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","UONE","NEG_ONE","LongPrototype","toNumber","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","isPositive","isOdd","isEven","equals","other","notEquals","neq","lessThan","comp","lt","lessThanOrEqual","lte","greaterThan","gt","greaterThanOrEqual","gte","compare","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","b00","divide","divisor","approx","shru","shr","shl","log2","LN2","delta","approxRes","approxRem","modulo","mod","or","numBits","toBytes","le","toBytesLE","toBytesBE","slots","timeAgo","datetime","diffTime","fullTimestamp","month","getMonth","monthStr","day","getHours","getMinutes","getSeconds","getFullYear","metadata_1","vmVersion","metadataManager","_gasLimit","_enablePayGasInXAS","initMethods","manager","public","constant","payable","isConstructor","defaultPayable","addPayDefaultMethod","addPayMethod","addConstantMethod","addCallMethod","kind","addStateMethod","methodData","pay","payDefault","stateData","queryStates","extractParamType","param","unknow","primitive","stateCollection","array","interface"],"mappings":"6DACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,mCChFA,IAAAP,EAAW5B,EAAQ,IACnBoC,EAAepC,EAAQ,IAMvBqC,EAAAvB,OAAAkB,UAAAK,SAQA,SAAAC,EAAAC,GACA,yBAAAF,EAAA9B,KAAAgC,GA2EA,SAAAC,EAAAD,GACA,cAAAA,GAAA,iBAAAA,EAuCA,SAAAE,EAAAF,GACA,4BAAAF,EAAA9B,KAAAgC,GAoEA,SAAAG,EAAAC,EAAAC,GAEA,GAAAD,QAUA,GALA,iBAAAA,IAEAA,EAAA,CAAAA,IAGAL,EAAAK,GAEA,QAAAvC,EAAA,EAAAC,EAAAsC,EAAAE,OAAmCzC,EAAAC,EAAOD,IAC1CwC,EAAArC,KAAA,KAAAoC,EAAAvC,KAAAuC,QAIA,QAAAhB,KAAAgB,EACA7B,OAAAkB,UAAAC,eAAA1B,KAAAoC,EAAAhB,IACAiB,EAAArC,KAAA,KAAAoC,EAAAhB,KAAAgB,GA0DAxC,EAAAD,QAAA,CACAoC,UACAQ,cAhQA,SAAAP,GACA,+BAAAF,EAAA9B,KAAAgC,IAgQAH,WACAW,WAxPA,SAAAR,GACA,0BAAAS,UAAAT,aAAAS,UAwPAC,kBA/OA,SAAAV,GAOA,MALA,oBAAAW,yBAAA,OACAA,YAAAC,OAAAZ,GAEA,GAAAA,EAAA,QAAAA,EAAAa,kBAAAF,aA2OAG,SAhOA,SAAAd,GACA,uBAAAA,GAgOAe,SAvNA,SAAAf,GACA,uBAAAA,GAuNAC,WACAe,YA/MA,SAAAhB,GACA,gBAAAA,GA+MAiB,OA5LA,SAAAjB,GACA,wBAAAF,EAAA9B,KAAAgC,IA4LAkB,OAnLA,SAAAlB,GACA,wBAAAF,EAAA9B,KAAAgC,IAmLAmB,OA1KA,SAAAnB,GACA,wBAAAF,EAAA9B,KAAAgC,IA0KAE,aACAkB,SAxJA,SAAApB,GACA,OAAAC,EAAAD,IAAAE,EAAAF,EAAAqB,OAwJAC,kBA/IA,SAAAtB,GACA,0BAAAuB,iBAAAvB,aAAAuB,iBA+IAC,qBArHA,WACA,2BAAAC,WAAA,gBAAAA,UAAAC,UAIA,oBAAAC,QACA,oBAAAC,UAgHAzB,UACA0B,MArDA,SAAAA,IACA,IAAAC,EAAA,GACA,SAAAC,EAAA/B,EAAAZ,GACA,iBAAA0C,EAAA1C,IAAA,iBAAAY,EACA8B,EAAA1C,GAAAyC,EAAAC,EAAA1C,GAAAY,GAEA8B,EAAA1C,GAAAY,EAIA,QAAAnC,EAAA,EAAAC,EAAAkE,UAAA1B,OAAuCzC,EAAAC,EAAOD,IAC9CsC,EAAA6B,UAAAnE,GAAAkE,GAEA,OAAAD,GAyCAG,OA9BA,SAAAC,EAAAC,EAAAC,GAQA,OAPAjC,EAAAgC,EAAA,SAAAnC,EAAAZ,GAEA8C,EAAA9C,GADAgD,GAAA,mBAAApC,EACAX,EAAAW,EAAAoC,GAEApC,IAGAkC,GAuBAG,KA1IA,SAAAC,GACA,OAAAA,EAAAC,QAAA,WAAAA,QAAA,4BCpKA3E,EAAAD,QAAA6E,QAAA,yFCAa7E,EAAA8E,cAAgB,IAChB9E,EAAA+E,qBAAuB,EACvB/E,EAAAgF,gBAAkB,WAClBhF,EAAAiF,eAAiB,WACjBjF,EAAAkF,eAAiB,WAGjBlF,EAAAmF,KAAO,CAChBC,OAAQ,CACJC,YAAa,yBACbC,WAAY,yBACZC,KAAM,0BAEVC,SAAU,CACNC,KAAM,2BACNC,KAAM,sBACNC,MAAO,uBACPC,IAAK,gBACLC,IAAK,oBACLC,MAAO,sBACPC,gBAAiB,2BAGrBC,aAAc,CACVP,KAAM,+BACNG,IAAK,oBACLK,YAAa,gCACbC,mBAAoB,qCAGxBC,OAAQ,CACJV,KAAM,mCACNW,OAAQ,kBACRC,OAAQ,wBACRC,UAAW,2BACXC,OAAQ,wBACRC,OAAQ,wBACRC,OAAQ,wBACRC,KAAM,oBAGVC,UAAW,CACPb,MAAO,uBACPc,OAAQ,wBACRR,OAAQ,qBACRS,KAAM,iBACNC,eAAgB,iCAGpBC,MAAO,CACHF,KAAM,aACNG,QAAS,qBACTZ,OAAQ,kBAGZa,MAAO,CACHR,OAAQ,qBACRS,YAAa,2BAKjBC,GAAI,CAEA3B,SAAU,CACNY,OAAQ,4BACRgB,SAAU,4BACVC,QAAS,mBAGbrB,aAAc,CAIVa,KAAM,uBAINT,OAAQ,6BAEZkB,UAAW,CAIPT,KAAM,qBAEVV,OAAQ,CACJU,KAAM,iBACNT,OAAQ,8BAEZmB,UAAW,CACPV,KAAM,oBACNT,OAAQ,yBAIZoB,SAAU,CACNX,KAAM,mBACNY,WAAY,oCACZC,eAAgB,8BAChBC,eAAgB,oCAChBC,YAAa,qCACbC,YAAa,2CACbC,SAAU,+CACVC,YAAa,mDAEjBC,OAAQ,CACJnB,KAAM,iBACNoB,WAAY,iCACZC,MAAO,0BAEXC,OAAQ,CACJtB,KAAM,iBAEVuB,IAAK,CACDC,aAAc,sBACdC,eAAgB,+BAChBC,WAAY,sCACZC,WAAY,qBACZC,cAAe,2BACfrB,SAAU,8BAEdsB,UAAW,CACP7B,KAAM,qBACNT,OAAQ,0BACRuC,KAAM,+BACNC,SAAU,mCACVC,OAAQ,uCACRC,QAAS,uCACTC,iBAAkB,6CAK1BC,OAAQ,CACJ3D,YAAa,WACbC,WAAY,8BCvIpB,IAAApC,EAAapD,EAAQ,GACrBmJ,EAAA/F,EAAA+F,OAGA,SAAAC,EAAAC,EAAAC,GACA,QAAA3H,KAAA0H,EACAC,EAAA3H,GAAA0H,EAAA1H,GAWA,SAAA4H,EAAAC,EAAAC,EAAA5G,GACA,OAAAsG,EAAAK,EAAAC,EAAA5G,GATAsG,EAAAO,MAAAP,EAAAQ,OAAAR,EAAAS,aAAAT,EAAAU,gBACA1J,EAAAD,QAAAkD,GAGAgG,EAAAhG,EAAAlD,GACAA,EAAAiJ,OAAAI,GAQAH,EAAAD,EAAAI,GAEAA,EAAAG,KAAA,SAAAF,EAAAC,EAAA5G,GACA,oBAAA2G,EACA,UAAAM,UAAA,iCAEA,OAAAX,EAAAK,EAAAC,EAAA5G,IAGA0G,EAAAI,MAAA,SAAAI,EAAAC,EAAAC,GACA,oBAAAF,EACA,UAAAD,UAAA,6BAEA,IAAAI,EAAAf,EAAAY,GAUA,YATAI,IAAAH,EACA,iBAAAC,EACAC,EAAAF,OAAAC,GAEAC,EAAAF,QAGAE,EAAAF,KAAA,GAEAE,GAGAX,EAAAK,YAAA,SAAAG,GACA,oBAAAA,EACA,UAAAD,UAAA,6BAEA,OAAAX,EAAAY,IAGAR,EAAAM,gBAAA,SAAAE,GACA,oBAAAA,EACA,UAAAD,UAAA,6BAEA,OAAA1G,EAAAgH,WAAAL,kCC1DA,IAAAM,EAAYrK,EAAQ,GACpBsK,EAA0BtK,EAAQ,IAElCuK,EAAA,CACAC,eAAA,qCAGA,SAAAC,EAAAC,EAAArJ,IACAgJ,EAAA9G,YAAAmH,IAAAL,EAAA9G,YAAAmH,EAAA,mBACAA,EAAA,gBAAArJ,GAgBA,IAXAsJ,EAWAC,EAAA,CACAD,SAXA,oBAAAE,eAEAF,EAAc3K,EAAQ,IACnB,oBAAA8K,UAEHH,EAAc3K,EAAQ,KAEtB2K,GAMAI,iBAAA,UAAAC,EAAAN,GAEA,OADAJ,EAAAI,EAAA,gBACAL,EAAAtH,WAAAiI,IACAX,EAAAvH,cAAAkI,IACAX,EAAAjI,SAAA4I,IACAX,EAAA1G,SAAAqH,IACAX,EAAA5G,OAAAuH,IACAX,EAAA3G,OAAAsH,GAEAA,EAEAX,EAAApH,kBAAA+H,GACAA,EAAA5H,OAEAiH,EAAAxG,kBAAAmH,IACAP,EAAAC,EAAA,mDACAM,EAAA3I,YAEAgI,EAAA7H,SAAAwI,IACAP,EAAAC,EAAA,kCACAO,KAAAC,UAAAF,IAEAA,IAGAG,kBAAA,UAAAH,GAEA,oBAAAA,EACA,IACAA,EAAAC,KAAAG,MAAAJ,GACO,MAAAK,IAEP,OAAAL,IAOAM,QAAA,EAEAC,eAAA,aACAC,eAAA,eAEAC,kBAAA,EAEAC,eAAA,SAAA/E,GACA,OAAAA,GAAA,KAAAA,EAAA,MAIAiE,EAAAF,QAAA,CACAiB,OAAA,CACAC,OAAA,sCAIAvB,EAAA3H,QAAA,iCAAAmJ,GACAjB,EAAAF,QAAAmB,GAAA,KAGAxB,EAAA3H,QAAA,gCAAAmJ,GACAjB,EAAAF,QAAAmB,GAAAxB,EAAAjG,MAAAmG,KAGApK,EAAAD,QAAA0K,gCC7FA,IAAAkB,EAAmB9L,EAAQ,IAY3BG,EAAAD,QAAA,SAAA6L,EAAAC,EAAAnD,EAAAoD,EAAAC,GACA,IAAAC,EAAA,IAAAC,MAAAL,GACA,OAAAD,EAAAK,EAAAH,EAAAnD,EAAAoD,EAAAC,mBChBA/L,EAAAD,QAAA6E,QAAA,yBCAA,IAAAsH,EAAAC,KAAAC,IAAA,QAEA,SAAAC,EAAAtC,EAAAvJ,GACA,oBAAAuJ,IAAAf,OAAA/G,SAAA8H,GACA,UAAAJ,UAAAnJ,EAAA,+BAIAR,EAAAD,QAAA,SAAAuM,EAAAC,EAAAC,EAAAC,GAIA,GAHAJ,EAAAC,EAAA,YACAD,EAAAE,EAAA,QAEA,iBAAAC,EACA,UAAA7C,UAAA,2BAGA,GAAA6C,EAAA,EACA,UAAA7C,UAAA,kBAGA,oBAAA8C,EACA,UAAA9C,UAAA,2BAGA,GAAA8C,EAAA,GAAAA,EAAAP,GAAAO,KACA,UAAA9C,UAAA,gKCzBA+C,EAAA7M,EAAA,IACA6M,EAAA7M,EAAA,KACA6M,EAAA7M,EAAA,oFCAA,IAAA8M,EAAA,WAMA,OANA,gBAAsB5M,EAAA4M,WAQtB,SAAYC,GACVA,IAAA,iBACAA,IAAA,eACAA,IAAA,eAHF,CAAY7M,EAAA6M,UAAA7M,EAAA6M,QAAO,mCCRnB5M,EAAAD,QAAA,SAAA0C,EAAA+B,GACA,kBAEA,IADA,IAAAqI,EAAA,IAAAC,MAAA1I,UAAA1B,QACAzC,EAAA,EAAmBA,EAAA4M,EAAAnK,OAAiBzC,IACpC4M,EAAA5M,GAAAmE,UAAAnE,GAEA,OAAAwC,EAAAsK,MAAAvI,EAAAqI,mCCNA,IAAAG,EAAkBnN,EAAQ,GAS1BG,EAAAD,QAAA,SAAAkN,EAAAC,EAAAnB,GACA,IAAAR,EAAAQ,EAAAF,OAAAN,eAEAQ,EAAAvF,QAAA+E,MAAAQ,EAAAvF,QAGA0G,EAAAF,EACA,mCAAAjB,EAAAvF,OACAuF,EAAAF,OACA,KACAE,EAAAD,QACAC,IAPAkB,EAAAlB,kCCHA/L,EAAAD,QAAA,SAAAiM,EAAAH,EAAAnD,EAAAoD,EAAAC,GAOA,OANAC,EAAAH,SACAnD,IACAsD,EAAAtD,QAEAsD,EAAAF,UACAE,EAAAD,WACAC,iCCjBA,IAAA9B,EAAYrK,EAAQ,GAEpB,SAAAsN,EAAA/K,GACA,OAAAgL,mBAAAhL,GACAuC,QAAA,aACAA,QAAA,aACAA,QAAA,YACAA,QAAA,aACAA,QAAA,YACAA,QAAA,aACAA,QAAA,aAUA3E,EAAAD,QAAA,SAAA4F,EAAA0H,EAAAC,GAEA,IAAAD,EACA,OAAA1H,EAGA,IAAA4H,EACA,GAAAD,EACAC,EAAAD,EAAAD,QACG,GAAAnD,EAAAxG,kBAAA2J,GACHE,EAAAF,EAAAnL,eACG,CACH,IAAAsL,EAAA,GAEAtD,EAAA3H,QAAA8K,EAAA,SAAAjL,EAAAZ,GACAY,UAIA8H,EAAA/H,QAAAC,GACAZ,GAAA,KAEAY,EAAA,CAAAA,GAGA8H,EAAA3H,QAAAH,EAAA,SAAAqL,GACAvD,EAAA7G,OAAAoK,GACAA,IAAAC,cACSxD,EAAA7H,SAAAoL,KACTA,EAAA3C,KAAAC,UAAA0C,IAEAD,EAAAG,KAAAR,EAAA3L,GAAA,IAAA2L,EAAAM,SAIAF,EAAAC,EAAAI,KAAA,KAOA,OAJAL,IACA5H,KAAA,IAAAA,EAAAkI,QAAA,cAAAN,GAGA5H,kBChEA3F,EAAAD,QAAA6E,QAAA,uBCAA5E,EAAAD,QAAA6E,QAAA,0BCAA,IAAAe,EAAU9F,EAAQ,IAClBiO,EAAAnI,EAAAmI,IACAC,EAAWlO,EAAQ,IACnBmO,EAAYnO,EAAQ,IACpBoO,EAAapO,EAAQ,IACrBqO,EAAerO,EAAQ,IAAQqO,SAC/BC,EAAYtO,EAAQ,GAARA,CAAe,oBAI3BuO,EAAA,CAAoBC,KAAA,EAAAC,MAAA,EAAAC,SAAA,EAAAC,OAAA,GAGpBC,EAAA9N,OAAAY,OAAA,MAQA,SAAAmN,EAAAC,EAAAC,GAEAV,EAAA9N,KAAAyO,MACAF,EAAApE,QAAAoE,EAAApE,SAAA,GACAsE,KAAAC,SAAAH,EACAE,KAAAE,QAAA,EACAF,KAAAG,SAAA,EACAH,KAAAI,eAAA,EACAJ,KAAAK,WAAA,GACAL,KAAAM,mBAAA,EACAN,KAAAO,oBAAA,GAKAT,EAAAU,OAEAV,EAAAW,WACAX,EAAAW,SAAAX,EAAAU,aAEAV,EAAAU,MAIAT,GACAC,KAAAU,GAAA,WAAAX,GAIA,IAAAY,EAAAX,KAMA,GALAA,KAAAY,kBAAA,SAAA1D,GACAyD,EAAAE,iBAAA3D,KAIA4C,EAAAgB,UAAAhB,EAAAiB,KAAA,CACA,IAAAC,EAAAlB,EAAAiB,KAAA/B,QAAA,KACAgC,EAAA,EACAlB,EAAAgB,SAAAhB,EAAAiB,MAGAjB,EAAAgB,SAAAhB,EAAAiB,KAAAE,UAAA,EAAAD,GACAlB,EAAAoB,OAAApB,EAAAiB,KAAAE,UAAAD,IAKAhB,KAAAmB,kBAuGA,SAAAC,EAAAnE,EAAAoE,GACAC,aAAArE,EAAAsE,UACAtE,EAAAsE,SAAAC,WAAA,WACAvE,EAAAwE,KAAA,YACGJ,GAGH,SAAAK,IACAJ,aAAAtB,KAAAuB,UAuKA,SAAAI,EAAAC,GAEA,IAAA1Q,EAAA,CACA2Q,aAAA,GACAC,cAAA,UAIAC,EAAA,GAmDA,OAlDAjQ,OAAAkQ,KAAAJ,GAAAlO,QAAA,SAAAuO,GACA,IAAAC,EAAAD,EAAA,IACAE,EAAAJ,EAAAG,GAAAN,EAAAK,GACAG,EAAAlR,EAAA+Q,GAAAnQ,OAAAY,OAAAyP,GAGAC,EAAAnF,QAAA,SAAAoF,EAAAvC,EAAAwC,GAEA,oBAAAD,EAAA,CACA,IAAAE,EAAAF,EACA,IACAA,EAAAG,EAAA,IAAAvD,EAAAsD,IAEA,MAAAE,GAEAJ,EAAAvL,EAAAsF,MAAAmG,SAGAtD,GAAAoD,aAAApD,EACAoD,EAAAG,EAAAH,IAGAC,EAAAxC,EACAA,EAAAuC,EACAA,EAAA,CAAiBH,aAgBjB,MAdA,mBAAApC,IACAwC,EAAAxC,EACAA,EAAA,OAIAA,EAAAhO,OAAA4Q,OAAA,CACAb,aAAA3Q,EAAA2Q,aACAC,cAAA5Q,EAAA4Q,eACOO,EAAAvC,IACPiC,kBAEA3C,EAAAuD,MAAA7C,EAAAoC,WAAA,qBACA5C,EAAA,UAAAQ,GACA,IAAAD,EAAAC,EAAAwC,IAIAF,EAAAnQ,IAAA,SAAAoQ,EAAAvC,EAAAwC,GACA,IAAArF,EAAAmF,EAAAnF,QAAAoF,EAAAvC,EAAAwC,GAEA,OADArF,EAAA2F,MACA3F,KAGA/L,EAIA,SAAA2R,KAGA,SAAAL,EAAAM,GACA,IAAAhD,EAAA,CACAoC,SAAAY,EAAAZ,SACAzB,SAAAqC,EAAArC,SAAAsC,WAAA,KAEAD,EAAArC,SAAAuC,MAAA,MACAF,EAAArC,SACAwC,KAAAH,EAAAG,KACA/B,OAAA4B,EAAA5B,OACAJ,SAAAgC,EAAAhC,SACAC,KAAA+B,EAAAhC,SAAAgC,EAAA5B,OACAgC,KAAAJ,EAAAI,MAKA,MAHA,KAAAJ,EAAAK,OACArD,EAAAqD,KAAAC,OAAAN,EAAAK,OAEArD,EA9ZA,+CAAApM,QAAA,SAAA2P,GACAzD,EAAAyD,GAAA,SAAA7I,GACAwF,KAAAsD,cAAA7B,KAAA4B,EAAA7I,MAsDAqF,EAAA7M,UAAAlB,OAAAY,OAAA2M,EAAArM,WAGA6M,EAAA7M,UAAAuQ,MAAA,SAAAvH,EAAAf,EAAAqH,GAEA,GAAAtC,KAAAG,QACA,UAAA/C,MAAA,mBAIA,sBAAApB,GAAA,iBAAAA,GAAA,WAAAA,GACA,UAAAoB,MAAA,iDAEA,mBAAAnC,IACAqH,EAAArH,EACAA,EAAA,MAKA,IAAAe,EAAAnI,OAOAmM,KAAAM,mBAAAtE,EAAAnI,QAAAmM,KAAAC,SAAA6B,eACA9B,KAAAM,oBAAAtE,EAAAnI,OACAmM,KAAAO,oBAAAzB,KAAA,CAAmC9C,OAAAf,aACnC+E,KAAAwD,gBAAAD,MAAAvH,EAAAf,EAAAqH,KAIAtC,KAAAyB,KAAA,YAAArE,MAAA,iDACA4C,KAAAyD,SAdAnB,GACAA,KAkBAzC,EAAA7M,UAAA4P,IAAA,SAAA5G,EAAAf,EAAAqH,GAYA,GAVA,mBAAAtG,GACAsG,EAAAtG,EACAA,EAAAf,EAAA,MAEA,mBAAAA,IACAqH,EAAArH,EACAA,EAAA,MAIAe,EAIA,CACA,IAAA2E,EAAAX,KACA0D,EAAA1D,KAAAwD,gBACAxD,KAAAuD,MAAAvH,EAAAf,EAAA,WACA0F,EAAAT,QAAA,EACAwD,EAAAd,IAAA,UAAAN,KAEAtC,KAAAG,SAAA,OAVAH,KAAAE,OAAAF,KAAAG,SAAA,EACAH,KAAAwD,gBAAAZ,IAAA,UAAAN,IAcAzC,EAAA7M,UAAA2Q,UAAA,SAAAhS,EAAAU,GACA2N,KAAAC,SAAAvE,QAAA/J,GAAAU,EACA2N,KAAAwD,gBAAAG,UAAAhS,EAAAU,IAIAwN,EAAA7M,UAAA4Q,aAAA,SAAAjS,UACAqO,KAAAC,SAAAvE,QAAA/J,GACAqO,KAAAwD,gBAAAI,aAAAjS,IAIAkO,EAAA7M,UAAAwO,WAAA,SAAAH,EAAAiB,GAKA,GAJAA,GACAtC,KAAA6D,KAAA,UAAAvB,GAGAtC,KAAA8D,OACA1C,EAAApB,KAAAqB,OAEA,CACA,IAAAV,EAAAX,KACAA,KAAAwD,gBAAAK,KAAA,oBACAzC,EAAAT,EAAAU,KAOA,OAHArB,KAAA6D,KAAA,WAAAnC,GACA1B,KAAA6D,KAAA,QAAAnC,GAEA1B,MAeA,CACA,mCACA,mCACAtM,QAAA,SAAAmJ,GACAgD,EAAA7M,UAAA6J,GAAA,SAAApH,EAAAC,GACA,OAAAsK,KAAAwD,gBAAA3G,GAAApH,EAAAC,MAKA,kCAAAhC,QAAA,SAAAX,GACAjB,OAAAC,eAAA8N,EAAA7M,UAAAD,EAAA,CACAd,IAAA,WAAsB,OAAA+N,KAAAwD,gBAAAzQ,QAKtB8M,EAAA7M,UAAAmO,gBAAA,WAEA,IAAAe,EAAAlC,KAAAC,SAAAiC,SACAC,EAAAnC,KAAAC,SAAA8B,gBAAAG,GACA,GAAAC,EAAA,CAOA,GAAAnC,KAAAC,SAAA/G,OAAA,CACA,IAAA+I,EAAAC,EAAA6B,OAAA,EAAA7B,EAAArO,OAAA,GACAmM,KAAAC,SAAA+D,MAAAhE,KAAAC,SAAA/G,OAAA+I,GAIA,IAAAhF,EAAA+C,KAAAwD,gBACArB,EAAAlF,QAAA+C,KAAAC,SAAAD,KAAAY,mBAKA,QAAAyC,KAJArD,KAAAiE,YAAAnN,EAAAoN,OAAAlE,KAAAC,UAGAhD,EAAAqG,cAAAtD,KACAJ,EAEAyD,GACApG,EAAAyD,GAAA2C,EAAAzD,EAAAyD,IAMA,GAAArD,KAAAmE,YAAA,CAEA,IAAA/S,EAAA,EACAuP,EAAAX,KACAoE,EAAApE,KAAAO,qBACA,SAAA8D,EAAAlH,GAGA,GAAAF,IAAA0D,EAAA6C,gBAGA,GAAArG,EACAwD,EAAAc,KAAA,QAAAtE,QAGA,GAAA/L,EAAAgT,EAAAvQ,OAAA,CACA,IAAAO,EAAAgQ,EAAAhT,KAEA6L,EAAAqH,UACArH,EAAAsG,MAAAnP,EAAA4H,KAAA5H,EAAA6G,SAAAoJ,QAIA1D,EAAAT,QACAjD,EAAA2F,MAnBA,SAhCA5C,KAAAyB,KAAA,YAAArE,MAAA,wBAAA8E,KA2DArC,EAAA7M,UAAA6N,iBAAA,SAAA3D,GAEA8C,KAAAC,SAAAsE,gBACAvE,KAAAK,WAAAvB,KAAA,CACAhI,IAAAkJ,KAAAiE,YACAvI,QAAAwB,EAAAxB,QACA8I,WAAAtH,EAAAsH,aAUA,IAAAC,EAAAvH,EAAAxB,QAAA+I,SACA,GAAAA,IAAA,IAAAzE,KAAAC,SAAAyE,iBACAxH,EAAAsH,YAAA,KAAAtH,EAAAsH,WAAA,KAQA,GANAxE,KAAAwD,gBAAAmB,qBACA3E,KAAAwD,gBAAA9C,GAAA,QAAAmC,GACA7C,KAAAwD,gBAAAC,UAIAzD,KAAAI,eAAAJ,KAAAC,SAAA4B,aAEA,YADA7B,KAAAyB,KAAA,YAAArE,MAAA,4BAWA,IAAAwH,EACAlJ,EAAAsE,KAAAC,SAAAvE,QACA,SAAAwB,EAAAsH,cAAAxE,KAAAC,SAAApD,UAAA0C,GAIA,IAAAqF,KAHA5E,KAAAC,SAAApD,OAAA,MAEAmD,KAAAO,oBAAA,GACA7E,EACA,aAAAjF,KAAAmO,WACAlJ,EAAAkJ,GAMA,IAAA5E,KAAAmE,YACA,IAAAS,KAAAlJ,EACA,UAAAjF,KAAAmO,WACAlJ,EAAAkJ,GAMA,IAAAC,EAAA/N,EAAAsH,QAAA4B,KAAAiE,YAAAQ,GACAnF,EAAA,iBAAAuF,GACA/S,OAAA4Q,OAAA1C,KAAAC,SAAAnJ,EAAAsF,MAAAyI,IACA7E,KAAAmE,aAAA,EACAnE,KAAAmB,kBAGAjE,EAAA4H,eAIA5H,EAAA6H,YAAA/E,KAAAiE,YACA/G,EAAA8H,UAAAhF,KAAAK,WACAL,KAAAyB,KAAA,WAAAvE,GAGA8C,KAAAO,oBAAA,IA2FApP,EAAAD,QAAAyQ,EAAA,CAAuBzC,OAAAC,UACvBhO,EAAAD,QAAAyQ,sBCjbAxQ,EAAAD,QAAA6E,QAAA,sBCAA5E,EAAAD,QAAA6E,QAAA,wCCuPA5E,EAAAD,QAjPA,SAAA+T,GAoCA,SAAAC,EAAAC,GAGA,IAFA,IAAAlC,EAAA,EAEA7R,EAAA,EAAmBA,EAAA+T,EAAAtR,OAAsBzC,IACzC6R,MAAA,GAAAA,EAAAkC,EAAAC,WAAAhU,GACA6R,GAAA,EAGA,OAAAoC,EAAAC,OAAAhI,KAAAiI,IAAAtC,GAAAoC,EAAAC,OAAAzR,QAYA,SAAAwR,EAAAF,GACA,IAAAK,EAEA,SAAAlG,IAEA,GAAAA,EAAAmG,QAAA,CAIA,QAAAC,EAAAnQ,UAAA1B,OAAAmK,EAAA,IAAAC,MAAAyH,GAAAC,EAAA,EAAyEA,EAAAD,EAAaC,IACtF3H,EAAA2H,GAAApQ,UAAAoQ,GAGA,IAAAhF,EAAArB,EAEAsG,EAAAxC,OAAA,IAAAyC,MACAC,EAAAF,GAAAJ,GAAAI,GACAjF,EAAAoF,KAAAD,EACAnF,EAAAqF,KAAAR,EACA7E,EAAAiF,OACAJ,EAAAI,EACA5H,EAAA,GAAAqH,EAAAY,OAAAjI,EAAA,IAEA,iBAAAA,EAAA,IAEAA,EAAAkI,QAAA,MAIA,IAAAC,EAAA,EACAnI,EAAA,GAAAA,EAAA,GAAAlI,QAAA,yBAAAsQ,EAAAlC,GAEA,UAAAkC,EACA,OAAAA,EAGAD,IACA,IAAAE,EAAAhB,EAAAiB,WAAApC,GAEA,sBAAAmC,EAAA,CACA,IAAA9S,EAAAyK,EAAAmI,GACAC,EAAAC,EAAA9U,KAAAoP,EAAApN,GAEAyK,EAAAuI,OAAAJ,EAAA,GACAA,IAGA,OAAAC,IAGAf,EAAAmB,WAAAjV,KAAAoP,EAAA3C,IACA2C,EAAA8F,KAAApB,EAAAoB,KACAvI,MAAAyC,EAAA3C,IAiBA,OAdAsB,EAAA6F,YACA7F,EAAAmG,QAAAJ,EAAAI,QAAAN,GACA7F,EAAAoH,UAAArB,EAAAqB,YACApH,EAAAqH,MAAAzB,EAAAC,GACA7F,EAAAwF,UACAxF,EAAA9J,SAIA,mBAAA6P,EAAAuB,MACAvB,EAAAuB,KAAAtH,GAGA+F,EAAAwB,UAAA/H,KAAAQ,GACAA,EAGA,SAAAwF,IACA,IAAAqB,EAAAd,EAAAwB,UAAA7H,QAAAgB,MAEA,WAAAmG,IACAd,EAAAwB,UAAAN,OAAAJ,EAAA,IACA,GAMA,SAAA3Q,EAAA2P,EAAA2B,GACA,OAAAzB,EAAArF,KAAAmF,gBAAA,IAAA2B,EAAA,IAAAA,GAAA3B,GAkGA,OA7OAE,EAAA/F,MAAA+F,EACAA,EAAA0B,QAAA1B,EACAA,EAAAY,OAkOA,SAAA1S,GACA,OAAAA,aAAA6J,MACA7J,EAAAyT,OAAAzT,EAAAwJ,QAGAxJ,GAtOA8R,EAAA4B,QAsLA,WACA5B,EAAA6B,OAAA,KAtLA7B,EAAA6B,OAkJA,SAAAC,GAIA,IAAA/V,EAHAiU,EAAA+B,KAAAD,GACA9B,EAAAgC,MAAA,GACAhC,EAAAiC,MAAA,GAEA,IAAAC,GAAA,iBAAAJ,IAAA,IAAAI,MAAA,UACAC,EAAAD,EAAA1T,OAEA,IAAAzC,EAAA,EAAeA,EAAAoW,EAASpW,IACxBmW,EAAAnW,KAOA,OAFA+V,EAAAI,EAAAnW,GAAA0E,QAAA,cAEA,GACAuP,EAAAiC,MAAAxI,KAAA,IAAA2I,OAAA,IAAAN,EAAApD,OAAA,SAEAsB,EAAAgC,MAAAvI,KAAA,IAAA2I,OAAA,IAAAN,EAAA,OAIA,IAAA/V,EAAA,EAAeA,EAAAiU,EAAAwB,UAAAhT,OAAkCzC,IAAA,CACjD,IAAAsW,EAAArC,EAAAwB,UAAAzV,GACAsW,EAAAjC,QAAAJ,EAAAI,QAAAiC,EAAAvC,aA1KAE,EAAAI,QAgMA,SAAA9T,GACA,SAAAA,IAAAkC,OAAA,GACA,SAGA,IAAAzC,EACAoW,EAEA,IAAApW,EAAA,EAAAoW,EAAAnC,EAAAiC,MAAAzT,OAA+CzC,EAAAoW,EAASpW,IACxD,GAAAiU,EAAAiC,MAAAlW,GAAAqF,KAAA9E,GACA,SAIA,IAAAP,EAAA,EAAAoW,EAAAnC,EAAAgC,MAAAxT,OAA+CzC,EAAAoW,EAASpW,IACxD,GAAAiU,EAAAgC,MAAAjW,GAAAqF,KAAA9E,GACA,SAIA,UAnNA0T,EAAAsC,SAAyB3W,EAAQ,IACjCc,OAAAkQ,KAAAiD,GAAAvR,QAAA,SAAAf,GACA0S,EAAA1S,GAAAsS,EAAAtS,KAMA0S,EAAAwB,UAAA,GAKAxB,EAAAgC,MAAA,GACAhC,EAAAiC,MAAA,GAOAjC,EAAAiB,WAAA,GAmBAjB,EAAAH,cA8LAG,EAAA6B,OAAA7B,EAAAuC,QACAvC,kBCpPAlU,EAAAD,QAAA6E,QAAA,sCCEA5E,EAAAD,QAAA,SAAAmB,GACA,SAAAA,MAAAwV,2CCKA,SAAAC,EAAA/K,GACAiD,KAAAjD,UAGA+K,EAAA9U,UAAAK,SAAA,WACA,gBAAA2M,KAAAjD,QAAA,KAAAiD,KAAAjD,QAAA,KAGA+K,EAAA9U,UAAA6U,YAAA,EAEA1W,EAAAD,QAAA4W,iFCjBA,IAAAC,EAAA/W,EAAA,IACAgX,EAAAhX,EAAA,GACAiX,EAAAjX,EAAA,IACAkX,EAAAlX,EAAA,IAqBA,IAAAmX,EAAA,oBAAAA,KA6iBA,OApiBSA,EAAAC,iBAAP,SACEC,EACArK,EACAjB,EACA+C,QADA,IAAA/C,MAAA,SACA,IAAA+C,MAAA,IAhCJ,SAASwI,EAA4B3U,GAChB,iBAARA,GAA4B,OAARA,GAE/B7B,OAAOkQ,KAAKrO,GAAKD,QAAQ,SAAAf,GACvB,IAAMN,EAAQsB,EAAIhB,GACZ0V,SAAchW,EAHX,WAILgW,EACF1U,EAAIhB,GAAO4V,OAAOlW,GAEF,WAATgW,GACPC,EAA4BjW,KAwB9BiW,CAA4BtK,GAC5B,IAAIwK,EAA2B,CAC7BH,KAAMA,EACNI,IAAK,EACLzK,KAAMA,EACN0K,UAAW,EACX3L,QAASA,EACT4L,gBAAiB,GACjBC,SAAU,IAKZ,OAFAJ,EAAcT,EAAAhB,QAAOyB,IACTE,UAAYT,EAAMY,UAAYb,EAAU/R,qBAC7CuS,GAGFL,EAAAW,iBAAP,SAAwBC,GACtB,IAAMpW,EAAMoW,EAEZ,OADgBb,EAAMc,QAAQrW,GACfsW,WASVd,EAAAe,YAAP,SAAmBC,EAAyBC,EAAYrM,GACtD,OAAOiD,KAAKoI,iBAAiB,EAAG,CAACe,EAAQC,GAAKrM,IAQzCoL,EAAAkB,QAAP,SAAe1X,GACb,OAAOqO,KAAKoI,iBAAiB,EAAG,CAACzW,KAO5BwW,EAAAmB,kBAAP,SAAyBC,GACvB,IAAIC,EAASxJ,KAAK8I,iBAAiBS,GACnC,OAAOvJ,KAAKoI,iBAAiB,EAAG,CAACoB,KAQ5BrB,EAAAsB,QAAP,SAAelS,EAAgB4R,GAC7B,OAAOnJ,KAAKoI,iBAAiB,EAAG,CAAC7Q,EAAQ4R,KAMpChB,EAAAuB,OAAP,WACE,OAAO1J,KAAKoI,iBAAiB,EAAG,KAY3BD,EAAAwB,WAAP,SAAkBhY,EAAciY,EAAqBC,EAAaC,EAAatY,EAAWuY,GACxF,OAAO/J,KAAKoI,iBAAiB,EAAG,CAACzW,EAAMiY,EAASC,EAAKC,EAAKtY,EAAGuY,KAMxD5B,EAAA6B,cAAP,WACE,OAAOhK,KAAKoI,iBAAiB,EAAG,KAO3BD,EAAA8B,SAAP,SAAgBjG,GACd,OAAOhE,KAAKoI,iBAAiB,EAAG,CAACpE,KAM5BmE,EAAA+B,YAAP,WACE,OAAOlK,KAAKoI,iBAAiB,EAAG,KAM3BD,EAAAgC,iBAAP,WACE,OAAOnK,KAAKoI,iBAAiB,GAAI,KAO5BD,EAAAiC,cAAP,SAAqBvS,GACnB,OAAOmI,KAAKoI,iBAAiB,GAAIvQ,IAO5BsQ,EAAAkC,UAAP,SAAiBxS,GACf,OAAOmI,KAAKoI,iBAAiB,GAAIvQ,IAQ5BsQ,EAAAmC,OAAP,SAAcC,EAA0BC,GACtC,OAAOxK,KAAKoI,iBAAiB,GAAI,CAACmC,EAAWC,KAQxCrC,EAAAsC,SAAP,SAAgBF,EAA0BC,GACxC,OAAOxK,KAAKoI,iBAAiB,GAAI,CAACmC,EAAWC,KAQxCrC,EAAAuC,eAAP,SAAsB/Y,EAAcgZ,GAClC,OAAO3K,KAAKoI,iBAAiB,IAAK,CAACzW,EAAMgZ,KAUpCxC,EAAAyC,cAAP,SACEC,EACAF,EACAG,EACAC,GAEA,OAAO/K,KAAKoI,iBAAiB,IAAK,CAACyC,EAAQF,EAAMG,EAASC,KAQrD5C,EAAA6C,WAAP,SAAkBH,EAAgB1B,GAChC,OAAOnJ,KAAKoI,iBAAiB,IAAK,CAACyC,EAAQ1B,KAUtChB,EAAA8C,cAAP,SACEJ,EACA1B,EACA+B,EACAnO,GAEA,OAAOiD,KAAKoI,iBAAiB,IAAK,CAACyC,EAAQ1B,EAAQ+B,GAAcnO,IAY5DoL,EAAAgD,aAAP,SACExZ,EACAgZ,EACAS,EACAC,EACAxT,EACAyT,GAEA,OAAOtL,KAAKoI,iBAAiB,IAAK,CAACzW,EAAMgZ,EAAMS,EAAMC,EAAMxT,EAAWyT,KASjEnD,EAAAoD,aAAP,SAAoBC,EAAgB9Q,EAAc0O,GAChD,OAAOpJ,KAAKoI,iBAAiB,IAAK,CAACoD,EAAQ9Q,EAAM0O,KAQ5CjB,EAAAsD,UAAP,SAAiBD,EAAgB7Y,GAC/B,OAAOqN,KAAKoI,iBAAiB,IAAK,CAACoD,EAAQ7Y,KAQtCwV,EAAAuD,aAAP,SAAoBF,EAAgB7Y,GAClC,OAAOqN,KAAKoI,iBAAiB,IAAK,CAACoD,EAAQ7Y,KAStCwV,EAAAwD,YAAP,SAAmBH,EAAgBI,EAAkBzC,GACnD,OAAOnJ,KAAKoI,iBAAiB,IAAK,CAACzW,KAAMia,EAAUzC,KAY9ChB,EAAA0D,aAAP,SACEL,EACAM,EACAF,EACAzC,EACA4C,EACAC,GAEA,OAAOhM,KAAKoI,iBAAiB,IAAK,CAACoD,EAAQM,EAAWF,EAAUzC,EAAQ4C,EAAKC,KAkExE7D,EAAA8D,eAAP,SACEC,EACAvB,EACAwB,EACAC,EACAC,GAEA,OAAOrM,KAAKoI,iBAAiB,IAAK,CAAC8D,EAAOvB,EAAMwB,EAAOC,EAASC,KAO3DlE,EAAAmE,aAAP,SAAoBC,GAClB,OAAOvM,KAAKoI,iBAAiB,IAAK,CAACmE,KAO9BpE,EAAAqE,iBAAP,SAAwBD,GACtB,OAAOvM,KAAKoI,iBAAiB,IAAK,CAACmE,KAS9BpE,EAAAsE,gBAAP,SAAuBC,EAAiBzD,EAAmB0B,GACzD,OAAO3K,KAAKoI,iBAAiB,IAAK,CAACsE,EAASzD,EAAW0B,KAOlDxC,EAAAwE,mBAAP,SAA0BD,GACxB,OAAO1M,KAAKoI,iBAAiB,IAAK,CAACsE,KAW9BvE,EAAAyE,eAAP,SAAsBF,EAAiBG,EAAiBjB,EAAkBzC,EAAgB4C,GACxF,OAAO/L,KAAKoI,iBAAiB,IAAK,CAACsE,EAASG,EAASjB,EAAUzC,EAAQ4C,KAWlE5D,EAAA2E,gBAAP,SACED,EACAH,EACAd,EACAzC,EACAV,GAEA,OAAOzI,KAAKoI,iBAAiB,IAAK,CAACyE,EAASH,EAASd,EAAUzC,EAAQV,KAQlEN,EAAA4E,eAAP,SAAsBC,GACpB,OAAOhN,KAAKoI,iBAAiB,IAAK,CAAC4E,KAO9B7E,EAAA8E,aAAP,SAAoBD,GAClB,OAAOhN,KAAKoI,iBAAiB,IAAK,CAAC4E,KAS9B7E,EAAA+E,mBAAP,SAA0BL,EAAiBM,EAAgB3b,GACzD,OAAOwO,KAAKoI,iBAAiB,IAAK,CAACyE,EAAQM,EAAO3b,KAQ7C2W,EAAAiF,wBAAP,SAA+BP,EAAiBrb,GAC9C,OAAOwO,KAAKoI,iBAAiB,IAAK,CAACyE,EAASrb,KAUvC2W,EAAAkF,yBAAP,SAAgC3S,EAAc0O,EAAY+D,EAAgB3b,GACxE,OAAOwO,KAAKoI,iBAAiB,IAAK,CAAC1N,EAAK0O,EAAG+D,EAAO3b,KAc7C2W,EAAAmF,iBAAP,SACE3b,EACAuG,EACAyS,EACA9Q,EACA0T,EACAC,GAEA,YAHA,IAAAD,OAAA,QACA,IAAAC,MAAA,KAEOxN,KAAKoI,iBAAiB,IAAK,CAACoF,EAAU7b,EAAMuG,EAASyS,EAAM9Q,EAAM0T,KAWnEpF,EAAAsF,aAAP,SACEC,EACAC,EACAC,EACAJ,EACAK,GAEA,YAHA,IAAAL,MAAA,UACA,IAAAK,OAAA,GAEO7N,KAAKoI,iBAAiB,IAAK,CAChCoF,EACAK,EACAH,EACAC,EACAC,KAcGzF,EAAA2F,YAAP,SACElC,EACAzC,EACA4E,EACAC,EACAL,EACAH,EACAK,GAEA,YAHA,IAAAL,MAAA,UACA,IAAAK,OAAA,GAEGE,GAAaA,EAAUla,OAAO,EAExBmM,KAAKoI,iBAAiB,IAAK,CAChCoF,EACAK,EACAG,EACCL,GAAcA,EAAW9Z,OAAS,EAAK8Z,EAAa,GACrDxE,EACAyC,EACAmC,IAGK/N,KAAKoI,iBAAiB,IAAK,CAChCoF,EACAK,EACAG,EACCL,GAAcA,EAAW9Z,OAAS,EAAK8Z,EAAa,GACrDxE,EACAyC,KAKRzD,EA7iBA,GAAajX,EAAAiX,mDChBb,SAAS8F,IAEP,OADc,IAAIpI,KAAKA,KAAKqI,IAAI,KAAM,EAAG,GAAI,GAAI,EAAG,EAAG,qDAmDvDhd,EAAA+c,iBA/CF,IAAME,EAAW,GAuCfjd,EAAAid,WAtCF,IAAMtW,EAAY,IAElB,SAASgR,EAAQuF,GACf,OAlBF,SAAsBA,QACPjT,IAATiT,IACFA,GAAO,IAAIvI,MAAOgD,WAEpB,IACIvW,EADI2b,IACEpF,UACV,OAAOvL,KAAK+Q,OAAOD,EAAO9b,GAAK,KAYxBgc,CAAaF,GAYtB,SAASG,EAAcC,GAKrB,YAJkBrT,IAAdqT,IACFA,EAAY3F,KAGPvL,KAAK+Q,MAAMG,EAAYL,GAmB9Bjd,EAAA2G,YACA3G,EAAA2X,UACA3X,EAAAud,YAnCF,SAAqBD,QACDrT,IAAdqT,IACFA,EAAY3F,KAEd,IAAInX,EAAIuc,IAER,OADyC,IAAjC3Q,KAAK+Q,MAAM3c,EAAEmX,UAAY,KACV,IAAZ2F,GA8BXtd,EAAAqd,gBACArd,EAAAwd,YApBF,SAAqBC,GACnB,OAAOA,EAAOR,GAoBdjd,EAAA0d,YAjBF,WAGE,OAFWL,IAEG,GAedrd,EAAA2d,YAZF,SAAqBC,GACnB,OAAOA,EAAWjX,kFCjDpB,IAAAkX,EAAA/d,EAAA,IACAge,EAAAhe,EAAA,IACAie,EAAAje,EAAA,IACAke,EAAAle,EAAA,IACAme,EAAAne,EAAA,IA0eEE,EAAAie,aAzeF,IAAAC,EAAApe,EAAA,IAoeEE,EAAAke,SA1cF,IAVA,IAAMC,EAAgB,IAEhBC,EAAY,IAAIzJ,KAAKA,KAAKqI,IAAI,KAAM,EAAG,GAAI,GAAI,EAAG,EAAG,IACrDqB,EAAW,6DAEbC,EAA2B,GAC3BC,EAAOF,EAAS1b,OAChB6b,EAASH,EAASI,OAAO,GAGpBC,EAAI,EAAGA,EAAIL,EAAS1b,OAAQ+b,IAAK,CACxC,IAAIC,EAAIN,EAASI,OAAOC,GAExB,QAAwBzU,IAApBqU,EAAaK,GAAkB,MAAM,IAAI/U,UAAU+U,EAAI,iBAC3DL,EAAaK,GAAKD,EAGpB,SAASE,EAAY9T,GACnB,OAAOgT,EAAO/L,KAAKjH,GAGrB,SAAS+T,EACPvH,EACAwH,EACAC,GAEA,YAHA,IAAAD,OAAA,QACA,IAAAC,OAAA,GAEOH,EAAYI,EAAS1H,EAAawH,EAAeC,IAG1D,SAASC,EACPC,EACAH,EACAC,QADA,IAAAD,OAAA,QACA,IAAAC,OAAA,GAEA,IAmHqB/U,EAnHjBkV,EAAK,IAAIjB,EAAW,GAAG,GAM3B,GALAiB,EAAGC,SAASF,EAAI9H,MAChB+H,EAAGC,SAASF,EAAIzH,WAChB0H,EAAGE,UAAUH,EAAI1H,KACjB2H,EAAGG,YAAYJ,EAAIvH,UACfuH,EAAIpT,SAASqT,EAAGG,YAAYJ,EAAIpT,SAChCoT,EAAInS,KAAM,CACZ,IAAIA,OAAI,EACgB,iBAAbmS,EAAInS,KACbA,EAAOmS,EAAInS,KACFC,MAAM3K,QAAQ6c,EAAInS,QAC3BA,EAAO/B,KAAKC,UAAUiU,EAAInS,OAEhB7C,MAAR6C,GAAqBA,EAAKnK,OAAS,GACrCuc,EAAGG,YAAYvS,GAInB,IAAKgS,GAAiBG,EAAInE,WACxB,IAAsB,IAAAwE,EAAA,EAAAC,EAAAN,EAAInE,WAAJwE,EAAAC,EAAA5c,OAAA2c,IAEpB,IAFG,IAAIE,EAASD,EAAAD,GACZG,EAAkB,IAAIxW,OAAOuW,EAAW,OACnCE,EAAM,EAAGA,EAAMD,EAAgB9c,OAAQ+c,IAC9CR,EAAGS,UAAUF,EAAgBC,IAKnC,IAAKX,GAAuBE,EAAIW,gBAC9B,KAAIC,EAAsB,IAAI5W,OAAOgW,EAAIW,gBAAiB,OAC1D,IAASF,EAAM,EAAGA,EAAMG,EAAoBld,OAAQ+c,IAClDR,EAAGS,UAAUE,EAAoBH,IAKrC,OADAR,EAAGY,OAiFkB9V,EAhFAkV,EAiFC,oBAAXlb,OACF,IAAI+b,WAAW/V,EAAIgW,iBAEnBhW,EAAIiW,WA5Ef,SAASnW,EAAKwN,EAA0B4I,GACtC,IAAIpP,EAAOgH,EAAQoI,GAGnB,OAFA5I,EAAYG,gBAAkB3G,EAAKiH,UACnCT,EAAYI,SAAWyI,EAAWrP,EAAKiH,WAChCT,EAGT,SAAS8I,EAAK9I,EAA0B4I,GACtC,IAAInO,EAAO8M,EAAQvH,GAAa,GAAM,GAClCxG,EAAOgH,EAAQoI,GACfV,EAAYxB,EAAKoC,KAAKC,SAAStO,EAAMjB,EAAKwP,QAAQC,WAClDC,EAAU,IAAIvX,OAAOuW,GAAWrd,SAAS,OAI7C,OAH8B,MAA1BmV,EAAYwD,aAAoBxD,EAAYwD,WAAa,IAAI/N,OACjEuK,EAAYwD,WAAYlN,KAAK4S,GAC7BlJ,EAAYmJ,GAAK,IAAIxX,OAAOyX,EAAMpJ,IAAcnV,SAAS,OAClDmV,EAGT,SAASqJ,EAAWrJ,EAA0B4I,GAC5C,IAAInO,EAAO8M,EAAQvH,GAAa,GAAM,GAClCxG,EAAOgH,EAAQoI,GACfV,EAAYxB,EAAKoC,KAAKC,SAAStO,EAAMjB,EAAKwP,QAAQC,WAClDC,EAAU,IAAIvX,OAAOuW,GAAWrd,SAAS,OAG7C,OAFAmV,EAAYsI,gBAAkBY,EAC9BlJ,EAAYmJ,GAAK,IAAIxX,OAAOyX,EAAMpJ,IAAcnV,SAAS,OAClDmV,EAmCT,SAASQ,EAAQoI,GACf,IAAInO,EAAO6M,EAAY,IAAI3V,OAAOiX,IAE9BI,EAAUtC,EAAKoC,KAAKQ,QAAQC,SAAS9O,GAEzC,MAAO,CACLuO,QAAOA,EACPvI,UAAW,IAAI9O,OAAOqX,EAAQvI,WAAW5V,SAAS,OAClD2e,WAAY,IAAI7X,OAAOqX,EAAQC,WAAWpe,SAAS,QAgBvD,SAAS4e,EAAQC,GACI,iBAARA,IACTA,EAAM/X,OAAOO,KAAKwX,EAAK,QAIzB,IADA,IAAIzc,EAAI,IAAIwb,WAAWiB,EAAIre,QAClBzC,EAAI,EAAGA,EAAI8gB,EAAIre,OAAQzC,IAC9BqE,EAAErE,GAAK8gB,EAAI9gB,GAEb,OAAOqE,EAOT,SAAS0c,EAAMC,GACb,MAAqB,iBAAVA,EACFA,EAEF,IAAIjY,OAAOiY,GAAO/e,SAAS,OAyEpC,SAASue,EAAMpJ,GACb,OAAOsH,EAAYI,EAAS1H,IA8B9B,SAAS6J,EAAaC,GAEpB,IAAIC,EAAmB,IAAIpY,OAAO2V,EAAYA,EAAYwC,KACtDE,EAAiBrY,OAAOsY,OAAO,CAAC,IAAItY,OAAOmY,GAAUC,GAAWD,EAAQze,OAAS,GACrF,GAAsB,IAAlB2e,EAAO3e,OAAc,MAAO,GAGhC,IADA,IAAI6e,EAAS,CAAC,GACLthB,EAAI,EAAGA,EAAIohB,EAAO3e,SAAUzC,EAAG,CAEtC,IADA,IAAIuhB,EAAQH,EAAOphB,GACVwhB,EAAI,EAAGA,EAAIF,EAAO7e,SAAU+e,EACnCD,GAASD,EAAOE,IAAM,EACtBF,EAAOE,GAAKD,EAAQlD,EACpBkD,EAASA,EAAQlD,EAAQ,EAG3B,KAAOkD,EAAQ,GACbD,EAAO5T,KAAK6T,EAAQlD,GACpBkD,EAASA,EAAQlD,EAAQ,EAO7B,IAHA,IAAI5Z,EAAc,GAGTgd,EAAI,EAAiB,IAAdL,EAAOK,IAAYA,EAAIL,EAAO3e,OAAS,IAAKgf,EAC1Dhd,GAAO0Z,EAAS,GAGlB,IAAK,IAAIuD,EAAIJ,EAAO7e,OAAS,EAAGif,GAAK,IAAKA,EACxCjd,GAAO0Z,EAASmD,EAAOI,IAEzB,OAAOjd,EA6CT,SAASkd,IACP,OAAOhE,EAAMgE,mBAGf,SAAS1B,EAAWpI,GAClB,IAMM+J,EAAiBlD,EALE,iBAAd7G,EACAgJ,EAAQhJ,GAERA,GAGLgK,GAAiB,IAAIhE,GAAYiE,OAAO,IAAI/Y,OAAO6Y,IAAKG,SAC9D,OAAO9D,EAAgBgD,EAAaY,GAWtC,SAASpK,EAAQuF,QAAA,IAAAA,WAAAjT,QACFA,IAATiT,IACFA,GAAO,IAAIvI,MAAOgD,WAEpB,IACMvW,EADIgd,EACEzG,UACZ,OAAOvL,KAAK+Q,OAAOD,EAAO9b,GAAK,KAwBjC,SAAS8gB,EAAcC,OAAW,IAAArV,EAAA,GAAAwS,EAAA,EAAAA,EAAAjb,UAAA1B,OAAA2c,IAAAxS,EAAAwS,EAAA,GAAAjb,UAAAib,GAChC,OAAO,IAAI8C,QAAQ,SAAClV,EAASC,GAC3BgV,EAAInV,WAAA,EAAIF,EAAIyU,OAAA,CAAE,SAAChQ,EAAU8Q,GACnB9Q,EACFpE,EAAOoE,GAEPrE,EAAQmV,SAqCdriB,EAAA4e,cAWA5e,EAAA6e,UArBA7e,EAAA8J,OACA9J,EAAAogB,OACApgB,EAAA2gB,aACA3gB,EAAAsiB,SAtVF,SAAkBC,EAA0BrC,EAAgBsC,GAEzC1K,EAAQoI,GAAzB,IAEIuC,EAAM3Y,EAAKyY,EAAarC,GAM5B,OALAuC,EAAMrC,EAAKmC,EAAarC,GACJ,MAAhBsC,GAAwBA,EAAa7f,OAAS,IAChD8f,EAAM9B,EAAW8B,EAAKD,IAGjBC,GA4VPziB,EAAA8X,UAbA9X,EAAA+gB,UACA/gB,EAAAihB,QAHAjhB,EAAA0iB,UAvQF,SAAmBxB,EAAcX,GACV,iBAAVW,IACTA,EAAQH,EAAQG,IAEO,iBAAdX,IAGRA,EAF+B,IAA7BA,EAAUlK,MAAM,KAAK1T,OACLmV,EAAQyI,GACTD,QAAQC,UAEbQ,EAAQR,IAIvB,IAAIxO,EAAO6M,EAAYsC,GAGvB,OAFAyB,QAAQpN,IAAI,QAAUxD,GAEfkP,EADSjD,EAAKoC,KAAKC,SAAStO,EAAMwO,KA4PzCvgB,EAAA4iB,OApPF,SAAgBtL,GACd,IAAIuL,EAAS,GACTvL,EAAYwL,gBACdD,EAAS,KAMX,IAHA,IAAI3B,EAAQlC,EAAS1H,GACjByL,EAAQ,IAAI9Z,OAAOiY,EAAMve,OAASkgB,GAE7BnD,EAAM,EAAGA,EAAMqD,EAAMpgB,OAAQ+c,IACpCqD,EAAMrD,GAAOwB,EAAMxB,GAGrB,IAAI3N,EAAO6M,EAAYmE,GAEnBtD,EAAkB,IAAIxW,OAAOqO,EAAYwD,WAAY,GAAI,OACzDkI,EAAwB,IAAI/Z,OAAOqO,EAAYG,gBAAiB,OAEpE,OADUuG,EAAKoC,KAAKC,SAASuC,OAAO7Q,EAAM0N,EAAiBuD,IAoO3DhjB,EAAAijB,YA1NF,SAAqB/B,EAAc1B,EAAkBzH,GAC9B,iBAAVmJ,IACTA,EAAQH,EAAQG,IAEO,iBAAd1B,IACTA,EAAYuB,EAAQvB,IAEG,iBAAdzH,IACTA,EAAYgJ,EAAQhJ,IAEtB,IAAIhG,EAAO6M,EAAYsC,GAEvB,OADUlD,EAAKoC,KAAKC,SAASuC,OAAO7Q,EAAMyN,EAAWzH,IA2MrD/X,EAAA0gB,QAMA1gB,EAAAkjB,UA5IF,SAAmBvH,GACjB,GAAuB,iBAAZA,EACT,OAAO,EAET,IAAK,iBAAiBpW,KAAKoW,GAAU,CACnC,IAlEJ,SAA4BhX,GAC1B,GAAmB,IAAfA,EAAIhC,OAAc,OAAOsG,OAAOS,YAAY,GAGhD,IADA,IAAIwX,EAAkB,CAAC,GACdxB,EAAM,EAAGA,EAAM/a,EAAIhC,OAAQ+c,IAAO,CACzC,IAAIve,EAAQmd,EAAa3Z,EAAI+a,IAC7B,QAAczV,IAAV9I,EAAqB,OAEzB,IADA,IAAIsgB,EAAQtgB,EACHugB,EAAI,EAAGA,EAAIR,EAAMve,SAAU+e,EAClCD,GAASP,EAAMQ,GAAKnD,EACpB2C,EAAMQ,GAAa,IAARD,EACXA,IAAU,EAGZ,KAAOA,EAAQ,GACbP,EAAMtT,KAAa,IAAR6T,GACXA,IAAU,EAKd,IAAK,IAAIE,EAAI,EAAGhd,EAAIgd,KAAOnD,GAAUmD,EAAIhd,EAAIhC,OAAS,IAAKgf,EACzDT,EAAMtT,KAAK,GAEb,OAAO3E,OAAOO,KAAK0X,EAAMiC,WA0ClBC,CAAmBzH,EAAQ7J,MAAM,IACpC,OAAO,EAET,IACiC,IAA/B,CAAC,KAAKhE,QAAQ6N,EAAQ,MACS,IAA/B,CAAC,KAAK7N,QAAQ6N,EAAQ,MACS,IAA/B,CAAC,KAAK7N,QAAQ6N,EAAQ,IAEtB,OAAO,EAGX,OAAO,GA6HP3b,EAAAqjB,cA7GF,WACE,IAAMC,EAAWzB,IAGjB,MAAO,CACLf,WAAYwC,EACZ3H,QAASwE,EAJOrI,EAAQwL,GAAUvL,aA4GpC/X,EAAA6hB,mBACA7hB,EAAAmgB,aACAngB,EAAAujB,YAtFF,SAAqBC,EAAmB3J,GACtC,YADsC,IAAAA,MAAA,GAC/B2J,EAAYpX,KAAKC,IAAI,GAAIwN,IAsFhC7Z,EAAAyjB,UAnFF,SAAmBxL,EAAgB4B,GACjC,YADiC,IAAAA,MAAA,GAC1B5B,EAAS7L,KAAKC,IAAI,GAAIwN,IAoF7B7Z,EAAA2X,UAIA3X,EAAAkiB,gBACAliB,EAAA0jB,gBAlCF,SAAyBC,GACvB,OAAO,SAACxB,OAAW,IAAArV,EAAA,GAAAwS,EAAA,EAAAA,EAAAjb,UAAA1B,OAAA2c,IAAAxS,EAAAwS,EAAA,GAAAjb,UAAAib,GACjB,OAAO4C,EAAalV,WAAA,GAACmV,EAAKzgB,KAAKiiB,IAAMpC,OAAKzU,MAiC5C9M,EAAAuC,WA7BF,SAAoBE,GAClB,MAAsB,mBAARA,oBCjdhB,IAAAmhB,EAAA,CACAC,IAAA,GACAC,KAAA,GACAC,OAAA,GACAjG,OAAA,GACAkG,OAAA,GACAC,OAAA,GACAC,OAAA,GACAC,UAAA,IAGAC,EAAiBtkB,EAAQ,IACzBukB,EAAsBvkB,EAAQ,GAC9BwkB,EAAsBxkB,EAAQ,IAC9BmJ,EAAanJ,EAAQ,GAAamJ,OAoClChJ,EAAAD,QAlCA,SAAAuM,EAAAC,EAAAC,EAAAC,EAAAuV,GACAoC,EAAA9X,EAAAC,EAAAC,EAAAC,GAEAzD,EAAA/G,SAAAqK,OAAAtD,EAAAO,KAAA+C,EAAA+X,IACArb,EAAA/G,SAAAsK,OAAAvD,EAAAO,KAAAgD,EAAA8X,IAEArC,KAAA,OAEA,IAAAsC,EAAAtb,EAAAS,YAAAgD,GACA8X,EAAAvb,EAAAS,YAAA8C,EAAA7J,OAAA,GACA6J,EAAAiY,KAAAD,EAAA,IAAAhY,EAAA7J,QAMA,IAJA,IAAA+hB,EAAA,EACAC,EAAAf,EAAA3B,GACA9hB,EAAAiM,KAAAwY,KAAAlY,EAAAiY,GAEAzkB,EAAA,EAAiBA,GAAAC,EAAQD,IAAA,CACzBskB,EAAAK,cAAA3kB,EAAAsM,EAAA7J,QAKA,IAHA,IAAAmiB,EAAAV,EAAAnC,EAAA1V,GAAAyV,OAAAwC,GAAAvC,SACA8C,EAAAD,EAEApD,EAAA,EAAmBA,EAAAjV,EAAgBiV,IAAA,CACnCqD,EAAAX,EAAAnC,EAAA1V,GAAAyV,OAAA+C,GAAA9C,SACA,QAAAN,EAAA,EAAqBA,EAAAgD,EAAUhD,IAAAmD,EAAAnD,IAAAoD,EAAApD,GAG/BmD,EAAAL,KAAAF,EAAAG,GACAA,GAAAC,EAGA,OAAAJ,kBC/CA,IAAAD,EAEA1Z,QAAAoa,QACAV,EAAA,QAIAA,EAFAW,SAAAra,QAAA5D,QAAAqP,MAAA,QAAAvE,MAAA,QAEA,mBAEA7R,EAAAD,QAAAskB,mBCTA,IACA,IAAAY,EAAaplB,EAAQ,IACrB,sBAAAolB,EAAAC,SAAA,QACAllB,EAAAD,QAAAklB,EAAAC,SACC,MAAAha,GACDlL,EAAAD,QAAmBF,EAAQ,oFCFdE,EAAAolB,4BAA8B,WAe3C,SAAYC,GACVA,IAAA,oBACAA,IAAA,yBACAA,IAAA,qCACAA,IAAA,+BACAA,IAAA,kBACAA,IAAA,0BANF,CAAYrlB,EAAAqlB,WAAArlB,EAAAqlB,SAAQ,KAqEpB,IAAAC,EAAA,oBAAAA,IACUxW,KAAAyW,WAAa,GACbzW,KAAA0W,gBAAkB,IAAIC,IACtB3W,KAAA4W,YAAc,IAAID,IAClB3W,KAAA6W,cAAgB,IAAIF,IACpB3W,KAAA8W,QAAU,IAAIH,IACd3W,KAAA+W,SAAW,IAAIJ,IAkHzB,OAhHSH,EAAAQ,eAAP,SAAsBC,GACpB,IAAMnd,EAAW,IAAI0c,EAKrB,OAJA1c,EAAS2c,WAAaQ,EAAKC,UAC3BD,EAAKE,QAAQzjB,QAAQ,SAAAlC,GAAK,OAAAsI,EAASid,SAASK,IAAI5lB,EAAEG,KAAMH,KACxDylB,EAAKI,aAAa3jB,QAAQ,SAAAjC,GAAK,OAAAqI,EAAS+c,cAAcO,IAAI3lB,EAAEE,KAAMF,KAClEwlB,EAAKld,OAAOrG,QAAQ,SAAAP,GAAK,OAAA2G,EAASgd,QAAQM,IAAIjkB,EAAExB,KAAMwB,KAC/C2G,GAGT0c,EAAAxjB,UAAAskB,aAAA,WACE,MAAO,CACLJ,UAAWlX,KAAKkX,UAChBK,eAAgBvX,KAAKuX,eACrBC,eAAgBxX,KAAKwX,eACrBH,aAAcrX,KAAKqX,aACnBtd,OAAQiG,KAAKjG,OACbod,QAASnX,KAAKmX,UAIlBrlB,OAAAC,eAAIykB,EAAAxjB,UAAA,YAAS,KAIb,WACE,OAAOgN,KAAKyW,gBALd,SAAcpkB,GACZ2N,KAAKyW,WAAapkB,mCAOpBP,OAAAC,eAAIykB,EAAAxjB,UAAA,SAAM,KAAV,WACC,OAAOiL,MAAMvD,KAAKsF,KAAK8W,QAAQW,2CAIhC3lB,OAAAC,eAAIykB,EAAAxjB,UAAA,UAAO,KAAX,WACE,OAAOiL,MAAMvD,KAAKsF,KAAK+W,SAASU,2CAIlC3lB,OAAAC,eAAIykB,EAAAxjB,UAAA,eAAY,KAAhB,WACE,OAAOiL,MAAMvD,KAAKsF,KAAK6W,cAAcY,2CAIvC3lB,OAAAC,eAAIykB,EAAAxjB,UAAA,iBAAc,KAAlB,WACE,OAAOiL,MAAMvD,KAAKsF,KAAK0W,gBAAgBe,2CAIzC3lB,OAAAC,eAAIykB,EAAAxjB,UAAA,iBAAc,KAAlB,WACE,OAAOiL,MAAMvD,KAAKsF,KAAK4W,YAAYa,2CAIrCjB,EAAAxjB,UAAA0kB,aAAA,SAAa/lB,EAAckL,GACzBmD,KAAK+W,SAASY,OAAOhmB,GACrBqO,KAAK+W,SAASK,IAAIva,EAAOlL,KAAMkL,IAEjC2Z,EAAAxjB,UAAA4kB,eAAA,SAAejmB,GACb,OAAOqO,KAAK6W,cAAc5kB,IAAIN,IAGhC6kB,EAAAxjB,UAAA6kB,iBAAA,SAAiBlmB,GACf,OAAOqO,KAAK4W,YAAY3kB,IAAIN,IAG9B6kB,EAAAxjB,UAAA8kB,SAAA,SAASnmB,GACP,OAAOqO,KAAK8W,QAAQ7kB,IAAIN,IAG1B6kB,EAAAxjB,UAAA+kB,UAAA,SAAUpmB,GACR,OAAOqO,KAAK+W,SAAS9kB,IAAIN,IAG3B6kB,EAAAxjB,UAAAglB,uBAAA,SAAuBC,GAAvB,IAAAC,EAAAlY,KACEiY,EAAUvkB,QAAQ,SAAAykB,GAGlBD,EAAKxB,gBAAgBU,IAAIe,EAASxmB,KAAMwmB,MAI1C3B,EAAAxjB,UAAAolB,sBAAA,SAAsBC,GAGpBrY,KAAK4W,YAAYQ,IAAIiB,EAAc1mB,KAAM0mB,IAG3C7B,EAAAxjB,UAAAslB,cAAA,SAAcC,GAGZvY,KAAK8W,QAAQM,IAAImB,EAAM5mB,KAAM4mB,IAG/B/B,EAAAxjB,UAAAwlB,yBAAA,SAAyBC,GAGvBzY,KAAK6W,cAAcO,IAAIqB,EAAa9mB,KAAM8mB,IAG5CjC,EAAAxjB,UAAA0lB,sBAAA,SAAsBC,GAAtB,IAAAT,EAAAlY,KACEA,KAAKyW,WAAakC,EAASzB,UAC3ByB,EAAS5e,OAAOrG,QAAQ,SAAAP,GAAK,OAAA+kB,EAAKI,cAAcnlB,KAChDwlB,EAASxB,QAAQzjB,QAAQ,SAAAlC,GAAK,OAAA0mB,EAAKU,eAAepnB,MAGpDglB,EAAAxjB,UAAA4lB,eAAA,SAAe/b,GAIbmD,KAAK+W,SAASK,IAAIva,EAAOlL,KAAMkL,IAGnC2Z,EAxHA,GAAatlB,EAAAslB,0GCvFb,IAAAqC,EAAA7nB,EAAA,IAaSE,EAAA4nB,QAbFD,EAAA9R,oEAYPlJ,CAAA7M,EAAA,oFCXA,IAAA+nB,EAAA/nB,EAAA,IAEAgoB,EAAAhoB,EAAA,GACAioB,EAAAjoB,EAAA,IAGAkoB,EAAAloB,EAAA,IACAgX,EAAAhX,EAAA,GACAkX,EAAAlX,EAAA,IACAmoB,EAAAnoB,EAAA,IASA8nB,EAAA,WAmBE,SAAAA,EAAYM,EAAoBhI,EAAgBsC,GAK9C,QAL8C,IAAAA,MAAA,IAC9C1T,KAAKoZ,SAAWA,EAChBpZ,KAAKoR,OAASA,EACdpR,KAAK0T,aAAeA,EACpB1T,KAAKqZ,IAAM,IAAIN,EAAAhS,QAAQ/G,MACnBoR,GAAUA,EAAOvd,OAAS,EAAG,CAC/B,IAAIoV,EAAYf,EAAMc,QAAQoI,GAAQnI,UACtCjJ,KAAKiJ,UAAYA,EACjB,IAAI4D,EAAU3E,EAAMmJ,WAAWpI,GAC/BjJ,KAAK6M,QAAUA,EACf7M,KAAKsZ,eAAiB,CAAEzM,QAASA,EAAS5D,UAAWA,QAErDjJ,KAAKiJ,UAAY,GACjBjJ,KAAK6M,QAAU,GACf7M,KAAKsZ,eAAiB,CAAEzM,QAAS,GAAI5D,UAAW,IAoJtD,OAxIS6P,EAAA9lB,UAAAumB,YAAP,SAAmBH,GACjBpZ,KAAKoZ,SAAWA,EAChBpZ,KAAKqZ,IAAID,SAAWA,GAGfN,EAAA9lB,UAAAwmB,gBAAP,SAAuB1iB,EAAa2iB,QAAA,IAAAA,MAAeT,EAAAjb,QAAQ2b,MACzD,IAAIN,EAAW,IAAIJ,EAAAW,aAAa7iB,EAAK2iB,GACrCzZ,KAAKoZ,SAAWA,EAChBpZ,KAAKqZ,IAAID,SAAWA,GAGfN,EAAA9lB,UAAA4mB,UAAP,SAAiBxI,GACfpR,KAAKoR,OAASA,GAGT0H,EAAA9lB,UAAA6mB,gBAAP,SAAuBnG,GACrB1T,KAAK0T,aAAeA,GAOfoF,EAAA9lB,UAAAwgB,SAAP,SAAgBC,GACd,OAAOvL,EAAMsL,SAASC,EAAazT,KAAKoR,OAAQpR,KAAK0T,eAGhDoF,EAAA9lB,UAAAse,KAAP,SACEmC,EACArC,EACAsC,EACApR,GAEA,QAJA,IAAA8O,MAAiBpR,KAAKoR,aACtB,IAAAsC,MAAuB1T,KAAK0T,eAGvBpR,EAEH,OADyB4F,EAAM0M,gBAAgB5U,KACxCoT,CAAcpT,KAAKsR,KAAMmC,EAAarC,EAAQsC,GAEvD,IAEE,OAAOpR,EAAS,KADS4F,EAAMsL,SAASC,EAAarC,EAAQsC,IAE7D,MAAOoG,GACPxX,EAASwX,KAUNhB,EAAA9lB,UAAA4gB,UAAP,SACExB,EACAhB,EACA9O,GAEA,QAHA,IAAA8O,MAAiBpR,KAAKoR,SAGjB9O,EAEH,OADyB4F,EAAM0M,gBAAgB5U,KACxCoT,CAAcpT,KAAK4T,UAAWxB,EAAOhB,GAE9C,IAEE,OAAO9O,EAAS,KADU4F,EAAM0L,UAAUxB,EAAOhB,IAEjD,MAAO0I,GACPxX,EAASwX,KAiCNhB,EAAA9lB,UAAAsa,iBAAP,SACE3b,EACAgZ,EACA9Q,EACA3B,EACAqV,EACAC,GAEA,YAJA,IAAAtV,MAAA,aACA,IAAAqV,OAAA,QACA,IAAAC,MAAA,KAEOxN,KAAKqZ,IAAI/L,iBAAiB3b,EAAMgZ,EAAM9Q,EAAM3B,EAASqV,EAAoBC,IAS3EsL,EAAA9lB,UAAA+mB,uBAAP,SAA8BC,GAC5B,OAAO,IAAIf,EAAAgB,aAAaD,EAAcha,KAAKqZ,MAOtCP,EAAA9lB,UAAAknB,uBAAP,SAA8BvoB,GAA9B,IAAAumB,EAAAlY,KACE,IACE,OAAOA,KAAKqZ,IAAIc,kBAAkBxoB,GAAMyoB,KAAK,SAAC7G,GAC5C,OAAIA,GAAOA,EAAIoF,SACNrF,QAAQlV,QAAQ8Z,EAAK6B,uBAAuBxG,EAAIoF,WAEhDrF,QAAQjV,OAAO,wBAG1B,MAAOhC,GAEP,OADAwX,QAAQpN,IAAIpK,GACLiX,QAAQjV,OAAOhC,KAjLnByc,EAAAhb,SAAWkb,EAAAlb,SACXgb,EAAAa,aAAeX,EAAAW,aACfb,EAAA/a,QAAUib,EAAAjb,QACV+a,EAAA3Q,mBAAqB+Q,EAAA/Q,mBACrB2Q,EAAA9Q,UAAYA,EACZ8Q,EAAA5Q,MAAQA,EACR4Q,EAAAK,SAAWA,EACXL,EAAAmB,aAAehB,EAAAgB,aA6KxBnB,EArLA,aAAqBA,2vDCnBrB,IAAAuB,EAAArpB,EAAA,IAEAkoB,EAAAloB,EAAA,IAGAspB,EAAAtpB,EAAA,GACAupB,EAAAvpB,EAAA,IAEAwpB,EAAA,SAAAC,GAOE,SAAAD,EAAYE,GAAZ,IAAAxC,EACEuC,EAAAlpB,KAAAyO,KAAM0a,EAAQtB,WAASpZ,YACvBkY,EAAKwC,QAAUA,IA6xCnB,OAtyCqCC,EAAAH,EAAAC,GAuBtBD,EAAAxnB,UAAA4D,KAAb,SAAkBwa,eAAA,IAAAA,MAAepR,KAAK0a,QAAQtJ,kEAC5C,OAAImJ,EAAWK,YAAYxJ,GAI3B,GAAOpR,KAAK6a,KAAKP,EAAAjkB,KAAKK,SAASE,KAAM,CAACwa,OAAOA,KAF3C,GAAOkC,QAAQjV,OAAO,gCASbmc,EAAAxnB,UAAA6D,MAAb,SAAmBoS,eAAA,IAAAA,MAAkBjJ,KAAK0a,QAAQzR,qEAChD,OAAIsR,EAAWO,eAAe7R,GAI9B,GAAOjJ,KAAK6a,KAAKP,EAAAjkB,KAAKK,SAASG,MAAM,CAACoS,UAAUA,KAF9C,GAAOqK,QAAQjV,OAAO,mCASbmc,EAAAxnB,UAAA+nB,iBAAb,SAA8BlO,eAAA,IAAAA,MAAgB7M,KAAK0a,QAAQ7N,mEACzD,OAAI0N,EAAWS,aAAanO,GAI5B,GAAO7M,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAG3B,SAASY,OAAOxB,QAAQ,WAAY+W,KAF1D,GAAOyG,QAAQjV,OAAO,iCASbmc,EAAAxnB,UAAAioB,WAAb,SAAwBpO,eAAA,IAAAA,MAAgB7M,KAAK0a,QAAQ7N,mEACnD,OAAI0N,EAAWS,aAAanO,GAI5B,GAAO7M,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAG3B,SAAS6B,QAAQ,CAACsU,QAASA,KAFjD,GAAOyG,QAAQjV,OAAO,iCASbmc,EAAAxnB,UAAAkoB,cAAb,SAA2BrO,eAAA,IAAAA,MAAgB7M,KAAK0a,QAAQ7N,mEACtD,OAAI0N,EAAWS,aAAanO,GAI5B,GAAO7M,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAG3B,SAAS4B,SAASxC,QAAQ,WAAW+W,KAF3D,GAAOyG,QAAQjV,OAAO,iCASbmc,EAAAxnB,UAAAmoB,oBAAb,SAAiCtO,oEAC/B,SAAO7M,KAAK/N,IAAIqoB,EAAAjkB,KAAKK,SAASO,gBAAiB,CAAC4V,QAASA,UAM9C2N,EAAAxnB,UAAAooB,gBAAb,4EACE,SAAOpb,KAAK/N,IAAIqoB,EAAAjkB,KAAKK,SAASK,WAMnByjB,EAAAxnB,UAAAqoB,gBAAb,4EACE,SAAOrb,KAAK/N,IAAIqoB,EAAAjkB,KAAKK,SAASM,aAYnBwjB,EAAAxnB,UAAAsoB,kBAAb,SAA+BC,EAAiBC,EAAiBC,EAAoBlkB,EAAmBqR,EAAoB7L,eAA7F,IAAAwe,MAAA,QAAiB,IAAAC,MAAA,SAAiB,IAAAC,MAAA,SAAoB,IAAAlkB,OAAgB,QAAG,IAAAqR,MAAA,SAAoB,IAAA7L,MAAA,oEAiB1H,OAhBIyB,EAAmB,CACrB+c,OAAOA,EACPC,MAAMA,GAEJC,EAAQ5nB,OAAO,IACjB2K,EAAOid,GAASA,IAEL,GAATlkB,IACFiH,EAAOjH,GAAQA,GAEbqR,EAAS/U,OAAO,IAClB2K,EAAOoK,GAAUA,GAEf7L,EAAQlJ,OAAO,IACjB2K,EAAOzB,GAASA,GAElB,GAAOiD,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGnB,aAAaa,KAAKyG,SAO/Bgc,EAAAxnB,UAAA0oB,qBAAb,SAAkCC,oEAChC,SAAO3b,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGnB,aAAaI,OAAOxB,QAAQ,OAAO6lB,UAOhDnB,EAAAxnB,UAAA4oB,gCAAb,SAA6CD,oEAC3C,SAAO3b,KAAK/N,IAAIqoB,EAAAjkB,KAAKa,aAAaE,mBAAmB,CAACua,GAAGgK,UAS9CnB,EAAAxnB,UAAA6oB,6BAAb,SAA0ClT,EAA4BkE,eAA5B,IAAAlE,MAAA,SAA4B,IAAAkE,MAAA,oEAUpE,OATIrO,EAAmB,GAEnBmK,EAAgB9U,OAAO,IACzB2K,EAAOmK,GAAiBA,GAEtBkE,EAAQhZ,OAAO,IACjB2K,EAAOqO,GAASA,GAGlB,GAAO7M,KAAK/N,IAAIqoB,EAAAjkB,KAAKa,aAAaC,YAAaqH,SAUpCgc,EAAAxnB,UAAA8oB,eAAb,SAA4BP,EAAiBC,EAAkBO,EAAmBnQ,eAAtD,IAAA2P,MAAA,QAAiB,IAAAC,MAAA,SAAkB,IAAAO,MAAA,SAAmB,IAAAnQ,MAAA,oEAWhF,OAVIpN,EAAmB,CACrB+c,OAAOA,EACPC,MAAMA,GAEJO,EAAQloB,OAAO,IACjB2K,EAAOud,GAASA,GAEdnQ,EAAS/X,OAAO,IAClB2K,EAAOoN,GAAUA,GAEnB,GAAO5L,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGG,UAAUT,KAAKyG,SAO5Bgc,EAAAxnB,UAAAgpB,mBAAb,SAAgCrK,oEAC9B,SAAO3R,KAAK/N,IAAIqoB,EAAAjkB,KAAKgB,OAAOC,OAAO,CAACqa,GAAGA,UAO5B6I,EAAAxnB,UAAAipB,uBAAb,SAAoC1kB,oEAClC,SAAOyI,KAAK/N,IAAIqoB,EAAAjkB,KAAKgB,OAAOC,OAAO,CAACC,OAAOA,UAOhCijB,EAAAxnB,UAAAkpB,qBAAb,SAAkCjZ,oEAChC,SAAOjD,KAAK/N,IAAIqoB,EAAAjkB,KAAKgB,OAAOC,OAAO,CAAC2L,KAAKA,UAS9BuX,EAAAxnB,UAAAmpB,YAAb,SAAyBZ,EAAkBC,EAAkBC,eAApC,IAAAF,MAAA,QAAkB,IAAAC,MAAA,SAAkB,IAAAC,MAAA,yEAC3D,SAAOzb,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGhB,OAAOU,KAAK,CAClCwjB,OAAOA,EACPC,MAAMA,EACNC,QAAQA,UAQCjB,EAAAxnB,UAAAopB,2BAAb,SAAwCC,oEACtC,SAAOrc,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGhB,OAAOC,OAAOxB,QAAQ,cAAcumB,UAMjD7B,EAAAxnB,UAAAspB,gBAAb,4EACE,SAAOtc,KAAK/N,IAAIqoB,EAAAjkB,KAAKgB,OAAOE,cAMjBijB,EAAAxnB,UAAAupB,aAAb,4EACE,SAAOvc,KAAK/N,IAAIqoB,EAAAjkB,KAAKgB,OAAOG,iBAMjBgjB,EAAAxnB,UAAAwpB,eAAb,4EACE,SAAOxc,KAAK/N,IAAIqoB,EAAAjkB,KAAKgB,OAAOI,cAMjB+iB,EAAAxnB,UAAAypB,aAAb,4EACE,SAAOzc,KAAK/N,IAAIqoB,EAAAjkB,KAAKgB,OAAOK,cAMjB8iB,EAAAxnB,UAAA0pB,oBAAb,4EACE,SAAO1c,KAAK/N,IAAIqoB,EAAAjkB,KAAKgB,OAAOM,cAOjB6iB,EAAAxnB,UAAA2pB,uBAAb,SAAoChL,oEAClC,SAAO3R,KAAK/N,IAAIqoB,EAAAjkB,KAAKgB,OAAOO,KAAK,CAAC+Z,GAAGA,UAO1B6I,EAAAxnB,UAAA4pB,2BAAb,SAAwCrlB,oEACtC,SAAOyI,KAAK/N,IAAIqoB,EAAAjkB,KAAKgB,OAAOO,KAAK,CAACL,OAAOA,UAM9BijB,EAAAxnB,UAAA6pB,kBAAb,4EACE,SAAO7c,KAAK/N,IAAIqoB,EAAAjkB,KAAKwB,UAAUb,aAOpBwjB,EAAAxnB,UAAA8pB,oBAAb,SAAiCnrB,oEAC/B,SAAOqO,KAAK/N,IAAIqoB,EAAAjkB,KAAKwB,UAAUC,OAAO,CAACnG,KAAKA,UAejC6oB,EAAAxnB,UAAA+pB,2BAAb,SAAwClQ,oEACtC,SAAO7M,KAAK/N,IAAIqoB,EAAAjkB,KAAKwB,UAAUP,OAAO,CAACuV,QAAQA,UAOpC2N,EAAAxnB,UAAAgqB,wBAAb,SAAqCrrB,oEACnC,SAAOqO,KAAK/N,IAAIqoB,EAAAjkB,KAAKwB,UAAUP,OAAO,CAAC3F,KAAKA,UAUjC6oB,EAAAxnB,UAAAiqB,eAAb,SAA4B1B,EAAkBC,EAAkBC,eAApC,IAAAF,MAAA,QAAkB,IAAAC,MAAA,SAAkB,IAAAC,MAAA,uEAC9D,SAAOzb,KAAK/N,IAAIqoB,EAAAjkB,KAAKwB,UAAUE,KAAK,CAClCwjB,OAAOA,EACPC,MAAMA,EACNC,QAAQA,UAQCjB,EAAAxnB,UAAAkqB,2BAAb,SAAwCjU,oEACtC,SAAOjJ,KAAK/N,IAAIqoB,EAAAjkB,KAAKwB,UAAUG,eAAe,CAACiR,UAAUA,UAS9CuR,EAAAxnB,UAAAmqB,WAAb,SAAwB5B,EAAkBC,eAAlB,IAAAD,MAAA,QAAkB,IAAAC,MAAA,8DACxC,SAAOxb,KAAK/N,IAAIqoB,EAAAjkB,KAAK4B,MAAMF,KAAK,CAC9BwjB,OAAOA,EACPC,MAAMA,UAOGhB,EAAAxnB,UAAAoqB,eAAb,4EACE,SAAOpd,KAAK/N,IAAIqoB,EAAAjkB,KAAK4B,MAAMC,eAQhBsiB,EAAAxnB,UAAAqqB,cAAb,SAA2BC,EAAYna,oEACrC,SAAOnD,KAAK/N,IAAIqoB,EAAAjkB,KAAK4B,MAAMX,OAAO,CAACgmB,GAAGA,EAAIna,KAAKA,UAMpCqX,EAAAxnB,UAAAuqB,gBAAb,4EACE,SAAOvd,KAAK/N,IAAIqoB,EAAAjkB,KAAK8B,MAAMR,cAMhB6iB,EAAAxnB,UAAAwqB,oBAAb,4EACE,SAAOxd,KAAK/N,IAAIqoB,EAAAjkB,KAAK8B,MAAMC,mBAQhBoiB,EAAAxnB,UAAAyqB,eAAb,SAA4BlC,EAAkBC,eAAlB,IAAAD,MAAA,QAAkB,IAAAC,MAAA,8DAC5C,SAAOxb,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGI,UAAUV,KAAK,CACrCwjB,OAAOA,EACPC,MAAMA,UAQGhB,EAAAxnB,UAAA0qB,kBAAb,SAA+BnR,oEAC7B,SAAOvM,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGI,UAAUnB,OAAOxB,QAAQ,MAAMyW,UAQ5CiO,EAAAxnB,UAAA2qB,cAAb,SAA2BpC,EAAkBC,eAAlB,IAAAD,MAAA,QAAkB,IAAAC,MAAA,8DAC3C,SAAOxb,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGK,SAASX,KAAK,CACpCwjB,OAAOA,EACPC,MAAMA,UAQGhB,EAAAxnB,UAAA4qB,yBAAb,SAAsClR,oEACpC,SAAO1M,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGK,SAASC,WAAW7C,QAAQ,QAAQ4W,UAMjD8N,EAAAxnB,UAAA6qB,6BAAb,4EACE,SAAO7d,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGK,SAASE,sBAOtB4hB,EAAAxnB,UAAA8qB,yBAAb,SAAsCpR,oEACpC,SAAO1M,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGK,SAASG,eAAe/C,QAAQ,QAAQ4W,UAQrD8N,EAAAxnB,UAAA+qB,oBAAb,SAAiCrR,EAAiBG,oEAChD,SAAO7M,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGK,SAASK,YAAYjD,QAAQ,QAAQ4W,GAAS5W,QAAQ,WAAW+W,UAO9E2N,EAAAxnB,UAAAgrB,uBAAb,SAAoCnR,oEAClC,SAAO7M,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGK,SAASI,YAAYhD,QAAQ,WAAW+W,UAQrD2N,EAAAxnB,UAAAirB,sBAAb,SAAmCpR,EAAiBjB,oEAClD,SAAO5L,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGK,SAASM,SAASlD,QAAQ,WAAW+W,GAAS/W,QAAQ,YAAY8V,UAQ/E4O,EAAAxnB,UAAAkrB,2BAAb,SAAwCrR,EAAiBjB,oEACvD,SAAO5L,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGK,SAASO,YAAYnD,QAAQ,WAAW+W,GAAS/W,QAAQ,YAAY8V,UAQlF4O,EAAAxnB,UAAAmrB,YAAb,SAAyB5C,EAAkBC,eAAlB,IAAAD,MAAA,QAAkB,IAAAC,MAAA,8DACzC,SAAOxb,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGa,OAAOnB,KAAM,CACnCwjB,OAAOA,EACPC,MAAMA,UAQGhB,EAAAxnB,UAAAorB,uBAAb,SAAoCpa,oEAClC,SAAOhE,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGa,OAAOC,WAAWrD,QAAQ,QAAQkO,UAO/CwW,EAAAxnB,UAAAqrB,YAAb,SAAyBxR,oEACvB,SAAO7M,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGa,OAAOE,MAAMtD,QAAQ,WAAW+W,UAQ7C2N,EAAAxnB,UAAAsrB,0BAAb,SAAuC/C,EAAkBC,eAAlB,IAAAD,MAAA,QAAkB,IAAAC,MAAA,8DACvD,SAAOxb,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGgB,OAAOtB,KAAK,CAClCwjB,OAAOA,EACPC,MAAMA,UASGhB,EAAAxnB,UAAAurB,aAAb,SAA0BhD,EAAkBC,eAAlB,IAAAD,MAAA,QAAkB,IAAAC,MAAA,8DAC1C,SAAOxb,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGiB,IAAIC,aAAa,CACvCgiB,OAAOA,EACPC,MAAMA,UAQGhB,EAAAxnB,UAAAwrB,gBAAb,SAA6B3R,oEAC3B,SAAO7M,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGiB,IAAIE,eAAe1D,QAAQ,WAAW+W,UASnD2N,EAAAxnB,UAAAyrB,oBAAb,SAAiC5R,EAAiB0O,EAAkBC,eAAlB,IAAAD,MAAA,QAAkB,IAAAC,MAAA,8DAClE,SAAOxb,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGiB,IAAIG,WAAW3D,QAAQ,WAAW+W,GAAS,CACjE0O,OAAOA,EACPC,MAAMA,UASGhB,EAAAxnB,UAAA0rB,cAAb,SAA2BnD,EAAkBC,eAAlB,IAAAD,MAAA,QAAkB,IAAAC,MAAA,8DAC3C,SAAOxb,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGiB,IAAII,WAAW,CACrC6hB,OAAOA,EACPC,MAAMA,UAQGhB,EAAAxnB,UAAA2rB,eAAb,SAA4B/S,oEAC1B,SAAO5L,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGiB,IAAIK,cAAc7D,QAAQ,QAAQ8V,UAS/C4O,EAAAxnB,UAAA4rB,mBAAb,SAAgC/R,EAAiB0O,EAAkBC,eAAlB,IAAAD,MAAA,QAAkB,IAAAC,MAAA,8DACjE,SAAOxb,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGiB,IAAIhB,SAASxC,QAAQ,WAAW+W,GAAS,CAC/D0O,OAAOA,EACPC,MAAMA,UAYGhB,EAAAxnB,UAAA6rB,eAAb,SAA4BltB,EAAeoqB,EAAmBlP,EAAmB0O,EAAkBC,eAAvE,IAAA7pB,MAAA,SAAe,IAAAoqB,MAAA,SAAmB,IAAAlP,MAAA,SAAmB,IAAA0O,MAAA,QAAkB,IAAAC,MAAA,oEAcjG,OAbIhd,EAAmB,CACrB+c,OAAOA,EACPC,MAAMA,GAEJ7pB,EAAKkC,OAAO,IACd2K,EAAO7M,GAAMA,GAEXoqB,EAAQloB,OAAO,IACjB2K,EAAOud,GAASA,GAEdlP,EAAQhZ,OAAO,IACjB2K,EAAOqO,GAASA,GAElB,GAAO7M,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGuB,UAAU7B,KAAKyG,SAO5Bgc,EAAAxnB,UAAAmnB,kBAAb,SAA+BxoB,oEAC7B,SAAOqO,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGuB,UAAUtC,OAAOxB,QAAQ,QAAQnE,UAO9C6oB,EAAAxnB,UAAA8rB,kBAAb,SAA+BntB,oEAC7B,SAAOqO,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGuB,UAAUC,KAAK/D,QAAQ,QAAQnE,UAO5C6oB,EAAAxnB,UAAA+rB,sBAAb,SAAmCptB,oEACjC,SAAOqO,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGuB,UAAUE,SAAShE,QAAQ,QAAQnE,UAoBhD6oB,EAAAxnB,UAAAgsB,sBAAb,SAAmCrtB,EAAcoP,oEAC/C,SAAOf,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGuB,UAAUG,OAAOjE,QAAQ,QAAQnE,GAAMmE,QAAQ,QAAQiL,UAQpEyZ,EAAAxnB,UAAAisB,oBAAb,SAAiCttB,EAAcgqB,oEAC7C,SAAO3b,KAAK/N,IAAIqoB,EAAAjkB,KAAKgC,GAAGuB,UAAUI,QAAQlE,QAAQ,QAAQnE,GAAMmE,QAAQ,OAAO6lB,UASpEnB,EAAAxnB,UAAAksB,mBAAb,SAAgCvtB,EAAckL,OAAgB,IAAAmB,EAAA,GAAAwS,EAAA,EAAAA,EAAAjb,UAAA1B,OAAA2c,IAAAxS,EAAAwS,EAAA,GAAAjb,UAAAib,oEAE5D,SAAOxQ,KAAK6a,KAAKP,EAAAjkB,KAAKgC,GAAGuB,UAAUK,iBAAiBnE,QAAQ,QAAQnE,GAAMmE,QAAQ,UAAU+G,GAAQmB,SAezFwc,EAAAxnB,UAAAkW,YAAb,SAAyBC,EAAgB+B,EAAqBnO,eAAA,IAAAA,MAAA,2FAEtD,OADF4W,EAAmBuF,EAAA/Q,mBAAmBe,YAAYC,EAAQ+B,EAAanO,GACrE,GAAMiD,KAAK0a,QAAQpJ,KAAKqC,WAE9B,OAFAA,EAAMlD,EAAA0O,OAEN,GAAOnf,KAAKof,qBAAqBzL,UAOtB6G,EAAAxnB,UAAAqW,QAAb,SAAqB1X,iGAEb,OADFgiB,EAAmBuF,EAAA/Q,mBAAmBkB,QAAQ1X,GAC5C,GAAMqO,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAOtB6G,EAAAxnB,UAAAsW,kBAAb,SAA+BC,iGAEvB,OADFoK,EAAmBuF,EAAA/Q,mBAAmBmB,kBAAkBC,GACtD,GAAMvJ,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAQtB6G,EAAAxnB,UAAAyW,QAAb,SAAqBlS,EAAgB4R,iGAE7B,OADFwK,EAAmBuF,EAAA/Q,mBAAmBsB,QAAQlS,EAAQ4R,GACpD,GAAMnJ,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAMtB6G,EAAAxnB,UAAA0W,OAAb,yGAEQ,OADFiK,EAAmBuF,EAAA/Q,mBAAmBuB,SACpC,GAAM1J,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAYtB6G,EAAAxnB,UAAA2W,WAAb,SAAwBhY,EAAaiY,EAAqBC,EAAaC,EAAatY,EAAWuY,iGAEvF,OADF4J,EAAmBuF,EAAA/Q,mBAAmBwB,WAAWhY,EAAKiY,EAAQC,EAAIC,EAAItY,EAAEuY,GACtE,GAAM/J,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAMtB6G,EAAAxnB,UAAAgX,cAAb,yGAEQ,OADF2J,EAAmBuF,EAAA/Q,mBAAmB6B,gBACpC,GAAMhK,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAOtB6G,EAAAxnB,UAAAiX,SAAb,SAAsBjG,iGAEd,OADF2P,EAAmBuF,EAAA/Q,mBAAmB8B,SAASjG,GAC7C,GAAMhE,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAMtB6G,EAAAxnB,UAAAkX,YAAb,yGAEQ,OADFyJ,EAAmBuF,EAAA/Q,mBAAmB+B,cACpC,GAAMlK,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAMtB6G,EAAAxnB,UAAAmX,iBAAb,yGAEQ,OADFwJ,EAAmBuF,EAAA/Q,mBAAmBgC,mBACpC,GAAMnK,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAOtB6G,EAAAxnB,UAAAoX,cAAb,SAA2BvS,iGAEnB,OADF8b,EAAmBuF,EAAA/Q,mBAAmBiC,cAAcvS,GAClD,GAAMmI,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAOtB6G,EAAAxnB,UAAAqX,UAAb,SAAuBxS,iGAEf,OADF8b,EAAmBuF,EAAA/Q,mBAAmBkC,UAAUxS,GAC9C,GAAMmI,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAQtB6G,EAAAxnB,UAAAsX,OAAb,SAAoBC,EAA0BC,iGAEtC,OADFmJ,EAAmBuF,EAAA/Q,mBAAmBmC,OAAOC,EAAUC,GACrD,GAAMxK,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAQtB6G,EAAAxnB,UAAAyX,SAAb,SAAsBF,EAA0BC,iGAExC,OADFmJ,EAAmBuF,EAAA/Q,mBAAmBsC,SAASF,EAAUC,GACvD,GAAMxK,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAQtB6G,EAAAxnB,UAAA0X,eAAb,SAA4B/Y,EAAcgZ,iGAElC,OADFgJ,EAAmBuF,EAAA/Q,mBAAmBuC,eAAe/Y,EAAMgZ,GACzD,GAAM3K,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAUtB6G,EAAAxnB,UAAA4X,cAAb,SACEC,EACAF,EACAG,EACAC,iGAGM,OADF4I,EAAmBuF,EAAA/Q,mBAAmByC,cAAcC,EAAQF,EAAMG,EAASC,GACzE,GAAM/K,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAQtB6G,EAAAxnB,UAAAgY,WAAb,SAAwBH,EAAgB1B,iGAEhC,OADFwK,EAAmBuF,EAAA/Q,mBAAmB6C,WAAWH,EAAQ1B,GACvD,GAAMnJ,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAUtB6G,EAAAxnB,UAAAiY,cAAb,SACEJ,EACA1B,EACA+B,EACAnO,eAAA,IAAAA,MAAA,2FAGM,OADF4W,EAAmBuF,EAAA/Q,mBAAmB8C,cAAcJ,EAAQ1B,EAAQ+B,EAAanO,GAC/E,GAAMiD,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAatB6G,EAAAxnB,UAAAmY,aAAb,SACExZ,EACAgZ,EACAS,EACAC,EACAxT,EACAyT,iGAUM,OARFqI,EAAmBuF,EAAA/Q,mBAAmBgD,aACxCxZ,EACAgZ,EACAS,EACAC,EACAxT,EACAyT,GAEI,GAAMtL,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAStB6G,EAAAxnB,UAAAuY,aAAb,SAA0BC,EAAgB9Q,EAAc0O,iGAEhD,OADFuK,EAAmBuF,EAAA/Q,mBAAmBoD,aAAaC,EAAQ9Q,EAAM0O,GAC/D,GAAMpJ,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAQtB6G,EAAAxnB,UAAAyY,UAAb,SAAuBD,EAAgB7Y,iGAE/B,OADFghB,EAAmBuF,EAAA/Q,mBAAmBsD,UAAUD,EAAQ7Y,GACtD,GAAMqN,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAQtB6G,EAAAxnB,UAAA0Y,aAAb,SAA0BF,EAAgB7Y,iGAElC,OADFghB,EAAmBuF,EAAA/Q,mBAAmBuD,aAAaF,EAAQ7Y,GACzD,GAAMqN,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAStB6G,EAAAxnB,UAAA2Y,YAAb,SAAyBH,EAAgBI,EAAkBzC,iGAEnD,OADFwK,EAAmBuF,EAAA/Q,mBAAmBwD,YAAYH,EAAQI,EAAUzC,GAClE,GAAMnJ,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAYtB6G,EAAAxnB,UAAA6Y,aAAb,SACEL,EACAM,EACAF,EACAzC,EACA4C,EACAC,iGAUM,OARF2H,EAAmBuF,EAAA/Q,mBAAmB0D,aACxCL,EACAM,EACAF,EACAzC,EACA4C,EACAC,GAEI,GAAMhM,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAkEtB6G,EAAAxnB,UAAAiZ,eAAb,SACEC,EACAvB,EACAwB,EACAC,EACAC,iGAGM,OADFsH,EAAmBuF,EAAA/Q,mBAAmB8D,eAAeC,EAAOvB,EAAMwB,EAAOC,EAASC,GAChF,GAAMrM,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAOtB6G,EAAAxnB,UAAAsZ,aAAb,SAA0BC,iGAElB,OADFoH,EAAmBuF,EAAA/Q,mBAAmBmE,aAAaC,GACjD,GAAMvM,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAOtB6G,EAAAxnB,UAAAwZ,iBAAb,SAA8BD,iGAEtB,OADFoH,EAAmBuF,EAAA/Q,mBAAmBqE,iBAAiBD,GACrD,GAAMvM,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAStB6G,EAAAxnB,UAAAyZ,gBAAb,SAA6BC,EAAiBzD,EAAmB0B,iGAEzD,OADFgJ,EAAmBuF,EAAA/Q,mBAAmBsE,gBAAgBC,EAASzD,EAAW0B,GACxE,GAAM3K,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAOtB6G,EAAAxnB,UAAA2Z,mBAAb,SAAgCD,iGAExB,OADFiH,EAAmBuF,EAAA/Q,mBAAmBwE,mBAAmBD,GACvD,GAAM1M,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAWtB6G,EAAAxnB,UAAA4Z,eAAb,SAA4BF,EAAgBG,EAAiBjB,EAAkBzC,EAAgB4C,iGAEvF,OADF4H,EAAmBuF,EAAA/Q,mBAAmByE,eAAeF,EAAQG,EAASjB,EAAUzC,EAAQ4C,GACtF,GAAM/L,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAWtB6G,EAAAxnB,UAAA8Z,gBAAb,SACED,EACAH,EACAd,EACAzC,EACAV,iGASM,OAPFkL,EAAmBuF,EAAA/Q,mBAAmB2E,gBACxCD,EACAH,EACAd,EACAzC,EACAV,GAEI,GAAMzI,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAOtB6G,EAAAxnB,UAAA+Z,eAAb,SAA4BC,iGAEpB,OADF2G,EAAmBuF,EAAA/Q,mBAAmB4E,eAAeC,GACnD,GAAMhN,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAOtB6G,EAAAxnB,UAAAia,aAAb,SAA0BD,iGAElB,OADF2G,EAAmBuF,EAAA/Q,mBAAmB8E,aAAaD,GACjD,GAAMhN,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAStB6G,EAAAxnB,UAAAka,mBAAb,SAAgCL,EAAiBM,EAAgB3b,iGAEzD,OADFmiB,EAAmBuF,EAAA/Q,mBAAmB+E,mBAAmBL,EAAQM,EAAO3b,GACtE,GAAMwO,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAQtB6G,EAAAxnB,UAAAoa,wBAAb,SAAqCP,EAAiBrb,iGAE9C,OADFmiB,EAAmBuF,EAAA/Q,mBAAmBiF,wBAAwBP,EAAQrb,GACpE,GAAMwO,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAUtB6G,EAAAxnB,UAAAqa,yBAAb,SAAsC3S,EAAc0O,EAAY+D,EAAgB3b,iGAExE,OADFmiB,EAAmBuF,EAAA/Q,mBAAmBkF,yBAAyB3S,EAAM0O,EAAI+D,EAAQ3b,GAC/E,GAAMwO,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAatB6G,EAAAxnB,UAAAsa,iBAAb,SACE3b,EACAgZ,EACA9Q,EACA3B,EACAqV,EACAC,eAFA,IAAAtV,MAAA,aACA,IAAAqV,OAAA,QACA,IAAAC,MAAA,4FAUM,OARFmG,EAAkBuF,EAAA/Q,mBAAmBmF,iBACvC3b,EACAuG,EACAyS,EACA9Q,EACA0T,EACAC,GAEI,GAAMxN,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAWtB6G,EAAAxnB,UAAAya,aAAb,SACEC,EACAC,EACAC,EACAJ,EACAK,eADA,IAAAL,MAAA,UACA,IAAAK,OAAA,0FASM,OAPF8F,EAAkBuF,EAAA/Q,mBAAmBsF,aACvCC,EACAC,EACAC,EACAJ,EACAK,GAEI,GAAM7N,KAAK0a,QAAQpJ,KAAKqC,WAC9B,OADAA,EAAMlD,EAAA0O,OACN,GAAOnf,KAAKof,qBAAqBzL,UAWtB6G,EAAAxnB,UAAAqsB,mBAAb,SACEzT,EACAzC,EACA6E,EACAR,EACAK,eADA,IAAAL,MAAA,UACA,IAAAK,OAAA,0FAUM,OARF8F,EAAkBuF,EAAA/Q,mBAAmB2F,YACvClC,EACAzC,EACA,GACA6E,EACA,GACAR,EACAK,GACI,GAAM7N,KAAK0a,QAAQpJ,KAAKqC,WAE9B,OAFAA,EAAMlD,EAAA0O,OACNtL,QAAQpN,IAAI,eAAexK,KAAKC,UAAUyX,IAC1C,GAAO3T,KAAKof,qBAAqBzL,UAatB6G,EAAAxnB,UAAA8a,YAAb,SACElC,EACAzC,EACA4E,EACAC,EACAL,EACAH,EACAK,eADA,IAAAL,MAAA,UACA,IAAAK,OAAA,0FAUM,OARF8F,EAAkBuF,EAAA/Q,mBAAmB2F,YACvClC,EACAzC,EACA4E,EACAC,EACAL,EACAH,EACAK,GACI,GAAM7N,KAAK0a,QAAQpJ,KAAKqC,WAE9B,OAFAA,EAAMlD,EAAA0O,OACNtL,QAAQpN,IAAI,eAAexK,KAAKC,UAAUyX,IAC1C,GAAO3T,KAAKof,qBAAqBzL,UAErC6G,EAtyCA,CAAqCH,EAAAiF,gGCRrC,IAAAtG,EAAAhoB,EAAA,GAIAsuB,EAAA,WAOE,SAAAA,EAAYpsB,GAER8M,KAAKuf,UADU,iBAANrsB,EACQ,IAAI8lB,EAAAW,aAAazmB,EAAG8lB,EAAAjb,QAAQ2b,MAE5BxmB,EAEnB8M,KAAKwf,UA4CT,OAzCE1tB,OAAAC,eAAIutB,EAAAtsB,UAAA,WAAQ,KAAZ,WACE,OAAOgN,KAAKuf,eAGd,SAAarsB,GACX8M,KAAKuf,UAAYrsB,mCAGZosB,EAAAtsB,UAAAysB,YAAP,WACE,OAAO,GAGFH,EAAAtsB,UAAA0sB,gBAAP,SAAuB5oB,GACrBkJ,KAAKuf,UAAY,IAAIvG,EAAAW,aAAa7iB,IAG7BwoB,EAAAtsB,UAAA2sB,gBAAP,WACE3f,KAAKuf,UAAY,IAAIvG,EAAA4G,cAGhBN,EAAAtsB,UAAAosB,qBAAP,SAA4BzL,GAC1B,OAAO3T,KAAKuf,UAAU1E,KAAK,qBAAsB,CAC/CrS,YAAamL,KAIV2L,EAAAtsB,UAAAf,IAAP,SAAW4tB,EAAarhB,GACtB,OAAOwB,KAAKuf,UAAUttB,IAAI4tB,EAAKrhB,IAG1B8gB,EAAAtsB,UAAA6nB,KAAP,SAAYgF,EAAarhB,GACvB,OAAOwB,KAAKuf,UAAU1E,KAAKgF,EAAKrhB,IAG3B8gB,EAAAtsB,UAAA2lB,SAAP,SAAgBhnB,GACd,OAAOqO,KAAKuf,UAAUttB,IAAI,cAAcN,EAAQ,KAG1C2tB,EAAAtsB,UAAAwsB,QAAR,WACE,OAAO,GAEXF,EAzDA,GAAapuB,EAAAouB,+vDCJb,IAAAQ,EAAA9uB,EAAA,IAGA+uB,EAAA/uB,EAAA,GACAspB,EAAAtpB,EAAA,GACA2oB,EAAA,SAAAc,GAME,SAAAd,EAAY7iB,EAAa2iB,EAAend,QAAA,IAAAA,MAAA,KAAxC,IAAA4b,EACEuC,EAAAlpB,KAAAyO,OAAOA,YACPlJ,EAAMA,EAAIhB,QAAQ,OAAQ,IAE1BoiB,EAAK8H,KAAOlpB,EACZohB,EAAK3W,SAAWjF,EACL,MAAPmd,IACFvB,EAAK+H,KAAOF,EAAAhiB,QAAQ2b,MAEtBxB,EAAK+H,KAAOxG,EACZvB,EAAKgI,UAAYJ,EAAA/Y,QAAMrU,OAAO,CAC5BytB,QAASrpB,EACTwF,QAASA,EACTZ,QAASwc,EAAKkI,aAAa3G,KAG7BvB,EAAKmI,UAAUnI,EAAKgI,aAqGxB,OA3HkCvF,EAAAhB,EAAAc,GAyBhCd,EAAA3mB,UAAAotB,aAAA,SAAa3G,GACX,MAAO,CACL6G,MACE7G,GAAOsG,EAAAhiB,QAAQwiB,KACXjG,EAAAlkB,eACAqjB,GAAOsG,EAAAhiB,QAAQ2b,KACbY,EAAAnkB,eACAmkB,EAAApkB,gBACRgC,QAAS,GACTsD,eAAgB,qBAQpBme,EAAA3mB,UAAAqtB,UAAA,SAAU3Y,GACRA,EAAS8Y,aAAavjB,QAAQwjB,IAAI,SAAUzjB,GAI1C,OAHA6W,QAAQvU,OAAOtC,EAAOH,OAASG,EAAOH,OAAO6jB,cAAgB,iBAAmB,IAAM1jB,EAAOlG,KAC7F+c,QAAQvU,MAAM,YAAcrD,KAAKC,UAAUc,EAAOtB,UAClDmY,QAAQvU,MAAM,SAAWrD,KAAKC,UAAUc,EAAOhB,OACxCgB,IAET0K,EAAS8Y,aAAatjB,SAASujB,IAAI,SAAUvjB,GAC3C,IAAIF,EAA6BE,EAASF,OAK1C,OAJA6W,QAAQvU,MACNpC,EAASvF,OAAS,IAAMuF,EAASyjB,WACjC,KAAO3jB,GAAUA,EAAOH,OAASG,EAAOH,OAAO6jB,cAAgB,iBAAmB,IAAMxjB,EAASF,OAAOlG,IAAM,KAEzGoG,GACN,SAAUC,GASX,MARIA,EAAMH,OACR6W,QAAQvU,MACNnC,EAAMxL,KAAO,KAAOwL,EAAMJ,QAC1B,IAAMI,EAAMH,OAAOH,OAAO6jB,cAAgB,IAAMvjB,EAAMH,OAAOlG,IAAM,KAGrE+c,QAAQvU,MAAMnC,EAAMxL,KAAO,KAAOwL,EAAMJ,SAEpCI,KAIVwc,EAAA3mB,UAAA4tB,SAAA,SAAS3J,GACP,IAAI4J,EAAgB,GAChBhrB,EAAM,GACV,IAAK,IAAIzE,KAAK6lB,EACZphB,EAAMzE,EAAI,IAAM6lB,EAAK7lB,GACrByvB,EAAI/hB,KAAKjJ,GAEX,OAAOgrB,EAAI9hB,KAAK,MAGlB4a,EAAA3mB,UAAAiK,QAAA,SACEnG,EACAkF,EACAa,EACAikB,GAGA,IAAK,IAAIjO,UALT,IAAA7W,MAAA,SACA,IAAAa,MAAA,YACA,IAAAikB,MAAA,IAGc9kB,GACkB,IAA1BlF,EAAIkI,QAAQ,IAAM6T,KACpB/b,EAAMA,EAAIhB,QAAQ,IAAM+c,EAAG7W,EAAK6W,WACzB7W,EAAK6W,IAKhB,GAAe,SADfhW,EAASA,EAAOkkB,eACM,CACpB,IAAIviB,EAASwB,KAAK4gB,SAAS5kB,GAC3B,OAAOgE,KAAKkgB,UACTjuB,IAAIuM,GAAUA,EAAO3K,OAAS,EAAIiD,EAAM,IAAM0H,EAAS1H,GACvDsjB,KAAK,SAAC3J,GAAyB,OAAvBA,EAAAzU,OACN,MAAe,SAAXa,EACFmD,KAAKkgB,UAAUrF,KAAK/jB,EAAKkF,EAAM8kB,GAAa1G,KAAK,SAAC3J,GAAyB,OAAvBA,EAAAzU,OACvC,QAAXa,EACFmD,KAAKkgB,UAAUc,IAAIlqB,EAAKkF,EAAM8kB,GAAa1G,KAAK,SAAC3J,GAAyB,OAAvBA,EAAAzU,OAErDsX,QAAQjV,OAAO,sCAGxBsb,EAAA3mB,UAAAf,IAAA,SAAI4tB,EAAarhB,GACf,OAAOwB,KAAK/C,QAAQ4iB,EAAKrhB,IAG3Bmb,EAAA3mB,UAAA6nB,KAAA,SAAKgF,EAAarhB,EAAoB9C,GACpC,OAAOsE,KAAK/C,QAAQ4iB,EAAKrhB,EAAQ,OAAQ9C,IAGrCie,EAAA3mB,UAAAysB,YAAN,SAAkBwB,eAAA,IAAAA,MAAA,+DAChB,SAAOjhB,KAAK/C,QAAQgkB,GACjB7G,KAAK,WAEJ,OAAO,IAER8G,MAAM,WAAM,iBAEnBvH,EA3HA,CAAkCoG,EAAAjiB,UAArB5M,EAAAyoB,gCCLbxoB,EAAAD,QAAiBF,EAAQ,kCCEzB,IAAAqK,EAAYrK,EAAQ,GACpB4B,EAAW5B,EAAQ,IACnBmwB,EAAYnwB,EAAQ,IACpB4K,EAAe5K,EAAQ,GAQvB,SAAAowB,EAAAC,GACA,IAAAC,EAAA,IAAAH,EAAAE,GACA3Z,EAAA9U,EAAAuuB,EAAAnuB,UAAAiK,QAAAqkB,GAQA,OALAjmB,EAAA7F,OAAAkS,EAAAyZ,EAAAnuB,UAAAsuB,GAGAjmB,EAAA7F,OAAAkS,EAAA4Z,GAEA5Z,EAIA,IAAA6Z,EAAAH,EAAAxlB,GAGA2lB,EAAAJ,QAGAI,EAAA7uB,OAAA,SAAA8uB,GACA,OAAAJ,EAAA/lB,EAAAjG,MAAAwG,EAAA4lB,KAIAD,EAAAzZ,OAAe9W,EAAQ,IACvBuwB,EAAAE,YAAoBzwB,EAAQ,IAC5BuwB,EAAAG,SAAiB1wB,EAAQ,IAGzBuwB,EAAAI,IAAA,SAAAC,GACA,OAAAtO,QAAAqO,IAAAC,IAEAL,EAAAM,OAAe7wB,EAAQ,IAEvBG,EAAAD,QAAAqwB,EAGApwB,EAAAD,QAAA6V,QAAAwa,iBCtCA,SAAAnuB,EAAAO,GACA,QAAAA,EAAAmuB,aAAA,mBAAAnuB,EAAAmuB,YAAA1uB,UAAAO,EAAAmuB,YAAA1uB,SAAAO;;;;;;;AALAxC,EAAAD,QAAA,SAAAyC,GACA,aAAAA,IAAAP,EAAAO,IAQA,SAAAA,GACA,yBAAAA,EAAAouB,aAAA,mBAAApuB,EAAAqP,OAAA5P,EAAAO,EAAAqP,MAAA,MATAgf,CAAAruB,QAAAsuB,0CCRA,IAAArmB,EAAe5K,EAAQ,GACvBqK,EAAYrK,EAAQ,GACpBkxB,EAAyBlxB,EAAQ,IACjCmxB,EAAsBnxB,EAAQ,IAO9B,SAAAmwB,EAAAK,GACAxhB,KAAApE,SAAA4lB,EACAxhB,KAAAwgB,aAAA,CACAvjB,QAAA,IAAAilB,EACAhlB,SAAA,IAAAglB,GASAf,EAAAnuB,UAAAiK,QAAA,SAAAD,GAGA,iBAAAA,IACAA,EAAA3B,EAAAjG,MAAA,CACA0B,IAAAvB,UAAA,IACKA,UAAA,MAGLyH,EAAA3B,EAAAjG,MAAAwG,EAAA,CAAkCiB,OAAA,OAAcmD,KAAApE,SAAAoB,IAChDH,OAAAG,EAAAH,OAAAkkB,cAGA,IAAAqB,EAAA,CAAAD,OAAAhnB,GACAknB,EAAA/O,QAAAlV,QAAApB,GAUA,IARAgD,KAAAwgB,aAAAvjB,QAAAvJ,QAAA,SAAA4uB,GACAF,EAAAlc,QAAAoc,EAAAC,UAAAD,EAAAE,YAGAxiB,KAAAwgB,aAAAtjB,SAAAxJ,QAAA,SAAA4uB,GACAF,EAAAtjB,KAAAwjB,EAAAC,UAAAD,EAAAE,YAGAJ,EAAAvuB,QACAwuB,IAAAjI,KAAAgI,EAAAK,QAAAL,EAAAK,SAGA,OAAAJ,GAIAhnB,EAAA3H,QAAA,2CAAAmJ,GAEAskB,EAAAnuB,UAAA6J,GAAA,SAAA/F,EAAAkG,GACA,OAAAgD,KAAA/C,QAAA5B,EAAAjG,MAAA4H,GAAA,GAAgD,CAChDH,SACA/F,YAKAuE,EAAA3H,QAAA,gCAAAmJ,GAEAskB,EAAAnuB,UAAA6J,GAAA,SAAA/F,EAAAkF,EAAAgB,GACA,OAAAgD,KAAA/C,QAAA5B,EAAAjG,MAAA4H,GAAA,GAAgD,CAChDH,SACA/F,MACAkF,aAKA7K,EAAAD,QAAAiwB,gCC5EA,IAAA9lB,EAAYrK,EAAQ,GAEpBG,EAAAD,QAAA,SAAAwK,EAAAgnB,GACArnB,EAAA3H,QAAAgI,EAAA,SAAArJ,EAAAV,GACAA,IAAA+wB,GAAA/wB,EAAA+uB,gBAAAgC,EAAAhC,gBACAhlB,EAAAgnB,GAAArwB,SACAqJ,EAAA/J,qCCNA,IAAA0J,EAAYrK,EAAQ,GACpB2xB,EAAa3xB,EAAQ,IACrB4xB,EAAe5xB,EAAQ,IACvB6xB,EAAmB7xB,EAAQ,IAC3B8xB,EAAsB9xB,EAAQ,IAC9BmN,EAAkBnN,EAAQ,GAC1B+xB,EAAA,oBAAA7tB,eAAA6tB,MAAA7tB,OAAA6tB,KAAAnwB,KAAAsC,SAAyFlE,EAAQ,IAEjGG,EAAAD,QAAA,SAAA8L,GACA,WAAAsW,QAAA,SAAAlV,EAAAC,GACA,IAAA2kB,EAAAhmB,EAAAhB,KACAinB,EAAAjmB,EAAAtB,QAEAL,EAAAtH,WAAAivB,WACAC,EAAA,gBAGA,IAAAhmB,EAAA,IAAApB,eACAqnB,EAAA,qBACAC,GAAA,EAiBA,GAXA,oBAAAjuB,SACAA,OAAAkuB,gBAAA,oBAAAnmB,GACA6lB,EAAA9lB,EAAAlG,OACAmG,EAAA,IAAA/H,OAAAkuB,eACAF,EAAA,SACAC,GAAA,EACAlmB,EAAAomB,WAAA,aACApmB,EAAAqmB,UAAA,cAIAtmB,EAAAumB,KAAA,CACA,IAAAC,EAAAxmB,EAAAumB,KAAAC,UAAA,GACA/lB,EAAAT,EAAAumB,KAAA9lB,UAAA,GACAwlB,EAAAQ,cAAA,SAAAV,EAAAS,EAAA,IAAA/lB,GA+DA,GA5DAR,EAAArG,KAAAoG,EAAAH,OAAA6jB,cAAAkC,EAAA5lB,EAAAlG,IAAAkG,EAAAwB,OAAAxB,EAAAyB,mBAAA,GAGAxB,EAAAX,QAAAU,EAAAV,QAGAW,EAAAimB,GAAA,WACA,GAAAjmB,IAAA,IAAAA,EAAAymB,YAAAP,KAQA,IAAAlmB,EAAAtF,QAAAsF,EAAA0mB,aAAA,IAAA1mB,EAAA0mB,YAAA3kB,QAAA,WAKA,IAAA4kB,EAAA,0BAAA3mB,EAAA4lB,EAAA5lB,EAAA4mB,yBAAA,KAEA3mB,EAAA,CACAlB,KAFAgB,EAAA8mB,cAAA,SAAA9mB,EAAA8mB,aAAA7mB,EAAAC,SAAAD,EAAA8mB,aAIApsB,OAAA,OAAAsF,EAAAtF,OAAA,IAAAsF,EAAAtF,OACAgpB,WAAA,OAAA1jB,EAAAtF,OAAA,aAAAsF,EAAA0jB,WACAjlB,QAAAkoB,EACA5mB,SACAC,WAGA0lB,EAAAvkB,EAAAC,EAAAnB,GAGAD,EAAA,OAIAA,EAAA+mB,QAAA,WAGA3lB,EAAAF,EAAA,gBAAAnB,EAAA,KAAAC,IAGAA,EAAA,MAIAA,EAAAqmB,UAAA,WACAjlB,EAAAF,EAAA,cAAAnB,EAAAV,QAAA,cAAAU,EAAA,eACAC,IAGAA,EAAA,MAMA5B,EAAAtG,uBAAA,CACA,IAAAkvB,EAAoBjzB,EAAQ,IAG5BkzB,GAAAlnB,EAAAmnB,iBAAArB,EAAA9lB,EAAAlG,OAAAkG,EAAAT,eACA0nB,EAAAG,KAAApnB,EAAAT,qBACApB,EAEA+oB,IACAjB,EAAAjmB,EAAAR,gBAAA0nB,GAuBA,GAlBA,qBAAAjnB,GACA5B,EAAA3H,QAAAuvB,EAAA,SAAA1vB,EAAAZ,QACA,IAAAqwB,GAAA,iBAAArwB,EAAAouB,qBAEAkC,EAAAtwB,GAGAsK,EAAAonB,iBAAA1xB,EAAAY,KAMAyJ,EAAAmnB,kBACAlnB,EAAAknB,iBAAA,GAIAnnB,EAAA8mB,aACA,IACA7mB,EAAA6mB,aAAA9mB,EAAA8mB,aACO,MAAAznB,GAGP,YAAAW,EAAA8mB,aACA,MAAAznB,EAMA,mBAAAW,EAAAsnB,oBACArnB,EAAAsnB,iBAAA,WAAAvnB,EAAAsnB,oBAIA,mBAAAtnB,EAAAwnB,kBAAAvnB,EAAAwnB,QACAxnB,EAAAwnB,OAAAF,iBAAA,WAAAvnB,EAAAwnB,kBAGAxnB,EAAA0nB,aAEA1nB,EAAA0nB,YAAArC,QAAAjI,KAAA,SAAAuK,GACA1nB,IAIAA,EAAAwG,QACApF,EAAAsmB,GAEA1nB,EAAA,aAIA9B,IAAA6nB,IACAA,EAAA,MAIA/lB,EAAA2nB,KAAA5B,oCC/KA,IAAA3nB,EAAYrK,EAAQ,GAIpB6zB,EAAA,CACA,6DACA,kEACA,gEACA,sCAgBA1zB,EAAAD,QAAA,SAAAwK,GACA,IACA/I,EACAY,EACAnC,EAHA0zB,EAAA,GAKA,OAAAppB,GAEAL,EAAA3H,QAAAgI,EAAA6L,MAAA,eAAAwd,GAKA,GAJA3zB,EAAA2zB,EAAA/lB,QAAA,KACArM,EAAA0I,EAAAzF,KAAAmvB,EAAAhhB,OAAA,EAAA3S,IAAA2vB,cACAxtB,EAAA8H,EAAAzF,KAAAmvB,EAAAhhB,OAAA3S,EAAA,IAEAuB,EAAA,CACA,GAAAmyB,EAAAnyB,IAAAkyB,EAAA7lB,QAAArM,IAAA,EACA,OAGAmyB,EAAAnyB,GADA,eAAAA,GACAmyB,EAAAnyB,GAAAmyB,EAAAnyB,GAAA,IAAA8f,OAAA,CAAAlf,IAEAuxB,EAAAnyB,GAAAmyB,EAAAnyB,GAAA,KAAAY,OAKAuxB,GAnBiBA,iCC9BjB,IAAAzpB,EAAYrK,EAAQ,GAEpBG,EAAAD,QACAmK,EAAAtG,uBAIA,WACA,IAEAiwB,EAFAC,EAAA,kBAAAxuB,KAAAzB,UAAAkwB,WACAC,EAAAhwB,SAAAiwB,cAAA,KASA,SAAAC,EAAAvuB,GACA,IAAAoM,EAAApM,EAWA,OATAmuB,IAEAE,EAAAG,aAAA,OAAApiB,GACAA,EAAAiiB,EAAAjiB,MAGAiiB,EAAAG,aAAA,OAAApiB,GAGA,CACAA,KAAAiiB,EAAAjiB,KACAhB,SAAAijB,EAAAjjB,SAAAijB,EAAAjjB,SAAApM,QAAA,YACA0K,KAAA2kB,EAAA3kB,KACAU,OAAAikB,EAAAjkB,OAAAikB,EAAAjkB,OAAApL,QAAA,aACAmN,KAAAkiB,EAAAliB,KAAAkiB,EAAAliB,KAAAnN,QAAA,YACA2K,SAAA0kB,EAAA1kB,SACA0C,KAAAgiB,EAAAhiB,KACArC,SAAA,MAAAqkB,EAAArkB,SAAA6O,OAAA,GACAwV,EAAArkB,SACA,IAAAqkB,EAAArkB,UAYA,OARAkkB,EAAAK,EAAAnwB,OAAAuP,SAAAvB,MAQA,SAAAqiB,GACA,IAAAT,EAAAzpB,EAAAhH,SAAAkxB,GAAAF,EAAAE,KACA,OAAAT,EAAA5iB,WAAA8iB,EAAA9iB,UACA4iB,EAAAtkB,OAAAwkB,EAAAxkB,MAhDA,GAsDA,WACA,wCC5DA,IAAAglB,EAAA,oEAEA,SAAAC,IACAzlB,KAAAjD,QAAA,uCAEA0oB,EAAAzyB,UAAA,IAAAoK,MACAqoB,EAAAzyB,UAAA6G,KAAA,EACA4rB,EAAAzyB,UAAArB,KAAA,wBAwBAR,EAAAD,QAtBA,SAAAmR,GAGA,IAFA,IAIAqjB,EAAAC,EAJA9vB,EAAA0S,OAAAlG,GACAujB,EAAA,GAGAhV,EAAA,EAAAiV,EAAAL,EAIA3vB,EAAA8Z,OAAA,EAAAiB,KAAAiV,EAAA,IAAAjV,EAAA,GAEAgV,GAAAC,EAAAlW,OAAA,GAAA+V,GAAA,EAAA9U,EAAA,KACA,CAEA,IADA+U,EAAA9vB,EAAAuP,WAAAwL,GAAA,MACA,IACA,UAAA6U,EAEAC,KAAA,EAAAC,EAEA,OAAAC,iCC9BA,IAAAvqB,EAAYrK,EAAQ,GAEpBG,EAAAD,QACAmK,EAAAtG,uBAIA,CACAwO,MAAA,SAAA5R,EAAAU,EAAAyzB,EAAA/kB,EAAAglB,EAAAC,GACA,IAAAC,EAAA,GACAA,EAAAnnB,KAAAnN,EAAA,IAAA4M,mBAAAlM,IAEAgJ,EAAA/G,SAAAwxB,IACAG,EAAAnnB,KAAA,eAAA+G,KAAAigB,GAAAI,eAGA7qB,EAAAhH,SAAA0M,IACAklB,EAAAnnB,KAAA,QAAAiC,GAGA1F,EAAAhH,SAAA0xB,IACAE,EAAAnnB,KAAA,UAAAinB,IAGA,IAAAC,GACAC,EAAAnnB,KAAA,UAGA3J,SAAA8wB,SAAAlnB,KAAA,OAGAqlB,KAAA,SAAAzyB,GACA,IAAAyU,EAAAjR,SAAA8wB,OAAA7f,MAAA,IAAAqB,OAAA,aAA0D9V,EAAA,cAC1D,OAAAyU,EAAA+f,mBAAA/f,EAAA,UAGA2N,OAAA,SAAApiB,GACAqO,KAAAuD,MAAA5R,EAAA,GAAAkU,KAAAugB,MAAA,SAOA,CACA7iB,MAAA,aACA6gB,KAAA,WAA6B,aAC7BrQ,OAAA,4CC/CA,IAAA1Y,EAAYrK,EAAQ,GACpB2xB,EAAa3xB,EAAQ,IACrB4xB,EAAe5xB,EAAQ,IACvBkO,EAAWlO,EAAQ,IACnBmO,EAAYnO,EAAQ,IACpBq1B,EAAiBr1B,EAAQ,IAAkBkO,KAC3ConB,EAAkBt1B,EAAQ,IAAkBmO,MAC5CrI,EAAU9F,EAAQ,IAClBu1B,EAAWv1B,EAAQ,IACnBw1B,EAAUx1B,EAAQ,IAClBmN,EAAkBnN,EAAQ,GAC1B8L,EAAmB9L,EAAQ,IAG3BG,EAAAD,QAAA,SAAA8L,GACA,WAAAsW,QAAA,SAAAlV,EAAAC,GACA,IAEAooB,EAFAzqB,EAAAgB,EAAAhB,KACAN,EAAAsB,EAAAtB,QAUA,GAJAA,EAAA,eAAAA,EAAA,gBACAA,EAAA,uBAAA8qB,EAAAtuB,SAGA8D,IAAAX,EAAA1G,SAAAqH,GAAA,CACA,GAAA7B,OAAA/G,SAAA4I,SAEO,GAAAX,EAAAvH,cAAAkI,GACPA,EAAA,IAAA7B,OAAA,IAAA8W,WAAAjV,QACO,KAAAX,EAAAhH,SAAA2H,GAGP,OAAAqC,EAAAF,EACA,oFACAnB,IAJAhB,EAAA,IAAA7B,OAAA6B,EAAA,SASAN,EAAA,kBAAAM,EAAAnI,OAIA,IAAA0vB,OAAApoB,EACA6B,EAAAumB,OAGAA,GAFAvmB,EAAAumB,KAAAC,UAAA,IAEA,KADAxmB,EAAAumB,KAAA9lB,UAAA,KAKA,IAAAqnB,EAAAhuB,EAAAsF,MAAAY,EAAAlG,KACAoL,EAAA4iB,EAAA5iB,UAAA,QAEA,IAAAqhB,GAAAuB,EAAAvB,KAAA,CACA,IAAAmD,EAAA5B,EAAAvB,KAAAhc,MAAA,KAGAgc,GAFAmD,EAAA,QAEA,KADAA,EAAA,QAIAnD,UACA7nB,EAAA+nB,cAGA,IAAAkD,EAAA,WAAAzkB,EACA8B,EAAA2iB,EAAA3pB,EAAA4pB,WAAA5pB,EAAA6pB,UAEA/mB,EAAA,CACAiB,KAAA6hB,EAAAkC,EAAA/jB,KAAA/D,EAAAwB,OAAAxB,EAAAyB,kBAAA3I,QAAA,UACA+G,OAAAG,EAAAH,OACAnB,UACAsI,QACAuf,QAGAvmB,EAAA8pB,WACAhnB,EAAAgnB,WAAA9pB,EAAA8pB,YAEAhnB,EAAAW,SAAAqkB,EAAArkB,SACAX,EAAAqD,KAAA2hB,EAAA3hB,MAGA,IAmCA4jB,EAnCAC,EAAAhqB,EAAAgqB,MACA,IAAAA,IAAA,IAAAA,EAAA,CACA,IAAAC,EAAA/kB,EAAAc,MAAA,eACAkkB,EAAAprB,QAAAmJ,IAAAgiB,IAAAnrB,QAAAmJ,IAAAgiB,EAAAvG,eACA,GAAAwG,EAAA,CACA,IAAAC,EAAArwB,EAAAsF,MAAA8qB,GAMA,GALAF,EAAA,CACAxmB,KAAA2mB,EAAA1mB,SACA0C,KAAAgkB,EAAAhkB,MAGAgkB,EAAA5D,KAAA,CACA,IAAA6D,EAAAD,EAAA5D,KAAAhc,MAAA,KACAyf,EAAAzD,KAAA,CACAC,SAAA4D,EAAA,GACA3pB,SAAA2pB,EAAA,MAMA,GAAAJ,IACAlnB,EAAAW,SAAAumB,EAAAxmB,KACAV,EAAAU,KAAAwmB,EAAAxmB,KACAV,EAAApE,QAAA8E,KAAAskB,EAAArkB,UAAAqkB,EAAA3hB,KAAA,IAAA2hB,EAAA3hB,KAAA,IACArD,EAAAqD,KAAA6jB,EAAA7jB,KACArD,EAAAiB,KAAAmB,EAAA,KAAA4iB,EAAArkB,UAAAqkB,EAAA3hB,KAAA,IAAA2hB,EAAA3hB,KAAA,IAAArD,EAAAiB,KAGAimB,EAAAzD,MAAA,CACA,IAAA8D,EAAA,IAAAltB,OAAA6sB,EAAAzD,KAAAC,SAAA,IAAAwD,EAAAzD,KAAA9lB,SAAA,QAAApK,SAAA,UACAyM,EAAApE,QAAA,gCAAA2rB,EAKArqB,EAAA+pB,UACAA,EAAA/pB,EAAA+pB,UACK,IAAA/pB,EAAA6E,aACLklB,EAAAJ,EAAAxnB,EAAAD,GAEAlC,EAAA6E,eACA/B,EAAA+B,aAAA7E,EAAA6E,cAEAklB,EAAAJ,EAAAL,EAAAD,GAGArpB,EAAAP,kBAAAO,EAAAP,kBAAA,IACAqD,EAAAgC,cAAA9E,EAAAP,kBAIA,IAAA6qB,EAAAP,EAAA9pB,QAAA6C,EAAA,SAAAyT,GACA,IAAA+T,EAAAC,QAAA,CAGAjmB,aAAAmlB,GACAA,EAAA,KAGA,IAAAe,EAAAjU,EACA,OAAAA,EAAA7X,QAAA,qBAEA,WACA,eACA,cAEA8rB,IAAA5yB,KAAA2xB,EAAAkB,sBAGAlU,EAAA7X,QAAA,oBAKA,IAAAgsB,EAAAnU,EAAA+T,OAEApqB,EAAA,CACAvF,OAAA4b,EAAA/O,WACAmc,WAAApN,EAAAoU,cACAjsB,QAAA6X,EAAA7X,QACAsB,SACAC,QAAAyqB,GAGA,cAAA1qB,EAAA8mB,aACA5mB,EAAAlB,KAAAwrB,EACA7E,EAAAvkB,EAAAC,EAAAnB,OACO,CACP,IAAA0qB,EAAA,GACAJ,EAAA9mB,GAAA,gBAAAmnB,GACAD,EAAA9oB,KAAA+oB,GAGA7qB,EAAAP,kBAAA,GAAAtC,OAAAsY,OAAAmV,GAAA/zB,OAAAmJ,EAAAP,kBACA4B,EAAAF,EAAA,4BAAAnB,EAAAP,iBAAA,YACAO,EAAA,KAAA0qB,MAIAF,EAAA9mB,GAAA,iBAAA+B,GACA6kB,EAAAC,SACAlpB,EAAAvB,EAAA2F,EAAAzF,EAAA,KAAA0qB,MAGAF,EAAA9mB,GAAA,iBACA,IAAAonB,EAAA3tB,OAAAsY,OAAAmV,GACA,gBAAA5qB,EAAA8mB,eACAgE,IAAAz0B,SAAA,SAGA6J,EAAAlB,KAAA8rB,EACAnF,EAAAvkB,EAAAC,EAAAnB,SAMAoqB,EAAA5mB,GAAA,iBAAA+B,GACA6kB,EAAAC,SACAlpB,EAAAvB,EAAA2F,EAAAzF,EAAA,KAAAsqB,MAIAtqB,EAAAV,UAAAmqB,IACAA,EAAAjlB,WAAA,WACA8lB,EAAA7jB,QACApF,EAAAF,EAAA,cAAAnB,EAAAV,QAAA,cAAAU,EAAA,eAAAsqB,KACOtqB,EAAAV,UAGPU,EAAA0nB,aAEA1nB,EAAA0nB,YAAArC,QAAAjI,KAAA,SAAAuK,GACA2C,EAAAC,UAEAD,EAAA7jB,QACApF,EAAAsmB,MAKAtpB,EAAA1G,SAAAqH,GACAA,EAAApH,KAAA0yB,GAEAA,EAAA1kB,IAAA5G,qBCzOA7K,EAAAD,QAAA6E,QAAA,wCCMA,oBAAA+F,SAAA,aAAAA,QAAAuM,OAAA,IAAAvM,QAAAoa,SAAApa,QAAAisB,OACA52B,EAAAD,QAAmBF,EAAQ,IAE3BG,EAAAD,QAAmBF,EAAQ,kCCP3B,SAAAg3B,EAAAr0B,GAAwU,OAAtOq0B,EAA3E,mBAAA71B,QAAA,iBAAAA,OAAA81B,SAA2E,SAAAt0B,GAAkC,cAAAA,GAA+B,SAAAA,GAAkC,OAAAA,GAAA,mBAAAxB,QAAAwB,EAAAmuB,cAAA3vB,QAAAwB,IAAAxB,OAAAa,UAAA,gBAAAW,IAAmIA,GAOxUzC,EAAAuV,IAqFA,WACA,IAAAyhB,EAIA,sCAAArU,QAAA,YAAAmU,EAAAnU,mBAAApN,MAAAyhB,EAAArU,SAAApN,IAAAvI,MAAAgqB,EAAA3yB,YAzFArE,EAAAsV,WA+CA,SAAAxI,GAGA,GAFAA,EAAA,IAAAgC,KAAA0G,UAAA,SAAA1G,KAAAmF,WAAAnF,KAAA0G,UAAA,WAAA1I,EAAA,IAAAgC,KAAA0G,UAAA,eAAAvV,EAAAD,QAAAyW,SAAA3H,KAAA+F,OAEA/F,KAAA0G,UACA,OAGA,IAAAjV,EAAA,UAAAuO,KAAA2G,MACA3I,EAAAuI,OAAA,IAAA9U,EAAA,kBAIA,IAAA0U,EAAA,EACAgiB,EAAA,EACAnqB,EAAA,GAAAlI,QAAA,uBAAAsQ,GACA,OAAAA,IAIAD,IAEA,OAAAC,IAGA+hB,EAAAhiB,MAGAnI,EAAAuI,OAAA4hB,EAAA,EAAA12B,IAzEAP,EAAAkW,KAkGA,SAAAD,GACA,IACAA,EACAjW,EAAAk3B,QAAAC,QAAA,QAAAlhB,GAEAjW,EAAAk3B,QAAAE,WAAA,SAEG,MAAAnrB,MAxGHjM,EAAA0W,KAoHA,WACA,IAAA1V,EAEA,IACAA,EAAAhB,EAAAk3B,QAAAG,QAAA,SACG,MAAAprB,KAKHjL,GAAA,oBAAA4J,SAAA,QAAAA,UACA5J,EAAA4J,QAAAmJ,IAAAujB,OAGA,OAAAt2B,GAjIAhB,EAAAwV,UAgBA,WAIA,uBAAAxR,eAAA4G,UAAA,aAAA5G,OAAA4G,QAAAuM,MAAAnT,OAAA4G,QAAAisB,QACA,SAIA,uBAAA/yB,qBAAAkwB,WAAAlwB,UAAAkwB,UAAAnE,cAAA3a,MAAA,yBACA,SAKA,0BAAAjR,mBAAAszB,iBAAAtzB,SAAAszB,gBAAAC,OAAAvzB,SAAAszB,gBAAAC,MAAAC,kBACA,oBAAAzzB,eAAA2e,UAAA3e,OAAA2e,QAAA+U,SAAA1zB,OAAA2e,QAAAgV,WAAA3zB,OAAA2e,QAAAiV,QAEA,oBAAA9zB,qBAAAkwB,WAAAlwB,UAAAkwB,UAAAnE,cAAA3a,MAAA,mBAAA+P,SAAA1O,OAAAshB,GAAA,SACA,oBAAA/zB,qBAAAkwB,WAAAlwB,UAAAkwB,UAAAnE,cAAA3a,MAAA,uBAlCAlV,EAAAk3B,QA8IA,WACA,IAGA,OAAAY,aACG,MAAA7rB,KAnJH8rB,GAKA/3B,EAAAoU,OAAA,0vBAmJAnU,EAAAD,QAAiBF,EAAQ,GAARA,CAAkBE,GACnCC,EAAAD,QAAAoV,WAKAsM,EAAA,SAAAhU,GACA,IACA,OAAA3C,KAAAC,UAAA0C,GACG,MAAAzB,GACH,qCAAAA,EAAAJ,yBC5KA,IAAA5J,EAAA,IACA3B,EAAA,GAAA2B,EACA+1B,EAAA,GAAA13B,EACAE,EAAA,GAAAw3B,EACAC,EAAA,EAAAz3B,EACA03B,EAAA,OAAA13B,EAqJA,SAAA23B,EAAAvjB,EAAAwjB,EAAAz2B,EAAAlB,GACA,IAAA43B,EAAAD,GAAA,IAAAz2B,EACA,OAAAyK,KAAAksB,MAAA1jB,EAAAjT,GAAA,IAAAlB,GAAA43B,EAAA,QAvIAp4B,EAAAD,QAAA,SAAAqC,EAAAuM,GACAA,KAAA,GACA,IAAAuI,SAAA9U,EACA,cAAA8U,GAAA9U,EAAAM,OAAA,EACA,OAkBA,SAAAgC,GAEA,IADAA,EAAA0S,OAAA1S,IACAhC,OAAA,IACA,OAEA,IAAAuS,EAAA,uIAAAqjB,KACA5zB,GAEA,IAAAuQ,EACA,OAEA,IAAAvT,EAAA62B,WAAAtjB,EAAA,IAEA,QADAA,EAAA,UAAA2a,eAEA,YACA,WACA,UACA,SACA,QACA,OAAAluB,EAAAu2B,EACA,YACA,WACA,QACA,OAAAv2B,EAAAs2B,EACA,WACA,UACA,QACA,OAAAt2B,EAAAnB,EACA,YACA,WACA,UACA,SACA,QACA,OAAAmB,EAAAq2B,EACA,cACA,aACA,WACA,UACA,QACA,OAAAr2B,EAAArB,EACA,cACA,aACA,WACA,UACA,QACA,OAAAqB,EAAAM,EACA,mBACA,kBACA,YACA,WACA,SACA,OAAAN,EACA,QACA,QAvEAuJ,CAAA7I,GACG,cAAA8U,IAAA,IAAAshB,MAAAp2B,GACH,OAAAuM,EAAA8pB,KA0GA,SAAA9jB,GACA,IAAAwjB,EAAAhsB,KAAAiI,IAAAO,GACA,GAAAwjB,GAAA53B,EACA,OAAA23B,EAAAvjB,EAAAwjB,EAAA53B,EAAA,OAEA,GAAA43B,GAAAJ,EACA,OAAAG,EAAAvjB,EAAAwjB,EAAAJ,EAAA,QAEA,GAAAI,GAAA93B,EACA,OAAA63B,EAAAvjB,EAAAwjB,EAAA93B,EAAA,UAEA,GAAA83B,GAAAn2B,EACA,OAAAk2B,EAAAvjB,EAAAwjB,EAAAn2B,EAAA,UAEA,OAAA2S,EAAA,MAxHA+jB,CAAAt2B,GAiFA,SAAAuS,GACA,IAAAwjB,EAAAhsB,KAAAiI,IAAAO,GACA,GAAAwjB,GAAA53B,EACA,OAAA4L,KAAAksB,MAAA1jB,EAAApU,GAAA,IAEA,GAAA43B,GAAAJ,EACA,OAAA5rB,KAAAksB,MAAA1jB,EAAAojB,GAAA,IAEA,GAAAI,GAAA93B,EACA,OAAA8L,KAAAksB,MAAA1jB,EAAAtU,GAAA,IAEA,GAAA83B,GAAAn2B,EACA,OAAAmK,KAAAksB,MAAA1jB,EAAA3S,GAAA,IAEA,OAAA2S,EAAA,KA/FAgkB,CAAAv2B,GAEA,UAAA6J,MACA,wDACAnB,KAAAC,UAAA3I,mCC9BA,IAAAw2B,EAAU/4B,EAAQ,IAElBolB,EAAWplB,EAAQ,IAMnBE,EAAA0V,KAoIA,SAAAtH,GACAA,EAAA0qB,YAAA,GAGA,IAFA,IAAAhoB,EAAAlQ,OAAAkQ,KAAA9Q,EAAA84B,aAEA54B,EAAA,EAAiBA,EAAA4Q,EAAAnO,OAAiBzC,IAClCkO,EAAA0qB,YAAAhoB,EAAA5Q,IAAAF,EAAA84B,YAAAhoB,EAAA5Q,KAxIAF,EAAAuV,IA4FA,WACA,OAAA3K,QAAAmuB,OAAA1mB,MAAA6S,EAAAlS,OAAAhG,MAAAkY,EAAA7gB,WAAA,OA5FArE,EAAAsV,WAgEA,SAAAxI,GACA,IAAArM,EAAAqO,KAAAmF,UAGA,GAFAnF,KAAA0G,UAEA,CACA,IAAAjV,EAAAuO,KAAA2G,MACAujB,EAAA,OAAAz4B,EAAA,EAAAA,EAAA,OAAiDA,GACjD04B,EAAA,KAAA1X,OAAAyX,EAAA,OAA0CzX,OAAA9gB,EAAA,SAC1CqM,EAAA,GAAAmsB,EAAAnsB,EAAA,GAAAuJ,MAAA,MAAAxI,KAAA,KAAAorB,GACAnsB,EAAAc,KAAAorB,EAAA,KAAA/4B,EAAAD,QAAAyW,SAAA3H,KAAA+F,MAAA,aAEA/H,EAAA,GAIA,WACA,GAAA9M,EAAA84B,YAAAI,SACA,SAGA,WAAAvkB,MAAAhH,cAAA,IATAwrB,GAAA14B,EAAA,IAAAqM,EAAA,IA1EA9M,EAAAkW,KAqGA,SAAAD,GACAA,EACArL,QAAAmJ,IAAAujB,MAAArhB,SAIArL,QAAAmJ,IAAAujB,OA1GAt3B,EAAA0W,KAqHA,WACA,OAAA9L,QAAAmJ,IAAAujB,OArHAt3B,EAAAwV,UAmDA,WACA,iBAAAxV,EAAA84B,YAAAM,QAAAp5B,EAAA84B,YAAA1kB,QAAAykB,EAAAQ,OAAAzuB,QAAAmuB,OAAAO,KA/CAt5B,EAAAoU,OAAA,cAEA,IAGA,IAAAmlB,EAAsBz5B,EAAQ,IAE9By5B,MAAAR,QAAAQ,GAAAC,OAAA,IACAx5B,EAAAoU,OAAA,mRAEC,MAAAnI,IASDjM,EAAA84B,YAAAl4B,OAAAkQ,KAAAlG,QAAAmJ,KAAA0lB,OAAA,SAAAh4B,GACA,iBAAA8D,KAAA9D,KACCi4B,OAAA,SAAAj3B,EAAAhB,GAED,IAAAk4B,EAAAl4B,EAAAsO,UAAA,GAAA8f,cAAAjrB,QAAA,qBAAAg1B,EAAAjY,GACA,OAAAA,EAAA6N,gBAGAntB,EAAAuI,QAAAmJ,IAAAtS,GAaA,OAVAY,IADA,2BAAAkD,KAAAlD,KAEG,6BAAAkD,KAAAlD,KAEA,SAAAA,EACH,KAEA6P,OAAA7P,IAGAI,EAAAk3B,GAAAt3B,EACAI,GACC,IA0FDxC,EAAAD,QAAiBF,EAAQ,GAARA,CAAkBE,GACnC,IAAAoV,EAAAnV,EAAAD,QAAAoV,WAKAA,EAAAzU,EAAA,SAAA+M,GAEA,OADAoB,KAAAgqB,YAAA1kB,OAAAtF,KAAA0G,UACA0P,EAAA2U,QAAAnsB,EAAAoB,KAAAgqB,aAAAl0B,QAAA,kBAOAwQ,EAAA0kB,EAAA,SAAApsB,GAEA,OADAoB,KAAAgqB,YAAA1kB,OAAAtF,KAAA0G,UACA0P,EAAA2U,QAAAnsB,EAAAoB,KAAAgqB,6BC3KA74B,EAAAD,QAAA6E,QAAA,qCCCA,MAAAk1B,EAAWj6B,EAAQ,IACnBk6B,EAAgBl6B,EAAQ,IAExBiU,EAAAnJ,QAAAmJ,IAEA,IAAAkmB,EAmHA,SAAAC,EAAA5D,GAEA,OAtGA,SAAAkD,GACA,WAAAA,GAIA,CACAA,QACAW,UAAA,EACAC,OAAAZ,GAAA,EACAa,OAAAb,GAAA,GA6FAc,CAzFA,SAAAhE,GACA,QAAA2D,EACA,SAGA,GAAAD,EAAA,cACAA,EAAA,eACAA,EAAA,mBACA,SAGA,GAAAA,EAAA,aACA,SAGA,GAAA1D,MAAAiE,QAAA,IAAAN,EACA,SAGA,MAAAthB,EAAAshB,EAAA,IAEA,aAAArvB,QAAA4vB,SAAA,CAOA,MAAAC,EAAAV,EAAAW,UAAArkB,MAAA,KACA,OACAnE,OAAAtH,QAAA+vB,SAAAC,KAAAvkB,MAAA,aACAnE,OAAAuoB,EAAA,SACAvoB,OAAAuoB,EAAA,WAEAvoB,OAAAuoB,EAAA,eAGA,EAGA,UAAA1mB,EACA,mDAAA8mB,KAAAza,QAAArM,IAAA,aAAAA,EAAA+mB,QACA,EAGAniB,EAGA,wBAAA5E,EACA,sCAAoCxO,KAAAwO,EAAAgnB,kBAAA,IAGpC,iBAAAhnB,EAAAinB,UACA,SAGA,oBAAAjnB,EAAA,CACA,MAAA/M,EAAAie,UAAAlR,EAAAknB,sBAAA,IAAA5kB,MAAA,YAEA,OAAAtC,EAAAmnB,cACA,gBACA,OAAAl0B,GAAA,MACA,qBACA,UAKA,uBAAAzB,KAAAwO,EAAAonB,MACA,EAGA,8DAAA51B,KAAAwO,EAAAonB,MACA,EAGA,cAAApnB,EACA,GAGAA,EAAAonB,KACAxiB,GAOA4gB,CAAAjD,IAnHA0D,EAAA,aACAA,EAAA,cACAA,EAAA,eACAC,GAAA,GACCD,EAAA,UACDA,EAAA,WACAA,EAAA,eACAA,EAAA,mBACAC,GAAA,GAEA,gBAAAlmB,IACAkmB,EAAA,IAAAlmB,EAAAqnB,YAAAz4B,QAAA,IAAAsiB,SAAAlR,EAAAqnB,YAAA,KA4GAn7B,EAAAD,QAAA,CACAu5B,cAAAW,EACAmB,OAAAnB,EAAAtvB,QAAAywB,QACAtC,OAAAmB,EAAAtvB,QAAAmuB,wBCjIA94B,EAAAD,QAAA6E,QAAA,oCCCA5E,EAAAD,QAAA,EAAAs7B,EAAAC,KACAA,KAAA3wB,QAAA2wB,KACA,MAAAtC,EAAAqC,EAAAzpB,WAAA,YAAAypB,EAAA34B,OAAA,SACA64B,EAAAD,EAAAztB,QAAAmrB,EAAAqC,GACAG,EAAAF,EAAAztB,QAAA,MACA,WAAA0tB,KAAA,IAAAC,GAAAD,EAAAC,oBCNAx7B,EAAAD,QAAA6E,QAAA,y2ECEA,IAAAsF,EAAYrK,EAAQ,GAEpB,SAAAkxB,IACAliB,KAAA4sB,SAAA,GAWA1K,EAAAlvB,UAAAytB,IAAA,SAAA8B,EAAAC,GAKA,OAJAxiB,KAAA4sB,SAAA9tB,KAAA,CACAyjB,YACAC,aAEAxiB,KAAA4sB,SAAA/4B,OAAA,GAQAquB,EAAAlvB,UAAA65B,MAAA,SAAAlb,GACA3R,KAAA4sB,SAAAjb,KACA3R,KAAA4sB,SAAAjb,GAAA,OAYAuQ,EAAAlvB,UAAAU,QAAA,SAAAE,GACAyH,EAAA3H,QAAAsM,KAAA4sB,SAAA,SAAA1D,GACA,OAAAA,GACAt1B,EAAAs1B,MAKA/3B,EAAAD,QAAAgxB,gCCjDA,IAAA7mB,EAAYrK,EAAQ,GACpB87B,EAAoB97B,EAAQ,IAC5B0wB,EAAe1wB,EAAQ,IACvB4K,EAAe5K,EAAQ,GACvB+7B,EAAoB/7B,EAAQ,IAC5Bg8B,EAAkBh8B,EAAQ,IAK1B,SAAAi8B,EAAAjwB,GACAA,EAAA0nB,aACA1nB,EAAA0nB,YAAAwI,mBAUA/7B,EAAAD,QAAA,SAAA8L,GAkCA,OAjCAiwB,EAAAjwB,GAGAA,EAAAmjB,UAAA4M,EAAA/vB,EAAAlG,OACAkG,EAAAlG,IAAAk2B,EAAAhwB,EAAAmjB,QAAAnjB,EAAAlG,MAIAkG,EAAAtB,QAAAsB,EAAAtB,SAAA,GAGAsB,EAAAhB,KAAA8wB,EACA9vB,EAAAhB,KACAgB,EAAAtB,QACAsB,EAAAjB,kBAIAiB,EAAAtB,QAAAL,EAAAjG,MACA4H,EAAAtB,QAAAiB,QAAA,GACAK,EAAAtB,QAAAsB,EAAAH,SAAA,GACAG,EAAAtB,SAAA,IAGAL,EAAA3H,QACA,sDACA,SAAAmJ,UACAG,EAAAtB,QAAAmB,MAIAG,EAAArB,SAAAC,EAAAD,SAEAqB,GAAAod,KAAA,SAAAld,GAUA,OATA+vB,EAAAjwB,GAGAE,EAAAlB,KAAA8wB,EACA5vB,EAAAlB,KACAkB,EAAAxB,QACAsB,EAAAb,mBAGAe,GACG,SAAAiwB,GAcH,OAbAzL,EAAAyL,KACAF,EAAAjwB,GAGAmwB,KAAAjwB,WACAiwB,EAAAjwB,SAAAlB,KAAA8wB,EACAK,EAAAjwB,SAAAlB,KACAmxB,EAAAjwB,SAAAxB,QACAsB,EAAAb,qBAKAmX,QAAAjV,OAAA8uB,oCCjFA,IAAA9xB,EAAYrK,EAAQ,GAUpBG,EAAAD,QAAA,SAAA8K,EAAAN,EAAA0xB,GAMA,OAJA/xB,EAAA3H,QAAA05B,EAAA,SAAAx5B,GACAoI,EAAApI,EAAAoI,EAAAN,KAGAM,iCCVA7K,EAAAD,QAAA,SAAA4F,GAIA,sCAAAL,KAAAK,kCCHA3F,EAAAD,QAAA,SAAAivB,EAAAkN,GACA,OAAAA,EACAlN,EAAArqB,QAAA,eAAAu3B,EAAAv3B,QAAA,WACAqqB,iCCVA,IAAArY,EAAa9W,EAAQ,IAQrB,SAAAywB,EAAA6L,GACA,sBAAAA,EACA,UAAAxyB,UAAA,gCAGA,IAAAyyB,EACAvtB,KAAAqiB,QAAA,IAAA/O,QAAA,SAAAlV,GACAmvB,EAAAnvB,IAGA,IAAAovB,EAAAxtB,KACAstB,EAAA,SAAAvwB,GACAywB,EAAAL,SAKAK,EAAAL,OAAA,IAAArlB,EAAA/K,GACAwwB,EAAAC,EAAAL,WAOA1L,EAAAzuB,UAAAk6B,iBAAA,WACA,GAAAltB,KAAAmtB,OACA,MAAAntB,KAAAmtB,QAQA1L,EAAAjP,OAAA,WACA,IAAAmS,EAIA,OACA6I,MAJA,IAAA/L,EAAA,SAAAhwB,GACAkzB,EAAAlzB,IAIAkzB,WAIAxzB,EAAAD,QAAAuwB,gCClCAtwB,EAAAD,QAAA,SAAAoR,GACA,gBAAAue,GACA,OAAAve,EAAApE,MAAA,KAAA2iB,oFCxBA,IAAAjB,EAAA,WAGA,OAHA,gBAAa1uB,EAAA0uB,8FCEb,IAAI6N,EAAuC,CACzCC,EAAG,SAASvd,GACV,MAAO,IAETwd,EAAG,SAASxd,GACV,IAAI3I,EAAM2I,EAAInS,KAAK,GAAGnK,OACtB,OAAY,IAAR2T,EACK,IACU,IAARA,EACF,IACU,IAARA,EACF,GACU,IAARA,EACF,GACEA,GAAO,GACT,GAEA,GAGXomB,EAAG,SAASzd,GACV,OAAO,GAET0d,EAAG,SAAS1d,GACV,MAAO,IAET2d,EAAG,SAAS3d,GACV,OAAO,GAET4d,EAAG,SAAS5d,GACV,OAAO,GAET6d,EAAG,SAAS7d,GACV,OAAO,KAET8d,EAAG,SAAS9d,GACV,MAAO,IAET+d,EAAG,SAAS/d,GACV,OAAO,GAETge,GAAI,SAAShe,GACX,OAAO,KAETie,GAAI,SAASje,GACX,MAAO,IAETke,GAAI,SAASle,GACX,MAAO,IAETme,GAAI,SAASne,GACX,MAAO,IAEToe,GAAI,SAASpe,GACX,OAAO,GAETqe,IAAK,SAASre,GACZ,OAAO,KAETse,IAAK,SAASte,GACZ,OAAO,KAETue,IAAK,SAASve,GACZ,MAAO,IAETwe,IAAK,SAASxe,GACZ,MAAO,IAETye,IAAK,SAASze,GACZ,OAAO,KAET0e,IAAK,SAAS1e,GACZ,OAAO,GAET2e,IAAK,SAAS3e,GACZ,OAAO,GAET4e,IAAK,SAAS5e,GACZ,OAAO,GAET6e,IAAK,SAAS7e,GACZ,MAAO,IAET8e,IAAK,SAAS9e,GACZ,MAAO,IAET+e,IAAK,SAAS/e,GACZ,OAAO,IAETgf,IAAK,SAAShf,GACZ,MAAO,IAETif,IAAK,SAASjf,GACZ,OAAO,GAETkf,IAAK,SAASlf,GACZ,MAAO,IAETmf,IAAK,SAASnf,GACZ,OAAO,KAETof,IAAK,SAASpf,GACZ,MAAO,KAETqf,IAAK,SAASrf,GACZ,OAAO,GAETsf,IAAK,SAAStf,GACZ,MAAO,KAETuf,IAAK,SAASvf,GACZ,OAAO,GAETwf,IAAK,SAASxf,GACZ,OAAO,GAETyf,IAAK,SAASzf,GACZ,OAAO,GAET0f,IAAK,SAAS1f,GACZ,OAAO,GAET2f,IAAK,SAAS3f,GACZ,OAAO,GAET4f,IAAK,SAAS5f,GACZ,OAAO,GAET6f,IAAK,SAAS7f,GACZ,OAAO,GAET8f,IAAK,SAAS9f,GACZ,OAAO,IAYXjf,EAAA6V,QARa,SAASmpB,GACpB,IAAI7nB,EAAe6nB,EAAM7nB,KACrBI,EAAcglB,EAAWplB,GAAM6nB,GAGnC,OAFAznB,GAAYnL,KAAKC,IAAI,GAAI,GACzB2yB,EAAMznB,IAAMA,EACLynB,oBC/IT,IAAA/1B,EAAanJ,EAAQ,GAAamJ,OAClCg2B,EAAiBn/B,EAAQ,IACzBo/B,EAAap/B,EAAQ,IAAQq/B,WAC7BC,EAAkBt/B,EAAQ,IAG1Bu/B,EAAYv/B,EAAQ,IAEpBw/B,EAAkCx/B,EAAQ,IAC1Cy/B,EAAmCz/B,EAAQ,IAC3C0/B,EAAuB1/B,EAAQ,IAC/B2/B,EAAsB3/B,EAAQ,IAC9B4/B,EAAuB5/B,EAAQ,IAC/B6/B,EAAwB7/B,EAAQ,IAChC8/B,EAAsB9/B,EAAQ,IAC9B+/B,EAAuB//B,EAAQ,IAC/BggC,EAAAN,EAEAO,EAAA,mBACAC,EAAA,kBACAC,EAAA,4BAEA,SAAAC,EAAAv7B,EAAAw7B,EAAAx9B,GACA,KAAAgC,EAAAhC,UAAAgC,EAAAw7B,EAAAx7B,EACA,OAAAA,EAGA,SAAAy7B,EAAAC,GACA,OAAApb,SAAAob,EAAA,GAGA,SAAAC,EAAApf,GACA,OAAAA,EAAAyT,IAAA,SAAAhW,GACA,OAAAuhB,EAAAvhB,EAAAxc,SAAA,YACG0L,KAAA,IAGH,SAAA0yB,EAAAC,GACA,IACAC,EADA,EAAAD,EAAA79B,OACA,GACAoP,EAAAktB,EAAA,UAAAjd,OAAAwe,GAAAve,SAEA,OAAAqe,EAAA,GAAAxuB,MAAAzR,KAAA0R,IAAAD,MAAA,EAAA2uB,GAOA,SAAAC,EAAApd,EAAA/W,GACA,IAAAo0B,EAAA13B,EAAAO,KAAA61B,EAAAuB,KAAAtd,GAAA,QACAud,EAAA53B,EAAAO,KANA,SAAA+C,GACA,kBAAAA,GAAA,IAKAC,CAAA6yB,EAAAuB,KAAAr0B,IAAA,QAEA,OAAA2yB,EAAAyB,EAAAE,EAAA,kBAOA,SAAAC,EAAAxd,EAAAyd,GACAA,KAAAjB,EAEA,IAAAkB,EAAA3B,EAAAuB,KAAAtd,GAAAjN,MAAA,KACA,GAAA2qB,EAAAr+B,OAAA,eAAAuJ,MAAA6zB,GAGA,IAAAkB,EAAAD,EAAArM,IAAA,SAAAuM,GACA,IAAAjsB,EAAA8rB,EAAAjzB,QAAAozB,GACA,QAAAjsB,EAAA,UAAA/I,MAAA6zB,GAEA,OAAAG,EAAAjrB,EAAA9S,SAAA,aACG0L,KAAA,IAGHszB,EAAA,GAAA/0B,KAAA+Q,MAAA8jB,EAAAt+B,OAAA,IACAy+B,EAAAH,EAAAnvB,MAAA,EAAAqvB,GACAE,EAAAJ,EAAAnvB,MAAAqvB,GAGAG,EAAAF,EAAAlsB,MAAA,aAA+Cyf,IAAAyL,GAC/C,GAAAkB,EAAA3+B,OAAA,aAAAuJ,MAAA8zB,GACA,GAAAsB,EAAA3+B,OAAA,aAAAuJ,MAAA8zB,GACA,GAAAsB,EAAA3+B,OAAA,eAAAuJ,MAAA8zB,GAEA,IAAAuB,EAAAt4B,EAAAO,KAAA83B,GAEA,GADAf,EAAAgB,KACAF,EAAA,UAAAn1B,MAAA+zB,GAEA,OAAAsB,EAAAp/B,SAAA,OAGA,SAAAq/B,EAAAD,EAAAR,GAKA,GAJA93B,EAAA/G,SAAAq/B,OAAAt4B,EAAAO,KAAA+3B,EAAA,QACAR,KAAAjB,EAGAyB,EAAA5+B,OAAA,aAAAiH,UAAAo2B,GACA,GAAAuB,EAAA5+B,OAAA,aAAAiH,UAAAo2B,GACA,GAAAuB,EAAA5+B,OAAA,eAAAiH,UAAAo2B,GAEA,IAKAgB,GALAV,EAAA,GAAAxuB,MAAAzR,KAAAkhC,IACAhB,EAAAgB,IAGArsB,MAAA,cACAyf,IAAA,SAAA8M,GACA,IAAAxsB,EAAAmrB,EAAAqB,GACA,OAAAV,EAAA9rB,KAGA,OAAA8rB,IAAApB,EAAAqB,EAAAnzB,KAAA,KAAAmzB,EAAAnzB,KAAA,KAqBA5N,EAAAD,QAAA,CACA0gC,iBACAgB,kBA9EA,SAAApe,EAAA/W,GACA,OAAAm0B,EAAApd,EAAA/W,GAAApK,SAAA,QA8EA2+B,oBACAU,oBACA3f,iBAvBA,SAAA8f,EAAAC,EAAAb,GAEA,IADAY,KAAA,KACA,gBAAA/3B,UAAAo2B,GAGA,OAAAwB,GAFAI,KAAAxC,GAEAuC,EAAA,GAAAZ,IAmBAc,iBAhBA,SAAAve,EAAAyd,GACA,IACAD,EAAAxd,EAAAyd,GACG,MAAA51B,GACH,SAGA,UAUA22B,UAAA,CACAC,GAAAvC,EACAwC,GAAArC,EAEAsC,mBAAA3C,EACA4C,oBAAA3C,EACA4C,QAAA3C,EACA4C,OAAA3C,EACA4C,QAAA3C,EACA4C,SAAA3C,EACA4C,OAAA3C,EACA4C,QAAA3C,qBCtJA5/B,EAAAD,QAAiBF,EAAQ,GAAQm/B,4BCAjC,IAAA5a,EAAsBvkB,EAAQ,GAC9B2iC,EAAa3iC,EAAQ,GAqBrB2iC,EAAAtD,aAAA,IAAAsD,EAAAtD,WAAAh9B,WAAA2L,QAAA,mBAMA9N,EAAAm/B,WAbA,SAAA5yB,EAAAC,EAAAC,EAAAC,EAAAuV,GAGA,OAFAoC,EAAA9X,EAAAC,EAAAC,EAAAC,GACAuV,KAAA,OACAwgB,EAAAtD,WAAA5yB,EAAAC,EAAAC,EAAAC,EAAAuV,IAWAjiB,EAAAk/B,OA1BA,SAAA3yB,EAAAC,EAAAC,EAAAC,EAAAuV,EAAA7Q,GAOA,GANAiT,EAAA9X,EAAAC,EAAAC,EAAAC,GAEA,mBAAAuV,IACA7Q,EAAA6Q,EACAA,EAAA,QAEA,mBAAA7Q,EAAA,UAAAlF,MAAA,kCAEA,OAAAu2B,EAAAvD,OAAA3yB,EAAAC,EAAAC,EAAAC,EAAAuV,EAAA7Q,MAWApR,EAAAm/B,WAAuBr/B,EAAQ,IAC/BE,EAAAk/B,OAAmBp/B,EAAQ,sBCxB3BG,EAAAD,QAAiBF,EAAQ,GAAQskB,4BCAjC,IAKAse,EALAre,EAAsBvkB,EAAQ,GAC9BwkB,EAAsBxkB,EAAQ,IAC9B6iC,EAAW7iC,EAAQ,IACnBmJ,EAAanJ,EAAQ,GAAamJ,OAGlC25B,EAAAC,OAAAC,QAAAD,OAAAC,OAAAF,OACAG,EAAA,CACAC,IAAA,QACAC,QAAA,QACAnf,KAAA,QACAhG,OAAA,UACAolB,UAAA,UACAlf,OAAA,UACAmf,UAAA,UACAC,UAAA,UACAnf,OAAA,WAEAof,EAAA,GAsBA,SAAAC,EAAA/2B,EAAAC,EAAAC,EAAA9J,EAAA4gC,GACA,OAAAX,EAAAY,UACA,MAAAj3B,EAAA,CAAsB9L,KAAA,WAAe,kBACrCyoB,KAAA,SAAAznB,GACA,OAAAmhC,EAAAa,WAAA,CACAhjC,KAAA,SACA+L,OACAC,aACAsF,KAAA,CACAtR,KAAA8iC,IAEK9hC,EAAAkB,GAAA,KACFumB,KAAA,SAAA7G,GACH,OAAApZ,EAAAO,KAAA6Y,KAeApiB,EAAAD,QAAA,SAAAuM,EAAAC,EAAAC,EAAAC,EAAAuV,EAAA7Q,GACA,mBAAA6Q,IACA7Q,EAAA6Q,EACAA,OAAAhY,GAIA,IAAAs5B,EAAAR,GADA9gB,KAAA,QACA4N,eAEA,IAAA0T,GAAA,mBAAAV,OAAAzgB,QACA,OAAAxX,QAAA84B,SAAA,WACA,IAAAC,EACA,IACAA,EAAAhB,EAAAp2B,EAAAC,EAAAC,EAAAC,EAAAuV,GACO,MAAA9W,GACP,OAAAiG,EAAAjG,GAEAiG,EAAA,KAAAuyB,KAKA,GADAtf,EAAA9X,EAAAC,EAAAC,EAAAC,GACA,mBAAA0E,EAAA,UAAAlF,MAAA,kCACAjD,EAAA/G,SAAAqK,OAAAtD,EAAAO,KAAA+C,EAAA+X,IACArb,EAAA/G,SAAAsK,OAAAvD,EAAAO,KAAAgD,EAAA8X,IAnCA,SAAA6M,EAAA/f,GACA+f,EAAAjI,KAAA,SAAAya,GACA/4B,QAAA84B,SAAA,WACAtyB,EAAA,KAAAuyB,MAEG,SAAAx4B,GACHP,QAAA84B,SAAA,WACAtyB,EAAAjG,OA8BAkxB,CA3EA,SAAAkH,GACA,GAAAV,OAAAj4B,UAAAi4B,OAAAj4B,QAAAoa,QACA,OAAA5C,QAAAlV,SAAA,GAEA,IAAA01B,MAAAY,YAAAZ,EAAAa,WACA,OAAArhB,QAAAlV,SAAA,GAEA,QAAAjD,IAAAo5B,EAAAE,GACA,OAAAF,EAAAE,GAGA,IAAAK,EAAAN,EADAZ,KAAAz5B,EAAAQ,MAAA,GACAi5B,EAAA,OAAAa,GACAra,KAAA,WACA,WACK8G,MAAA,WACL,WAGA,OADAqT,EAAAE,GAAAK,EACAA,EAyDAC,CAAAN,GAAAra,KAAA,SAAA4a,GACA,OAAAA,EAAAR,EAAA/2B,EAAAC,EAAAC,EAAAC,EAAA62B,GAEAZ,EAAAp2B,EAAAC,EAAAC,EAAAC,EAAAuV,KACG7Q,qBClGHnR,EAAAD,QAAiBF,EAAQ,GAAQs/B,8BCAjC,SAAA2E,GACA,aA0BA,IAdA,IAAAC,EAAA,YACAC,EAAA,GACAC,EAAA,MAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GACAC,EAAAF,EAAAC,EACAE,EAAAJ,EAAAG,EAEAE,EAAA,SAAAC,EAAAC,GACA/1B,KAAAg2B,UAAAF,EACA91B,KAAA+1B,WAIAE,EAAA,GACAC,EAAA,GACA9kC,EAAA,EAAkBA,GAAA,MAAWA,EAC7B8kC,EAAA9kC,GAAA,EAuDA,IAAA+kC,EAAA,CAJA,SAAAC,EAAAN,EAAAO,GACA,OAAAP,EAAA,UAAAA,KAAA,UAAAD,EAAAC,EAAAZ,GAAAkB,EAAAN,EAAAO,IAjDA,SAAAD,EAAAN,EAAAO,GACA,IAAAC,EAAAL,EAAAH,GAOA,OANAQ,IACAA,EAAAF,EAAAN,EAAAO,IACAN,WAAAG,EAAAJ,GAAA,OAAAX,IACAc,EAAAH,GAAAQ,GAGAA,GASA,SAAAF,EAAAN,EAAAO,GACA,OAAAA,EAAAD,EAAAN,EAAAO,GAAA,IAAAR,EAAAC,EAAA,OAEA,SAAAM,EAAAN,EAAAO,GACA,IAAAzjB,EACA,GAAAkjB,EAAAT,KAAAG,GAAAM,KAAAV,KAAAQ,EAAAE,EACA,OAAAM,EAAAN,EAAAO,GAEA,GAAAhB,GAAAS,KAAAT,EAAAG,EAAA,CACA,IAAA/jC,EAAA,GACA8kC,GAAAT,EAAAT,GAAAI,EACA,IAAA7iB,EAAA,EAAoBA,EAAA6iB,IAAY7iB,EAChCnhB,EAAA6jC,EAAA1iB,GAAAwiB,EAAAM,GAAA9iB,EAAA2jB,GAEA,WAAAV,EAAAC,EAAA,GAAArkC,IAGA,IAAA+kC,EAAAV,EAAAV,EACAqB,EAAAD,EAAAd,EACAK,EAAA,GACA,OAAAU,EACAV,EAAA,IAAAX,EAAAoB,EAAAC,EAAAlB,EAAAkB,QAIA,IAFAV,EAAA,IAAAV,EAAA/3B,KAAA+Q,MAAAmoB,EAAAb,GAAAL,EAAAh4B,KAAA+Q,MAAAmoB,EAAAb,EAAAD,IACAK,EAAA,MACAnjB,EAAA,EAAoBA,EAAA8iB,IAAY9iB,EAChCmjB,EAAA,GAAAR,EAAA3iB,GAAAkjB,EAAAljB,EAGA,WAAAijB,EAAAC,EAAAC,IAnCA,SAAAK,EAAAN,EAAAO,GACA,IAAApzB,EAAA,MAAA6yB,EAEAY,GADAb,EAAAc,MAAA1zB,IAAA,IACA6yB,GACA,WAAAD,EAAAC,EAAAY,GAAAxB,KAuCAW,EAAAe,aAAAT,EAAAU,YAAA,SAAAT,EAAAU,GACA,gBAAAhB,EAAAO,GACA,OAAAS,EAAAV,EAAAN,EAAAO,KAEI,MAEJR,EAAAkB,gBAAA,SAAAjB,GACA,OAAAA,GAAA,OAAAA,GAAA,OAEAD,EAAAmB,eAAA,SAAAlB,GACA,OAAAA,GAAA,OAAAA,GAAA,OAGAD,EAAA7iC,UAAAikC,YAAA,WACAj3B,KAAA+1B,UACA/1B,KAAA+1B,QAAAF,EAAAe,aAAA52B,KAAAg2B,WAAA,GAAAD,UAIAF,EAAA7iC,UAAAK,SAAA,WACA,GAAA2M,KAAAg2B,UAAA,MACA,OAAAztB,OAAAquB,aAAA52B,KAAAg2B,WAEA,IAAAnmB,EAAA7P,KAAAg2B,UAAA,MACA,OAAAztB,OAAAquB,aAAAt5B,KAAA+Q,MAAAwB,EAAA,YAAAA,EAAA,aAIAgmB,EAAA7iC,UAAAkkC,UAAA,WAEA,OADAl3B,KAAAi3B,cACAj3B,KAAA+1B,QAAA,UAGAF,EAAA7iC,UAAAmkC,gBAAA,WAEA,OADAn3B,KAAAi3B,gBACAj3B,KAAA+1B,QAAA,QAAA/1B,KAAA+1B,QAAA,IAEAF,EAAA7iC,UAAAokC,UAAA,WAEA,OADAp3B,KAAAi3B,gBACAj3B,KAAA+1B,QAAA,QAAA/1B,KAAA+1B,QAAA,IAEAF,EAAA7iC,UAAAqkC,kBAAA,WAEA,OADAr3B,KAAAi3B,cACAj3B,KAAA+1B,QAAA,OAAA/1B,KAAA+1B,QAAA,MAEAF,EAAA7iC,UAAAskC,aAAA,SAAAC,GAEA,GADAv3B,KAAAi3B,eACAj3B,KAAA+1B,QAAA,GACA,YAEA,IAAAD,EAAA91B,KAAA+1B,QAAA,GAAAwB,EAAAvB,WACA,OAAAF,EAAAD,EAAAe,aAAAd,GAAA,MAGA,IAAA0B,EAAA,SAAA3hC,GACAmK,KAAAnK,MACAmK,KAAAy3B,OAAA,GAEAD,EAAAxkC,UAAAojC,KAAA,WACA,GAAAp2B,KAAAnK,KAAAmK,KAAAy3B,OAAAz3B,KAAAnK,IAAAhC,OAAA,CACA,IACAnC,EADAokC,EAAA91B,KAAAnK,IAAAuP,WAAApF,KAAAy3B,UAMA,OAJA5B,EAAAkB,gBAAAjB,IAAA91B,KAAAy3B,OAAAz3B,KAAAnK,IAAAhC,QAAAgiC,EAAAmB,eAAAtlC,EAAAsO,KAAAnK,IAAAuP,WAAApF,KAAAy3B,WACA3B,EAAA,MAAAA,EAAA,QAAApkC,EAAA,eACAsO,KAAAy3B,QAEA5B,EAAAe,aAAAd,GAGA,OADA91B,KAAAnK,IAAA,KACA,MAIA,IAAA6hC,EAAA,SAAAC,EAAAC,GACA53B,KAAA23B,KACA33B,KAAA63B,UAAAD,EACA53B,KAAA83B,OAAA,IAGAJ,EAAA1kC,UAAAojC,KAAA,WAcA,OAAAp2B,KAAA83B,OAAAjkC,OAAA,CACA,IAAAkkC,EAAA/3B,KAAA23B,GAAAvB,OACA,IAAA2B,EACA,YAEA/3B,KAAA83B,OAlBA,SAAAE,EAAAJ,EAAAG,GACA,IAAAE,EAAAF,EAAAb,YACA,IAAAe,GAAAL,GAAAG,EAAAZ,kBAQA,OAAAY,GANA,IADA,IAAAzB,EAAA,GACAllC,EAAA,EAA0BA,EAAA6mC,EAAApkC,SAAmBzC,EAAA,CAC7C,IAAAqE,EAAAuiC,EAAAJ,EAAA/B,EAAAe,aAAAqB,EAAA7mC,KACAklC,IAAA7jB,OAAAhd,GAEA,OAAA6gC,EAUA0B,CAAAh4B,KAAA63B,UAAAE,GAEA,OAAA/3B,KAAA83B,OAAArV,SAGA,IAAAyV,EAAA,SAAAP,GACA33B,KAAA23B,KACA33B,KAAA83B,OAAA,IAGAI,EAAAllC,UAAAojC,KAAA,WACA,IAAA+B,EACA,OAAAn4B,KAAA83B,OAAAjkC,OACA,GACA,IAAAkkC,EAAA/3B,KAAA23B,GAAAvB,OACA,IAAA2B,EACA,MAEAI,EAAAJ,EAAAV,oBACA,IAAAe,EAAAp4B,KAAA83B,OAAAjkC,OACA,OAAAskC,EACA,KAAoBC,EAAA,IAAWA,EAAA,CAG/B,GAFAp4B,KAAA83B,OAAAM,EAAA,GACAf,qBACAc,EACA,MAIAn4B,KAAA83B,OAAAvxB,OAAA6xB,EAAA,EAAAL,SACU,IAAAI,GAEV,OAAAn4B,KAAA83B,OAAArV,SAGA,IAAA4V,EAAA,SAAAV,GACA33B,KAAA23B,KACA33B,KAAAs4B,QAAA,GACAt4B,KAAA83B,OAAA,GACA93B,KAAAu4B,UAAA,MAGAF,EAAArlC,UAAAojC,KAAA,WACA,SAAAp2B,KAAA83B,OAAAjkC,QAAA,CACA,IAAAkkC,EAAA/3B,KAAA23B,GAAAvB,OACA,IAAA2B,EAAA,CACA/3B,KAAA83B,OAAA93B,KAAAs4B,QACAt4B,KAAAs4B,QAAA,GACA,MAEA,OAAAt4B,KAAAs4B,QAAAzkC,OACAmM,KAAAu4B,UAAAR,EAAAV,oBACAr3B,KAAAs4B,QAAAx5B,KAAAi5B,OACU,CACV,IACAS,EADAx4B,KAAAs4B,QAAA,GACAhB,aAAAS,GACAI,EAAAJ,EAAAV,oBACAmB,IAAAx4B,KAAAu4B,UAAAJ,GAAA,IAAAn4B,KAAAu4B,WACAv4B,KAAAs4B,QAAA,GAAAE,GAEA,IAAAL,IACAn4B,KAAA83B,OAAA93B,KAAAs4B,QACAt4B,KAAAs4B,QAAA,IAEAt4B,KAAAu4B,UAAAJ,EACAn4B,KAAAs4B,QAAAx5B,KAAAi5B,KAIA,OAAA/3B,KAAA83B,OAAArV,SAGA,IAaAgW,EAAA,SAAAlmC,EAAAsD,GAIA,IAHA,IAEAkiC,EAFAJ,EAdA,SAAAplC,EAAAsD,GACA,OAAAtD,GACA,UACA,WAAA2lC,EAAA,IAAAR,EAAA,IAAAF,EAAA3hC,IAAA,IACA,WACA,WAAAqiC,EAAA,IAAAR,EAAA,IAAAF,EAAA3hC,IAAA,IACA,UACA,WAAAwiC,EAAA,IAAAH,EAAA,IAAAR,EAAA,IAAAF,EAAA3hC,IAAA,KACA,WACA,WAAAwiC,EAAA,IAAAH,EAAA,IAAAR,EAAA,IAAAF,EAAA3hC,IAAA,KAEA,MAAAtD,EAAA,cAGAmmC,CAAAnmC,EAAAsD,GACAygC,EAAA,GAEAyB,EAAAJ,EAAAvB,QACAE,GAAAyB,EAAA1kC,WAEA,OAAAijC,GAqBAT,EAAAc,MAAA,CACAgC,EAAA,CAAGC,GAAA,IAAOC,IAAA,OAASC,GAAA,IAASD,IAAA,OAASE,GAAA,IAASF,IAAA,OAASG,GAAA,IAASC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,MAAmIC,GAAA,IAASV,IAAA,KAAAO,IAAA,KAAAI,IAAA,OAA2BC,GAAA,IAASjB,IAAA,IAAAC,IAAA,IAAAI,IAAA,IAAAI,IAAA,IAAAS,IAAA,MAAwCC,GAAA,IAASd,IAAA,KAAAI,IAAA,IAAAG,IAAA,KAAAM,IAAA,KAAAE,IAAA,KAAAJ,IAAA,OAAqDK,GAAA,IAAStB,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAE,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAM,IAAA,IAAAJ,IAAA,IAAAM,IAAA,KAAAE,IAAA,OAA6IC,GAAA,IAASlB,IAAA,OAASmB,GAAA,IAASxB,IAAA,IAAAC,IAAA,IAAAE,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAI,IAAA,IAAAS,IAAA,MAAyDO,GAAA,IAASxB,IAAA,IAAAI,IAAA,KAAAC,IAAA,KAAAG,IAAA,IAAAG,IAAA,KAAAM,IAAA,KAAAQ,IAAA,OAA6DC,GAAA,IAAS5B,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAE,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAE,IAAA,IAAAQ,IAAA,OAA2HM,GAAA,IAAS3B,IAAA,MAAQ4B,GAAA,IAAS7B,IAAA,KAAAS,IAAA,IAAAG,IAAA,KAAAM,IAAA,IAAAF,IAAA,OAA2Cc,GAAA,IAAS9B,IAAA,IAAAS,IAAA,IAAAG,IAAA,KAAAM,IAAA,IAAAE,IAAA,KAAAJ,IAAA,OAAmDe,GAAA,IAAS/B,IAAA,KAAAK,IAAA,KAAAO,IAAA,OAA2BoB,GAAA,IAASjC,IAAA,IAAAC,IAAA,IAAAE,IAAA,IAAAG,IAAA,KAAAI,IAAA,IAAAG,IAAA,KAAAM,IAAA,IAAAE,IAAA,KAAAJ,IAAA,OAA4EiB,GAAA,IAASlC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAA2B,IAAA,IAAAzB,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAwB,IAAA,IAAAvB,IAAA,KAAAE,IAAA,MAAkIsB,GAAA,IAASpC,IAAA,KAAAK,IAAA,OAAkBgC,GAAA,IAASrC,IAAA,IAAAK,IAAA,KAAAI,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAM,IAAA,IAAAF,IAAA,OAAmEsB,GAAA,IAAStC,IAAA,IAAAC,IAAA,IAAAI,IAAA,KAAAI,IAAA,IAAAG,IAAA,KAAA2B,IAAA,IAAArB,IAAA,MAA0DsB,GAAA,IAASnC,IAAA,KAAAI,IAAA,IAAAG,IAAA,KAAA2B,IAAA,IAAArB,IAAA,IAAAE,IAAA,KAAAJ,IAAA,OAA4DyB,GAAA,IAAS1C,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAE,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAA0B,IAAA,IAAAzB,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAwB,IAAA,IAAAvB,IAAA,KAAA8B,IAAA,KAAA5B,IAAA,IAAAM,IAAA,KAAAE,IAAA,OAA6JqB,GAAA,IAASzC,IAAA,KAAAU,IAAA,OAAkBgC,GAAA,IAAS7C,IAAA,KAAAC,IAAA,KAAAC,IAAA,IAAAI,IAAA,KAAAC,IAAA,KAAAM,IAAA,OAAqDiC,GAAA,IAASxC,IAAA,KAAAC,IAAA,OAAkBwC,GAAA,IAAS/C,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAE,IAAA,KAAAC,IAAA,IAAAC,IAAA,KAAAK,IAAA,OAA6EmC,GAAA,IAAS/C,IAAA,IAAAC,IAAA,KAAAI,IAAA,IAAAI,IAAA,IAAAG,IAAA,KAAAI,IAAA,OAAmDgC,GAAA,IAASjD,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,MAAmImC,GAAA,IAAS5C,IAAA,KAAAO,IAAA,KAAAI,IAAA,OAA2BkC,GAAA,IAASlD,IAAA,IAAAC,IAAA,IAAAI,IAAA,IAAAI,IAAA,IAAAS,IAAA,MAAwC5L,IAAA,IAAU+K,IAAA,KAAAI,IAAA,IAAAG,IAAA,KAAAM,IAAA,KAAAE,IAAA,KAAAJ,IAAA,OAAqDzL,IAAA,IAAUwK,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAE,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAM,IAAA,IAAAJ,IAAA,IAAAM,IAAA,KAAAE,IAAA,OAA6I9L,IAAA,IAAU6K,IAAA,OAAS5K,IAAA,IAAUuK,IAAA,IAAAC,IAAA,IAAAE,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAI,IAAA,IAAAS,IAAA,MAAyDiC,IAAA,IAAUlD,IAAA,IAAAI,IAAA,KAAAC,IAAA,KAAAG,IAAA,IAAAG,IAAA,KAAAM,IAAA,KAAAQ,IAAA,KAAAV,IAAA,OAAsEoC,IAAA,IAAUrD,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAE,IAAA,IAAAC,IAAA,KAAAE,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAE,IAAA,IAAAQ,IAAA,OAAmH+B,IAAA,IAAUpD,IAAA,IAAAQ,IAAA,MAAgB6C,IAAA,IAAUtD,IAAA,KAAAS,IAAA,IAAAG,IAAA,KAAAM,IAAA,IAAAF,IAAA,OAA2CuC,IAAA,IAAUvD,IAAA,IAAAS,IAAA,IAAAG,IAAA,KAAAM,IAAA,IAAAE,IAAA,KAAAJ,IAAA,OAAmDwC,IAAA,IAAUxD,IAAA,KAAAK,IAAA,KAAAO,IAAA,OAA2B6C,IAAA,IAAU1D,IAAA,IAAAC,IAAA,IAAAE,IAAA,IAAAG,IAAA,KAAAI,IAAA,IAAAG,IAAA,KAAAM,IAAA,IAAAE,IAAA,KAAAJ,IAAA,OAA4E0C,IAAA,IAAU3D,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAA2B,IAAA,IAAAzB,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAwB,IAAA,IAAAvB,IAAA,KAAAE,IAAA,MAAkI6C,IAAA,IAAU3D,IAAA,KAAAK,IAAA,OAAkBuD,IAAA,IAAU5D,IAAA,IAAAK,IAAA,KAAAI,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAM,IAAA,IAAAF,IAAA,OAAmE6C,IAAA,IAAU7D,IAAA,IAAAC,IAAA,IAAAI,IAAA,KAAAI,IAAA,IAAAG,IAAA,KAAA2B,IAAA,IAAArB,IAAA,MAA0D4C,IAAA,IAAUzD,IAAA,KAAAC,IAAA,KAAAG,IAAA,IAAAG,IAAA,KAAA2B,IAAA,IAAArB,IAAA,IAAAE,IAAA,KAAAJ,IAAA,OAAqE+C,IAAA,IAAUhE,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAE,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAA0B,IAAA,IAAAzB,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAwB,IAAA,IAAAvB,IAAA,KAAA8B,IAAA,KAAA5B,IAAA,IAAAM,IAAA,KAAAE,IAAA,OAA6J0C,IAAA,IAAU9D,IAAA,KAAAU,IAAA,OAAkBqD,IAAA,IAAUlE,IAAA,KAAAC,IAAA,KAAAC,IAAA,IAAAI,IAAA,KAAAC,IAAA,KAAAE,IAAA,KAAAI,IAAA,OAA8DsD,IAAA,IAAU7D,IAAA,KAAAC,IAAA,OAAkB6D,IAAA,IAAUpE,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAE,IAAA,KAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAI,IAAA,OAAsFwD,IAAA,IAAUpE,IAAA,IAAAC,IAAA,KAAAI,IAAA,IAAAI,IAAA,IAAAG,IAAA,KAAAI,IAAA,OAAmDqD,IAAA,WAAAC,IAAA,eAAoCvE,IAAA,KAAAC,IAAA,IAAAuE,IAAA,OAA0BC,IAAA,WAAAC,IAAA,eAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,eAAAC,IAAA,YAAAC,IAAA,eAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,mBAAAC,IAAA,mBAAAC,IAAA,mBAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,YAA0QvF,IAAA,KAAAC,IAAA,KAAAE,IAAA,KAAAK,IAAA,OAAoCgF,IAAA,WAAAC,IAAA,YAAiCrF,IAAA,MAAQsF,IAAA,YAAkBzF,IAAA,MAAQ0F,IAAA,IAAU1F,IAAA,IAAAG,IAAA,MAAgBwF,IAAA,YAAkB3F,IAAA,OAAStK,IAAA,WAAAC,IAAA,WAAAC,IAAA,YAAgDmK,IAAA,KAAAC,IAAA,KAAAE,IAAA,KAAAK,IAAA,OAAoC1K,IAAA,WAAAC,IAAA,WAAAC,IAAA,WAAA6P,IAAA,WAAAC,IAAA,YAA8E7F,IAAA,OAAS8F,IAAA,WAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,YAA+DlG,IAAA,KAAAC,IAAA,KAAAE,IAAA,KAAAK,IAAA,OAAoC2F,IAAA,YAAkBlG,IAAA,KAAAG,IAAA,IAAAG,IAAA,OAA0B6F,IAAA,YAAkBhG,IAAA,MAAQiG,IAAA,IAAUpG,IAAA,MAAQqG,IAAA,WAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,YAA+DzG,IAAA,IAAAC,IAAA,IAAAG,IAAA,IAAAM,IAAA,MAAgCgG,IAAA,WAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,YAA+D7G,IAAA,KAAAC,IAAA,KAAAE,IAAA,KAAAK,IAAA,OAAoCsG,IAAA,WAAAC,IAAA,YAAiC3G,IAAA,MAAQ4G,IAAA,YAAkB/G,IAAA,MAAQgH,IAAA,IAAUhH,IAAA,IAAAG,IAAA,MAAgB8G,IAAA,YAAkBjH,IAAA,OAASkH,IAAA,YAAAC,IAAA,YAAAC,IAAA,aAAmDrH,IAAA,KAAAC,IAAA,KAAAE,IAAA,KAAAK,IAAA,OAAoC8G,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,aAAmFzH,IAAA,OAAS0H,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,aAAmE9H,IAAA,KAAAC,IAAA,KAAAE,IAAA,KAAAK,IAAA,OAAoCuH,IAAA,aAAmB9H,IAAA,KAAAG,IAAA,IAAAG,IAAA,OAA0ByH,IAAA,aAAmB5H,IAAA,MAAQ6H,IAAA,IAAUhI,IAAA,MAAQiI,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,aAAmErI,IAAA,IAAAC,IAAA,IAAAG,IAAA,IAAAM,IAAA,MAAgC4H,IAAA,YAAAC,IAAA,aAClrKC,IAAA,CAAKA,IAAA,WAAAC,IAAA,WAAAC,IAAA,YAA8C1I,IAAA,KAAAC,IAAA,KAAAE,IAAA,KAAAK,IAAA,OAAoCmI,IAAA,YAAkB3I,IAAA,KAAAC,IAAA,KAAAE,IAAA,KAAAK,IAAA,OAAoCoI,IAAA,WAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,YAAuMxJ,IAAA,KAAAC,IAAA,OAAkBwJ,IAAA,aAAmBzJ,IAAA,KAAAC,IAAA,OAAkByJ,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAA9U,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAA6U,IAAA,YAAAC,IAAA,WAAAC,IAAA,cAAAC,IAAA,gBAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,eAAAC,IAAA,gBAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,gBAAAC,IAAA,YAA6wBvM,IAAA,KAAAC,IAAA,OAAkBuM,IAAA,aAAmBxM,IAAA,KAAAC,IAAA,OAAkBwM,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,YAA6K7M,IAAA,OAAS8M,IAAA,aAAmB9M,IAAA,OAAS+M,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,YAAgFnN,IAAA,OAASoN,IAAA,aAAmBpN,IAAA,OAASqN,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,YAAgF9N,IAAA,OAAS+N,IAAA,aAAmB/N,IAAA,OAASgO,IAAA,YAAkB1N,IAAA,OAAS2N,IAAA,aAAmB3N,IAAA,OAAS4N,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,YAAwThP,IAAA,OAASiP,IAAA,YAAkBvP,IAAA,KAAAC,IAAA,KAAAE,IAAA,KAAAK,IAAA,KAAAK,IAAA,OAA6C2O,IAAA,aAAmBxP,IAAA,KAAAC,IAAA,KAAAE,IAAA,KAAAK,IAAA,KAAAK,IAAA,OAA6C4O,IAAA,YAAkBzP,IAAA,KAAAC,IAAA,KAAAE,IAAA,KAAAK,IAAA,KAAAK,IAAA,OAA6C6O,IAAA,aAAmB1P,IAAA,KAAAC,IAAA,KAAAE,IAAA,KAAAK,IAAA,KAAAK,IAAA,OAA6C8O,IAAA,IAAUjP,IAAA,MAAQkP,IAAA,eAAAC,IAAA,eAAAC,IAAA,gBAAAC,IAAA,cAAAC,IAAA,eAAAC,IAAA,gBAAAC,IAAA,cAAAC,IAAA,eAAAC,IAAA,gBAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,YAAulB3R,IAAA,MAAQ4R,IAAA,aAAmB5R,IAAA,MAAQ6R,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,cAAAC,IAAA,eAAAC,IAAA,gBAAA/b,IAAA,WAAAC,IAAA,YAAAG,IAAA,WAAA4b,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,MAAA,QAC74FC,IAAA,CAAKA,IAAA,WAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,YAA+d3U,IAAA,MAAQ4U,IAAA,YAAkB5U,IAAA,MAAQ6U,IAAA,YAAkB5U,IAAA,OAAS6U,IAAA,aAAmB7U,IAAA,OAAS8U,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAkFnV,IAAA,MAAQoV,IAAA,aAAmBpV,IAAA,MAAQqV,IAAA,YAAAC,IAAA,YAAAC,IAAA,WAAAC,IAAA,YAAAC,IAAA,IAAyEnV,IAAA,MAAQoV,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,eAAAC,IAAA,eAAAC,IAAA,eAAAC,IAAA,eAAAC,IAAA,eAAAC,IAAA,eAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,MAAA,QACnwBlX,IAAA,CAAKA,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAA+W,IAAA,OAAA9W,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAmGN,IAAA,MAAQO,IAAA,OAAAC,IAAA,OAAA0B,IAAA,OAAAzB,IAAA,OAAA0W,IAAA,OAAAC,IAAA,OAAA1W,IAAA,OAAA2W,IAAA,OAAA1W,IAAA,OAAA2W,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAA3V,IAAA,OAAA4V,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAzX,IAAA,OAAA8B,IAAA,OAAA7B,IAAA,OAAA0B,IAAA,OAAArB,IAAA,OAAAJ,IAAA,OAAAwX,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAArX,IAAA,OAAAM,IAAA,OAAAgX,IAAA,OAAApX,IAAA,OAAAN,IAAA,OAAA2X,IAAA,OAAAC,IAAA,OAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAArZ,IAAA,KAAAsZ,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,YAAAC,IAAA,YAAAlV,IAAA,OAAAmV,IAAA,YAAAC,IAAA,gBAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,QAAAC,IAAA,eAAAC,IAAA,OAAAC,IAAA,eAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,QAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,IAAm1Crd,IAAA,KAAAC,IAAA,IAAAG,IAAA,KAAAC,IAAA,KAAAmX,IAAA,KAAAC,IAAA,KAAAoC,IAAA,OAA8DyD,IAAA,IAAUtd,IAAA,KAAAC,IAAA,IAAAuX,IAAA,KAAAC,IAAA,OAAmC8F,IAAA,IAAUvd,IAAA,KAAAC,IAAA,IAAAuX,IAAA,KAAAC,IAAA,KAAAoC,IAAA,OAA4C2D,IAAA,IAAUxd,IAAA,KAAAC,IAAA,IAAAG,IAAA,KAAAC,IAAA,KAAAE,IAAA,IAAAiX,IAAA,KAAAC,IAAA,OAA6DgG,IAAA,IAAUzd,IAAA,KAAAC,IAAA,IAAAuX,IAAA,KAAAC,IAAA,OAAmCiG,IAAA,IAAUjG,IAAA,OAASkG,IAAA,IAAU3d,IAAA,KAAAC,IAAA,IAAAG,IAAA,KAAAC,IAAA,KAAAE,IAAA,IAAAkX,IAAA,OAAoDmG,IAAA,IAAU5d,IAAA,KAAAC,IAAA,IAAAuX,IAAA,KAAAC,IAAA,KAAAoC,IAAA,OAA4CgE,IAAA,YAAAC,IAAA,YAAAC,IAAA,aAAmDlE,IAAA,OAASmE,IAAA,YAAAC,IAAA,aAAmCpE,IAAA,OAASqE,IAAA,YAAAC,IAAA,YAAAC,IAAA,IAA0Cpe,IAAA,KAAAC,IAAA,IAAAG,IAAA,KAAAC,IAAA,KAAAmX,IAAA,KAAAC,IAAA,KAAAjT,IAAA,KAAAqV,IAAA,OAAuEwE,IAAA,IAAUre,IAAA,KAAAC,IAAA,IAAAuX,IAAA,KAAAC,IAAA,OAAmC6G,IAAA,IAAUte,IAAA,KAAAC,IAAA,IAAAuX,IAAA,KAAAC,IAAA,KAAAjT,IAAA,KAAAqV,IAAA,OAAqD0E,IAAA,IAAUve,IAAA,KAAAC,IAAA,IAAAG,IAAA,KAAAC,IAAA,KAAAE,IAAA,IAAAiX,IAAA,KAAAC,IAAA,KAAAjT,IAAA,OAAsEga,IAAA,IAAUxe,IAAA,KAAAC,IAAA,IAAAuX,IAAA,IAAAC,IAAA,OAAmCgH,IAAA,IAAUjH,IAAA,KAAAC,IAAA,OAAkBiH,IAAA,IAAU1e,IAAA,KAAAC,IAAA,IAAAG,IAAA,KAAAC,IAAA,KAAAE,IAAA,IAAAiX,IAAA,KAAAC,IAAA,KAAAjT,IAAA,OAAsEma,IAAA,IAAU3e,IAAA,KAAAC,IAAA,IAAAuX,IAAA,KAAAC,IAAA,KAAAjT,IAAA,KAAAqV,IAAA,OAAqD+E,IAAA,aAAmB5e,IAAA,KAAAC,IAAA,IAAAuE,IAAA,OAA0Bqa,IAAA,aAAmB7e,IAAA,KAAAC,IAAA,IAAAuE,IAAA,OAA0Bsa,IAAA,YAAAC,IAAA,YAAAC,IAAA,aAAmDnF,IAAA,OAASoF,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAkDlf,IAAA,IAAAM,IAAA,MAAgB6e,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,QACpqFC,KAAA,CAAMA,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,IAA+D/f,IAAA,OAASggB,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,IAAmFtgB,IAAA,KAAAE,IAAA,OAAkBqgB,KAAA,IAAW3gB,IAAA,OAAS4gB,KAAA,IAAW7gB,IAAA,KAAAK,IAAA,KAAAE,IAAA,OAA2BugB,KAAA,IAAWzgB,IAAA,KAAAE,IAAA,OAAkBwgB,KAAA,IAAWxgB,IAAA,OAASygB,KAAA,IAAWhhB,IAAA,KAAAI,IAAA,KAAAC,IAAA,KAAAE,IAAA,OAAoC0gB,KAAA,aAAAC,KAAA,IAA6BjhB,IAAA,OAASkhB,KAAA,IAAW5gB,IAAA,OAAS6gB,KAAA,IAAWhhB,IAAA,KAAAC,IAAA,KAAAE,IAAA,KAAA4B,IAAA,OAAoCkf,KAAA,IAAW9gB,IAAA,OAAS+gB,KAAA,IAAW/gB,IAAA,OAASghB,KAAA,IAAWhhB,IAAA,OAASihB,KAAA,IAAWnhB,IAAA,KAAAE,IAAA,OAAkBkhB,KAAA,IAAWxhB,IAAA,OAASyhB,KAAA,IAAW1hB,IAAA,KAAAK,IAAA,KAAAE,IAAA,OAA2BohB,KAAA,IAAWthB,IAAA,KAAAE,IAAA,OAAkBqhB,KAAA,IAAWrhB,IAAA,OAASshB,KAAA,IAAW7hB,IAAA,KAAAI,IAAA,KAAAC,IAAA,KAAAE,IAAA,OAAoCuhB,KAAA,aAAAC,KAAA,IAA6B9hB,IAAA,OAAS+hB,KAAA,IAAWzhB,IAAA,OAAS0hB,KAAA,IAAW7hB,IAAA,KAAAC,IAAA,KAAAE,IAAA,KAAA4B,IAAA,OAAoC+f,KAAA,IAAW3hB,IAAA,OAAS4hB,KAAA,IAAW5hB,IAAA,OAAS6hB,KAAA,IAAW7hB,IAAA,OAAS8hB,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,IAAiEjiB,IAAA,OAASkiB,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,IAAmFliB,IAAA,OAASmiB,KAAA,IAAWniB,IAAA,OAASoiB,KAAA,aAAAC,KAAA,aAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,IAA2PvjB,IAAA,OAASwjB,KAAA,IAAWxjB,IAAA,OAASyjB,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,IAAmOrkB,IAAA,OAASskB,KAAA,IAAWtkB,IAAA,OAASukB,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,cAChiDC,KAAA,CAAMC,KAAA,kcAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,IAAyOC,KAAA,KAAAC,KAAA,KAAAC,KAAA,OAA8BC,KAAA,IAAWF,KAAA,OAAUG,KAAA,IAAWH,KAAA,OAAUI,KAAA,MAAAC,KAAA,MAAAC,KAAA,MAAAC,KAAA,MAAAC,KAAA,MAAAC,KAAA,MAAAC,KAAA,MAAAC,KAAA,MAAAZ,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAW,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,MAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,cAAAC,KAAA,IAAyX5B,KAAA,OAAU6B,KAAA,cAAAC,KAAA,IAA8B9B,KAAA,OAAU+B,KAAA,cAAAC,KAAA,IAA8BhC,KAAA,OAAUiC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,QAC1wBC,KAAA,CAAMC,KAAA,MAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,QACNC,KAAA,CAAMC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,MAAAC,KAAA,MAAAC,KAAA,MAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,QACNC,KAAA,CAAMC,KAAA,IAASC,KAAA,OAAUC,KAAA,cAAAC,KAAA,IAA8BF,KAAA,OAAUG,KAAA,cAAAC,KAAA,IAA8BJ,KAAA,OAAUK,KAAA,cAAAL,KAAA,KAAAM,KAAA,KAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,KAAAC,KAAA,IAAoSC,KAAA,KAAAC,KAAA,OAAoBC,KAAA,cAAAC,KAAA,cAAAC,KAAA,KAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,mBACjaC,KAAA,CAAMC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,KAAAC,KAAA,KAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,KAAAC,MAAA,OAAAC,MAAA,KAAAC,MAAA,OAAAC,MAAA,QACNC,KAAA,CAAMC,KAAA,KAAAC,KAAA,IAAmBC,KAAA,KAAAC,KAAA,KAAAC,KAAA,OAA8BC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,KAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,IAA4HC,KAAA,OAAUC,KAAA,cAAAC,KAAA,IAA8BC,KAAA,KAAAH,KAAA,OAAoBI,KAAA,IAAWD,KAAA,OAAUE,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,MACpQC,KAAA,CAAMC,KAAA,IAASC,KAAA,OAAUC,KAAA,cAAAC,KAAA,KAAAC,KAAA,MAAAH,KAAA,MAAAI,KAAA,KAAAC,KAAA,IAAwEC,KAAA,OAAUC,KAAA,cAAAC,KAAA,IAA8BC,KAAA,KAAAH,KAAA,KAAAI,KAAA,OAA8BC,KAAA,cAAAC,KAAA,cAAAC,KAAA,eAA4DP,KAAA,OAAUQ,KAAA,cAAAC,KAAA,MAC7OC,KAAA,CAAMC,KAAA,IAASC,KAAA,KAAAC,KAAA,OAAoBC,KAAA,IAAWF,KAAA,OAAUG,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,IAAwFD,KAAA,KAAAE,KAAA,KAAAC,KAAA,OAA8BC,KAAA,cAAAC,KAAA,eAAyCL,KAAA,OAAUM,KAAA,cAAAC,KAAA,eACjOC,KAAA,CAAMC,KAAA,kBAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,KAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,kBAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,kBAAAC,KAAA,mBACNC,KAAA,CAAMC,KAAA,aAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,kBAAAC,KAAA,OAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,kBAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,KAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,QACNC,KAAA,CAAMC,KAAA,IAASC,KAAA,OAAUC,KAAA,cAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,OAAAC,KAAA,aAAAC,MAAA,KAAAC,MAAA,KAAAC,MAAA,IAAiHC,MAAA,QAAYC,MAAA,gBAAAC,MAAA,IAAkCF,MAAA,QAAYG,MAAA,gBAAAC,MAAA,IAAkCJ,MAAA,QAAYK,MAAA,gBAAAC,MAAA,KAAAN,MAAA,MAClPO,KAAA,CAAMC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,IAA6FC,MAAA,QAAYC,MAAA,IAAYD,MAAA,QAAYE,MAAA,KAAAC,MAAA,KAAAC,MAAA,KAAAC,MAAA,MACvIC,KAAA,CAAMC,MAAA,KAAAC,MAAA,KAAAC,MAAA,KAAAC,MAAA,MACNC,KAAA,CAAMC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,MAAA,KAAAC,MAAA,IAAyDC,MAAA,MAAAC,MAAA,QAAwBC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,KAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,QACvFC,KAAA,CAAMC,MAAA,IAAUC,MAAA,MAAAC,MAAA,MAAAC,MAAA,QAAoCC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,KAAAC,MAAA,MACpDC,KAAA,CAAMC,MAAA,IAAUC,MAAA,QAAYC,MAAA,IAAYD,MAAA,QAAYE,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,KAAAC,MAAA,MACpDC,KAAA,CAAMC,MAAA,KAAAC,MAAA,KAAAC,MAAA,MACNC,KAAA,CAAMC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,QACNC,KAAA,CAAMC,KAAA,QACNC,KAAA,CAAMC,KAAA,OAAAC,KAAA,OAAAC,KAAA,QACNC,KAAA,CAAMC,KAAA,OAAAC,KAAA,OAAAC,KAAA,KAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,QACNC,KAAA,CAAMC,KAAA,IAASC,KAAA,OAAUC,KAAA,cAAAC,KAAA,IAA8BF,KAAA,OAAUG,KAAA,cAAAC,KAAA,IAA8BJ,KAAA,OAAUK,KAAA,cAAAC,KAAA,IAA8BN,KAAA,OAAUO,KAAA,cAAAC,KAAA,IAA8BR,KAAA,OAAUS,KAAA,cAAAC,KAAA,IAA8BV,KAAA,OAAUW,KAAA,cAAAC,KAAA,KAAAC,KAAA,IAAwCb,KAAA,OAAUc,KAAA,cAAAC,KAAA,IAA8Bf,KAAA,OAAUgB,KAAA,cAAAC,KAAA,IAA8BjB,KAAA,OAAUkB,KAAA,IAAWlB,KAAA,OAAUmB,KAAA,cAAAC,KAAA,cAAAC,KAAA,IAAiDrB,KAAA,OAAUsB,KAAA,cAAAC,KAAA,KAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,MACnbC,KAAA,CAAMC,KAAA,KAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,KAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,QACNC,KAAA,CAAMC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,aAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,aAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,aAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,aAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,aAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,aAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,ap2C,IAAA,OAASq2C,KAAA,aAAoBr2C,IAAA,OAASs2C,KAAA,aAAAC,KAAA,aAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,YAA2kBx4C,IAAA,OAASy4C,KAAA,aAAoBz4C,IAAA,OAAS04C,KAAA,aAAAC,KAAA,aAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,YAAyH94C,IAAA,OAAS+4C,KAAA,aAAoB/4C,IAAA,OAASg5C,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,aAAAC,KAAA,aeAAAC,KAAA,YAAAC,KAAA,YAA47B58C,IAAA,KAAAG,IAAA,OAAkB08C,KAAA,YAAmB78C,IAAA,KAAAG,IAAA,OAAkB28C,KAAA,WAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,YAA2Yp+C,IAAA,OAASq+C,KAAA,aAAoBr+C,IAAA,OAASs+C,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,YAAmUx/C,IAAA,OAASy/C,KAAA,aAAoBz/C,IAAA,OAAS0/C,KAAA,WAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,aACt9GC,KAAA,CAAMA,KAAA,aAAkBxiD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,KAAAqV,IAAA,OAAoC4oC,KAAA,aAAoBziD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,KAAAqV,IAAA,OAAoC6oC,KAAA,cAAqB7oC,IAAA,OAAS8oC,KAAA,cAAqB9oC,IAAA,OAAS+oC,KAAA,cAAqB/oC,IAAA,OAASgpC,KAAA,cAAqBhpC,IAAA,OAASipC,KAAA,cAAqBjpC,IAAA,OAASkpC,KAAA,cAAqBlpC,IAAA,OAASmpC,KAAA,aAAoBhjD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,KAAAqV,IAAA,OAAoCopC,KAAA,aAAoBjjD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,KAAAqV,IAAA,OAAoCqpC,KAAA,cAAqBrpC,IAAA,OAASspC,KAAA,cAAqBtpC,IAAA,OAASupC,KAAA,cAAqBvpC,IAAA,OAASwpC,KAAA,cAAqBxpC,IAAA,OAASypC,KAAA,cAAqBzpC,IAAA,OAAS0pC,KAAA,cAAqB1pC,IAAA,OAAS2pC,KAAA,aAAoBxjD,IAAA,KAAAC,IAAA,OAAkBwjD,KAAA,aAAoBzjD,IAAA,KAAAC,IAAA,OAAkByjD,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAA4F9jD,IAAA,KAAAC,IAAA,OAAkB8jD,KAAA,aAAoB/jD,IAAA,KAAAC,IAAA,OAAkB+jD,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAA4FpkD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,KAAAqV,IAAA,OAAoCwqC,KAAA,aAAoBrkD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,KAAAqV,IAAA,OAAoCyqC,KAAA,cAAqBzqC,IAAA,OAAS0qC,KAAA,cAAqB1qC,IAAA,OAAS2qC,KAAA,cAAqB3qC,IAAA,OAAS4qC,KAAA,cAAqB5qC,IAAA,OAAS6qC,KAAA,cAAqB7qC,IAAA,OAAS8qC,KAAA,cAAqB9qC,IAAA,OAAS+qC,KAAA,aAAoB5kD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,KAAAqV,IAAA,OAAoCgrC,KAAA,aAAoB7kD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,KAAAqV,IAAA,OAAoCirC,KAAA,cAAqBjrC,IAAA,OAASkrC,KAAA,cAAqBlrC,IAAA,OAASmrC,KAAA,cAAqBnrC,IAAA,OAASorC,KAAA,cAAqBprC,IAAA,OAASqrC,KAAA,cAAqBrrC,IAAA,OAASsrC,KAAA,cAAqBtrC,IAAA,OAASurC,KAAA,aAAoBplD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,OAA2B6gD,KAAA,aAAoBrlD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,OAA2B8gD,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAgI5lD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,OAA2BqhD,KAAA,aAAoB7lD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,OAA2BshD,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAgIpmD,IAAA,KAAAC,IAAA,OAAkBomD,KAAA,aAAoBrmD,IAAA,KAAAC,IAAA,OAAkBqmD,KAAA,YAAAC,KAAA,aAAAC,KAAA,YAAAC,KAAA,aAAAC,KAAA,aAA4F1mD,IAAA,KAAAC,IAAA,OAAkB0mD,KAAA,aAAoB3mD,IAAA,KAAAC,IAAA,OAAkB2mD,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAA4FhnD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,OAA2ByiD,KAAA,aAAoBjnD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,OAA2B0iD,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAgIxnD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,OAA2BijD,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAA0E5nD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,KAAAqV,IAAA,OAAoCguC,KAAA,aAAoB7nD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,KAAAqV,IAAA,OAAoCiuC,KAAA,cAAqBjuC,IAAA,OAASkuC,KAAA,cAAqBluC,IAAA,OAASmuC,KAAA,cAAqBnuC,IAAA,OAASouC,KAAA,cAAqBpuC,IAAA,OAASquC,KAAA,cAAqBruC,IAAA,OAASsuC,KAAA,cAAqBtuC,IAAA,OAASuuC,KAAA,aAAoBpoD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,KAAAqV,IAAA,OAAoCwuC,KAAA,aAAoBroD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,KAAAqV,IAAA,OAAoCyuC,KAAA,cAAqBzuC,IAAA,OAAS0uC,KAAA,cAAqB1uC,IAAA,OAAS2uC,KAAA,cAAqB3uC,IAAA,OAAS4uC,KAAA,cAAqB5uC,IAAA,OAAS6uC,KAAA,cAAqB7uC,IAAA,OAAS8uC,KAAA,cAAqB9uC,IAAA,OAAS+uC,KAAA,aAAoB/uC,IAAA,OAASgvC,KAAA,QAAAC,KAAA,YAAAC,KAAA,QAAAC,KAAA,aAA+DnvC,IAAA,OAASovC,KAAA,QAAAC,KAAA,YAAAC,KAAA,QAAAC,KAAA,YAAAC,KAAA,QAAAC,KAAA,YAAAC,KAAA,QAAAC,KAAA,aAA2H3vC,IAAA,OAAS4vC,KAAA,QAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,aAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,aAAu9BlzC,IAAA,OAASmzC,KAAA,aAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,QAAAC,KAAA,YAAAC,KAAA,eAAAC,KAAA,QAAAC,KAAA,eAA0JxtD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,OAA2BipD,KAAA,eAAAC,KAAA,YAAAC,KAAA,aAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,aAA6Gj0C,IAAA,OAASk0C,KAAA,aAAAC,KAAA,YAAAC,KAAA,QAAAC,KAAA,YAAAC,KAAA,QAAAC,KAAA,YAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,QAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,QAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,QAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,QAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,QAAAC,KAAA,OAAAC,KAAA,aAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,aAAorB32C,IAAA,OAAS42C,KAAA,aAAAC,KAAA,YAAAC,KAAA,QAAAC,KAAA,YAAAC,KAAA,QAAAC,KAAA,YAAAC,KAAA,QAAAC,KAAA,eAAkIhxD,IAAA,KAAAC,IAAA,KAAAuE,IAAA,QAClyKysD,KAAA,CAAMA,KAAA,SAAAC,KAAA,SAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,aAAAC,KAAA,eAAAC,KAAA,WAAAC,KAAA,cAAAC,KAAA,iBAAAC,KAAA,WAAAC,KAAA,kBAAAC,KAAA,uBAAAC,KAAA,kBAAAC,KAAA,uBAAAC,KAAA,cAAAC,KAAA,eAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,4BAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,aAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,aAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,eAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,OAAAC,KAAA,QACNC,KAAA,CAAMA,KAAA,iBAAAC,KAAA,kBAAAC,KAAA,WAAAC,KAAA,eAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,YAAAC,KAAA,eAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,eAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,cAAAC,KAAA,iBAAAC,KAAA,cAAAC,KAAA,WAAAC,KAAA,QAAAC,KAAA,WAAAC,KAAA,OAAAC,KAAA,QAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,YAAAC,KAAA,iBAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,aAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,mBAAAC,KAAA,mBAAAC,KAAA,sBAAAC,KAAA,mBAAAC,KAAA,mBAAAC,KAAA,mBAAAC,KAAA,mBAAAC,KAAA,mBAAAC,KAAA,mBAAAC,KAAA,mBAAAC,KAAA,mBAAAC,KAAA,mBAAAC,KAAA,mBAAAC,KAAA,mBAAAC,KAAA,mBAAAC,KAAA,gBAAAC,KAAA,WAAAC,KAAA,cAAAC,KAAA,iBAAAC,KAAA,cAAAC,KAAA,WAAAC,KAAA,cAAAC,KAAA,iBAAAC,KAAA,oBAAAC,KAAA,cAAAC,KAAA,WAAAC,KAAA,cAAAC,KAAA,iBAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,gBAAAC,KAAA,oBAAAC,KAAA,gBAAAC,KAAA,YAAAC,KAAA,gBAAAC,KAAA,oBAAAC,KAAA,wBAAAC,KAAA,gBAAAC,KAAA,YAAAC,KAAA,gBAAAC,KAAA,oBAAAC,KAAA,YAAAC,KAAA,WAAAC,KAAA,YAAAC,KAAA,YAAAC,KAAA,mBAAAC,KAAA,IAA29D/9D,IAAA,OAASg+D,KAAA,IAAWh+D,IAAA,OAASi+D,KAAA,IAAWj+D,IAAA,OAASk+D,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,IAAuHx+D,IAAA,OAASy+D,KAAA,IAAWz+D,IAAA,OAAS0+D,KAAA,IAAW1+D,IAAA,QACjrE2+D,KAAA,CAAMC,KAAA,IAAS5+D,IAAA,OAAS6+D,KAAA,aAAAC,KAAA,IAA6B9+D,IAAA,OAAS++D,KAAA,aAAAC,KAAA,IAA6Bh/D,IAAA,OAASi/D,KAAA,aAAAC,KAAA,IAA6Bl/D,IAAA,OAASm/D,KAAA,aAAAC,KAAA,IAA6Bp/D,IAAA,OAASq/D,KAAA,aAAAC,KAAA,kBAAAC,KAAA,uBAAAC,KAAA,kBAAAC,KAAA,uBAAAC,KAAA,IAAmI1/D,IAAA,OAAS2/D,KAAA,aAAAC,KAAA,IAA6B5/D,IAAA,OAAS6/D,KAAA,aAAAC,KAAA,IAA6B9/D,IAAA,OAAS+/D,KAAA,aAAAC,KAAA,IAA6BhgE,IAAA,OAASigE,KAAA,aAAAC,KAAA,IAA6BlgE,IAAA,OAASmgE,KAAA,WAAAC,KAAA,IAA2BpgE,IAAA,OAASqgE,KAAA,aAAAC,KAAA,IAA6BtgE,IAAA,OAASugE,KAAA,IAAWvgE,IAAA,OAASwgE,KAAA,aAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,IAAiG7gE,IAAA,OAAS8gE,KAAA,IAAW9gE,IAAA,OAAS+gE,KAAA,aAAAC,KAAA,aAAAC,KAAA,IAA+CjhE,IAAA,OAASkhE,KAAA,IAAWlhE,IAAA,OAASmhE,KAAA,aAAAC,KAAA,aAAAC,KAAA,IAA+CrhE,IAAA,OAASshE,KAAA,IAAWthE,IAAA,OAASuhE,KAAA,IAAWvhE,IAAA,OAASwhE,KAAA,IAAWxhE,IAAA,OAASyhE,KAAA,aAAAC,KAAA,aAAAC,KAAA,IAA+C3hE,IAAA,OAAS4hE,KAAA,IAAW5hE,IAAA,OAAS6hE,KAAA,aAAAC,KAAA,aAAAC,KAAA,IAA+C/hE,IAAA,OAASgiE,KAAA,IAAWhiE,IAAA,OAASiiE,KAAA,aAAAC,KAAA,aAAAC,KAAA,IAA+CniE,IAAA,OAASoiE,KAAA,IAAWpiE,IAAA,OAASqiE,KAAA,IAAWriE,IAAA,OAASsiE,KAAA,IAAWtiE,IAAA,OAASuiE,KAAA,IAAWviE,IAAA,OAASwiE,KAAA,IAAWxiE,IAAA,OAASyiE,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,IAAmF7iE,IAAA,OAAS8iE,KAAA,IAAW9iE,IAAA,OAAS+iE,KAAA,IAAW/iE,IAAA,OAASgjE,KAAA,IAAWhjE,IAAA,OAASijE,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,aAAAC,KAAA,cAC5zCC,KAAA,CAAMC,KAAA,UAAAC,KAAA,WACNC,KAAA,CAAMC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,oBAAAC,KAAA,oBAAAC,KAAA,oBAAAC,KAAA,oBAAAC,KAAA,oBAAAC,KAAA,oBAAAC,KAAA,oBAAAC,KAAA,oBAAAC,KAAA,oBAAAC,KAAA,oBAAAC,KAAA,oBAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,cAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,iBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kBAAAC,KAAA,kiBAAAC,MAAA,cAAAC,MAAA,iBAAAC,MAAA,mBACPC,MAAA,CAAOC,MAAA,YAAAC,MAAA,WAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,QACPC,MAAA,CAAOC,MAAA,cAAAC,MAAA,KAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,QACPC,MAAA,CAAOC,MAAA,cAAAC,MAAA,eACPC,MAAA,CAAOA,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,YAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAA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,MAAA,cAAAC,MAAA,cAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,iCAAAC,MAAA,4BAAAC,MAAA,kBAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,eAAAC,MAAA,oBAAAC,MAAA,eAAAC,MAAA,iBAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,eACPC,MAAA,CAAOA,MAAA,gCAAAC,MAAA,gCAAAC,MAAA,gCAAAC,MAAA,0BAAAC,MAAA,gCAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,sCAAAC,MAAA,gCAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,gCAAAC,MAAA,gCAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,oBAAAC,MAAA,0BAAAC,MAAA,gCAAAC,MAAA,gCAAAC,MAAA,oBAAAC,MAAA,sCAAAC,MAAA,4CAAAC,MAAA,sCAAAC,MAAA,0BAAAC,MAAA,sCAAAC,MAAA,sCAAAC,MAAA,gCAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,gCAAAC,MAAA,sCAAAC,MAAA,gCAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,sCAAAC,MAAA,0BAAAC,MAAA,gCAAAC,MAAA,sCAAAC,MAAA,0BAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,sCAAAC,MAAA,gCAAAC,MAAA,sCAAAC,MAAA,0BAAAC,MAAA,sCAAAC,MAAA,oBAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,gCAAAC,MAAA,0BAAAC,MAAA,oBAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,gCAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,sCAAAC,MAAA,gCAAAC,MAAA,oBAAAC,MAAA,sCAAAC,MAAA,oBAAAC,MAAA,gCAAAC,MAAA,gCAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,gCAAAC,MAAA,oBAAAC,MAAA,0BAAAC,MAAA,gCAAAC,MAAA,oBAAAC,MAAA,sCAAAC,MAAA,0BAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,kBAAAC,MAAA,eAAAC,MAAA,cAAAC,MAAA,kBAAAC,MAAA,eAAAC,MAAA,eAAAC,MAAA,gBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,cAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,gCAAAC,MAAA,eAAAC,MAAA,eAAAC,MAAA,eAAAC,MAAA,eAAAC,MAAA,eAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,kBAAAC,MAAA,sBAAAC,MAAA,eAAAC,MAAA,eAAAC,MAAA,eAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,eAAAC,MAAA,mBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,eAAAC,MAAA,gBAAAC,MAAA,oBAAAC,MAAA,mBAAAC,MAAA,gBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,mBAAAC,MAAA,gBAAAC,MAAA,oBAAAC,MAAA,qBAAAC,MAAA,yBAAAC,MAAA,cAAAC,MAAA,kBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,mBAAAC,MAAA,4BAAAC,MAAA,gCAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,eAAAC,MAAA,eAAAC,MAAA,eAAAC,MAAA,eAAAC,MAAA,eAAAC,MAAA,cAAAC,MAAA,eAAAC,MAAA,eAAAC,MAAA,eAAAC,MAAA,eAAAC,MAAA,eAAAC,MAAA,cAAAC,MAAA,gBAAAC,MAAA,eAAAC,MAAA,qBAAAC,MAAA,eAAAC,MAAA,cAAAC,MAAA,eAAAC,MAAA,wBAAAC,MAAA,kBAAAC,MAAA,eAAAC,MAAA,eAAAC,MAAA,eAAAC,MAAA,cAAAC,MAAA,gBAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,oBAAAC,MAAA,gBAAAC,MAAA,eAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,cAAAC,MAAA,sBAAAC,MAAA,iBAAAC,MAAA,cAAAC,MAAA,gBAAAC,MAAA,eAAAC,MAAA,cAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBACPC,MAAA,CAAOC,MAAA,KAAAC,MAAA,KAAAC,MAAA,KAAAC,MAAA,KAAAC,MAAA,MACPC,MAAA,CAAOC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,QACPC,MAAA,CAAOC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,QACPC,MAAA,CAAOC,MAAA,cAAAC,MAAA,YAAAC,MAAA,aACPC,MAAA,CAAOC,MAAA,KAAAC,MAAA,KAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,QACPC,MAAA,CAAOC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,KAAAC,MAAA,KAAAC,MAAA,MACPC,MAAA,CAAOC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,MACPC,MAAA,CAAOC,MAAA,cAAAC,MAAA,cAAAC,MAAA,YAAAC,MAAA,cAAAC,MAAA,MACPC,MAAA,CAAOC,OAAA,MACPC,MAAA,CAAOC,OAAA,sBAAAC,OAAA,sBAAAC,OAAA,sBAAAC,OAAA,sBAAAC,OAAA,sBAAAC,OAAA,sBAAAC,OAAA,sBAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,KAAAC,OAAA,KAAAC,OAAA,KAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,sBAAAC,OAAA,sBAAAC,OAAA,sBAAAC,OAAA,sBAAAC,OAAA,sBAAAC,OAAA,uBACPC,MAAA,CAAOC,OAAA,OAAAC,OAAA,OAAAC,OAAA,QACPC,MAAA,CAAOC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aaACPC,MAAA,CAAOC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aACPC,MAAA,CAAOC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aaAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,cACPC,MAAA,CAAOC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,uBAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,iBAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,eACPC,MAAA,CAAOC,OAAA,oBAAAC,OAAA,oBAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,0BAAAC,OAAA,0BAAAC,OAAA,0BAAAC,OAAA,0BAAAC,OAAA,0BAAAC,OAAA,0BAAAC,OAAA,0BAAAC,OAAA,0BAAAC,OAAA,0BAAAC,OAAA,cAAAC,OAAA,eACPC,MAAA,CAAOC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,SAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WACPC,MAAA,CAAOA,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,SAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WACPC,MAAA,CAAOA,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,WAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,UAAAC,MAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,QAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,YACPC,MAAA,CAAOA,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,MAAAC,MAAA,kBAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,WAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,mBAAAC,MAAA,mBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,cACPC,MAAA,CAAOA,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,qBAAAC,MAAA,qBAAAC,MAAA,qBAAAC,MAAA,qBAAAC,MAAA,qBAAAC,MAAA,qBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,mBACPC,MAAA,CAAOA,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,4BAAAC,MAAA,4BAAAC,MAAA,4BAAAC,MAAA,4BAAAC,MAAA,4BAAAC,MAAA,4BAAAC,MAAA,4BAAAC,MAAA,uBAAAC,MAAA,4FAAAC,MAAA,8CAAAC,MAAA,6BACPC,MAAA,CAAOC,MAAA,WAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,aAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,cAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,aAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,gBAAAC,MAAA,kBAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,kBAAAC,MAAA,gBAAAC,MAAA,kBAAAC,MAAA,gBAAAC,MAAA,kBAAAC,MAAA,gBAAAC,MAAA,kBAAAC,MAAA,gBAAAC,MAAA,kBAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,mBACPC,MAAA,CAAOC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA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","file":"asch-web.node.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 30);\n","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n","module.exports = require(\"crypto\");","export const XAS_PRECISION = 100000000\nexport const CLIENT_DRIFT_SECONDS = 5\nexport const LOCAL_NET_MAGIC = '594fe0f3'\nexport const TEST_NET_MAGIC = '594fe0f3'\nexport const MAIN_NET_MAGIC = '5f5b3cf5'\n\n\nexport const URLS = {\n    server: {\n        development: 'http://testnet.asch.io',\n        production: 'http://mainnet.asch.io',\n        test: 'http://testnet.asch.io'\n    },\n    accounts: {\n        mock: '/data/home/accounts.json',\n        open: '/api/accounts/open/',\n        open2: '/api/accounts/open2/',\n        url: '/api/accounts',\n        new: '/api/accounts/new',\n        count: '/api/accounts/count',\n        deletates_voted: '/api/accounts/delegates'\n    },\n    // 余额账单Apiget /api/transactions\n    transactions: {\n        mock: '/data/home/transactions.json',\n        url: '/api/transactions',\n        uncomfirmed: '/api/transactions/unconfirmed',\n        uncomfirmed_detail: '/api/transactions/unconfirmed/get'\n    },\n    // 详情基本信息\n    blocks: {\n        mock: '/data/blockDetail/getblocks.json',\n        detail: '/api/blocks/get',\n        height: '/api/blocks/getHeight',\n        milestone: '/api/blocks/getMilestone',\n        reward: '/api/blocks/getReward',\n        supply: '/api/blocks/getSupply',\n        status: '/api/blocks/getStatus',\n        full: '/api/blocks/full'\n    },\n    //deletates\n    delegates: {\n        count: '/api/delegates/count',\n        voters: '/api/delegates/voters',\n        detail: '/api/delegates/get',\n        list: '/api/delegates',\n        forging_status: '/api/delegates/forging/status',\n\n    },\n    peers: {\n        list: '/api/peers',\n        version: '/api/peers/version',\n        detail: '/api/peers/get',\n\n    },\n    loder: {\n        status: '/api/loader/status',\n        status_sync: '/api/loader/status/sync'\n    },\n\n\n    // ===== 1.4  v2 api ======\n    v2: {\n        // 账户查询 ps: name params is avaliable now\n        accounts: {\n            detail: '/api/v2/accounts/:address',\n            balances: '/api/v2/balances/:address',\n            pledges: '/api/v2/pledges'\n        },\n        \n        transactions: {\n            /**\n             * 获取交易列表\n             */\n            list: '/api/v2/transactions',\n            /**\n             * 获取交易详情\n             */\n            detail: '/api/v2/transactions/:tid'\n        },\n        transfers: {\n            /**\n             * 获取转账记录\n             */\n            list: '/api/v2/transfers'\n        },\n        blocks: {\n            list: '/api/v2/blocks',\n            detail: '/api/v2/blocks/:idOrHeight'\n        },\n        proposals: {\n            list: '/api/v2/proposals',\n            detail: '/api/v2/proposals/:id',\n\n        },\n        // 获取所有网关\n        gateways: {\n            list: '/api/v2/gateways',\n            validators: '/api/v2/gateways/:name/validators',\n            currencies_all: '/api/v2/gateways/currencies',\n            currencies_one: '/api/v2/gateways/:name/currencies',\n            account_all: '/api/v2/gateways/accounts/:address',\n            account_one: '/api/v2/gateways/:name/accounts/:address',\n            deposits: '/api/v2/gateways/deposits/:address/:currency',\n            withdrawals: '/api/v2/gateways/withdrawals/:address/:currency',\n        },\n        agents: {\n            list: '/api/v2/agents',\n            clienteles: 'api/v2/agents/:name/clienteles',\n            group: 'api/v2/groups/:address'\n        },\n        chains: {\n            list: 'api/v2/chains'\n        },\n        uia: {\n            issuers_list: '/api/v2/uia/issuers',\n            issuers_detail: '/api/v2/uia/issuers/:address',\n            assets_one: '/api/v2/uia/issuers/:address/assets',\n            assets_all: '/api/v2/uia/assets',\n            assets_detail: '/api/v2/uia/assets/:name',\n            balances: '/api/uia/balances/:address',\n        },\n        contracts: {\n            list: '/api/v2/contracts/',\n            detail: '/api/v2/contracts/:name',\n            code: '/api/v2/contracts/:name/code',\n            metadata: '/api/v2/contracts/:name/metadata',\n            states: '/api/v2/contracts/:name/states/:path',\n            results: '/api/v2/contracts/:name/results/:tid',\n            constants_method: '/api/v2/contracts/:name/constant/:method'\n        }\n    },\n\n    // 区分 local 与 mainnet 的请求头参数\n    magics: {\n        development: '594fe0f3',\n        production: '5f5b3cf5'\n    }\n}","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","module.exports = require(\"buffer\");","var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nfunction checkBuffer (buf, name) {\n  if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {\n    throw new TypeError(name + ' must be a buffer or string')\n  }\n}\n\nmodule.exports = function (password, salt, iterations, keylen) {\n  checkBuffer(password, 'Password')\n  checkBuffer(salt, 'Salt')\n\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n","export * from './provider'\nexport * from './http-provider'\nexport * from './auto-provider'\n","import { ObjectType } from '../type'\n\nexport abstract class Provider {\n  abstract get(url: string, params?: ObjectType): Promise<object>\n  abstract post(url: string, params: ObjectType, headers?: ObjectType): Promise<object>\n  // abstract get: (url: string, params: ObjectType) => Promise<object>\n  // abstract post: (url: string, params: ObjectType, headers?: ObjectType) => Promise<object>\n  // getContract: (url: string) => Promise<object>\n}\n\nexport enum Network {\n  Local,\n  Test,\n  Main\n}\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","module.exports = require(\"http\");","module.exports = require(\"https\");","var url = require(\"url\");\nvar URL = url.URL;\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar assert = require(\"assert\");\nvar Writable = require(\"stream\").Writable;\nvar debug = require(\"debug\")(\"follow-redirects\");\n\n// RFC7231§4.2.1: Of the request methods defined by this specification,\n// the GET, HEAD, OPTIONS, and TRACE methods are defined to be safe.\nvar SAFE_METHODS = { GET: true, HEAD: true, OPTIONS: true, TRACE: true };\n\n// Create handlers that pass events from native requests\nvar eventHandlers = Object.create(null);\n[\"abort\", \"aborted\", \"error\", \"socket\", \"timeout\"].forEach(function (event) {\n  eventHandlers[event] = function (arg) {\n    this._redirectable.emit(event, arg);\n  };\n});\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  options.headers = options.headers || {};\n  this._options = options;\n  this._ended = false;\n  this._ending = false;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Since http.request treats host as an alias of hostname,\n  // but the url module interprets host as hostname plus port,\n  // eliminate the host property to avoid confusion.\n  if (options.host) {\n    // Use hostname if set, because it has precedence\n    if (!options.hostname) {\n      options.hostname = options.host;\n    }\n    delete options.host;\n  }\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    self._processResponse(response);\n  };\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  // Writing is not allowed if end has been called\n  if (this._ending) {\n    throw new Error(\"write after end\");\n  }\n\n  // Validate input and shift parameters if necessary\n  if (!(typeof data === \"string\" || typeof data === \"object\" && (\"length\" in data))) {\n    throw new Error(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Ignore empty buffers, since writing them doesn't invoke the callback\n  // https://github.com/nodejs/node/issues/22066\n  if (data.length === 0) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  // Only write when we don't exceed the maximum body length\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  // Error when we exceed the maximum body length\n  else {\n    this.emit(\"error\", new Error(\"Request body larger than maxBodyLength limit\"));\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  // Shift parameters if necessary\n  if (typeof data === \"function\") {\n    callback = data;\n    data = encoding = null;\n  }\n  else if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Write data if needed and end\n  if (!data) {\n    this._ended = this._ending = true;\n    this._currentRequest.end(null, null, callback);\n  }\n  else {\n    var self = this;\n    var currentRequest = this._currentRequest;\n    this.write(data, encoding, function () {\n      self._ended = true;\n      currentRequest.end(null, null, callback);\n    });\n    this._ending = true;\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Global timeout for all underlying requests\nRedirectableRequest.prototype.setTimeout = function (msecs, callback) {\n  if (callback) {\n    this.once(\"timeout\", callback);\n  }\n\n  if (this.socket) {\n    startTimer(this, msecs);\n  }\n  else {\n    var self = this;\n    this._currentRequest.once(\"socket\", function () {\n      startTimer(self, msecs);\n    });\n  }\n\n  this.once(\"response\", clearTimer);\n  this.once(\"error\", clearTimer);\n\n  return this;\n};\n\nfunction startTimer(request, msecs) {\n  clearTimeout(request._timeout);\n  request._timeout = setTimeout(function () {\n    request.emit(\"timeout\");\n  }, msecs);\n}\n\nfunction clearTimer() {\n  clearTimeout(this._timeout);\n}\n\n// Proxy all other public ClientRequest methods\n[\n  \"abort\", \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n  if (!nativeProtocol) {\n    this.emit(\"error\", new Error(\"Unsupported protocol \" + protocol));\n    return;\n  }\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.substr(0, protocol.length - 1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  this._currentUrl = url.format(this._options);\n\n  // Set up event handlers\n  request._redirectable = this;\n  for (var event in eventHandlers) {\n    /* istanbul ignore else */\n    if (event) {\n      request.on(event, eventHandlers[event]);\n    }\n  }\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end.\n    var i = 0;\n    var self = this;\n    var buffers = this._requestBodyBuffers;\n    (function writeNext(error) {\n      // Only write if this request has not been redirected yet\n      /* istanbul ignore else */\n      if (request === self._currentRequest) {\n        // Report any write errors\n        /* istanbul ignore if */\n        if (error) {\n          self.emit(\"error\", error);\n        }\n        // Write the next buffer if there are still left\n        else if (i < buffers.length) {\n          var buffer = buffers[i++];\n          /* istanbul ignore else */\n          if (!request.finished) {\n            request.write(buffer.data, buffer.encoding, writeNext);\n          }\n        }\n        // End the request if `end` has been called on us\n        else if (self._ended) {\n          request.end();\n        }\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: response.statusCode,\n    });\n  }\n\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n  var location = response.headers.location;\n  if (location && this._options.followRedirects !== false &&\n      response.statusCode >= 300 && response.statusCode < 400) {\n    // Abort the current request\n    this._currentRequest.removeAllListeners();\n    this._currentRequest.on(\"error\", noop);\n    this._currentRequest.abort();\n\n    // RFC7231§6.4: A client SHOULD detect and intervene\n    // in cyclical redirections (i.e., \"infinite\" redirection loops).\n    if (++this._redirectCount > this._options.maxRedirects) {\n      this.emit(\"error\", new Error(\"Max redirects exceeded.\"));\n      return;\n    }\n\n    // RFC7231§6.4: Automatic redirection needs to done with\n    // care for methods not known to be safe […],\n    // since the user might not wish to redirect an unsafe request.\n    // RFC7231§6.4.7: The 307 (Temporary Redirect) status code indicates\n    // that the target resource resides temporarily under a different URI\n    // and the user agent MUST NOT change the request method\n    // if it performs an automatic redirection to that URI.\n    var header;\n    var headers = this._options.headers;\n    if (response.statusCode !== 307 && !(this._options.method in SAFE_METHODS)) {\n      this._options.method = \"GET\";\n      // Drop a possible entity and headers related to it\n      this._requestBodyBuffers = [];\n      for (header in headers) {\n        if (/^content-/i.test(header)) {\n          delete headers[header];\n        }\n      }\n    }\n\n    // Drop the Host header, as the redirect might lead to a different host\n    if (!this._isRedirect) {\n      for (header in headers) {\n        if (/^host$/i.test(header)) {\n          delete headers[header];\n        }\n      }\n    }\n\n    // Perform the redirected request\n    var redirectUrl = url.resolve(this._currentUrl, location);\n    debug(\"redirecting to\", redirectUrl);\n    Object.assign(this._options, url.parse(redirectUrl));\n    this._isRedirect = true;\n    this._performRequest();\n\n    // Discard the remainder of the response to avoid waiting for data\n    response.destroy();\n  }\n  else {\n    // The response is not a redirect; return it as-is\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n  }\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    wrappedProtocol.request = function (input, options, callback) {\n      // Parse parameters\n      if (typeof input === \"string\") {\n        var urlStr = input;\n        try {\n          input = urlToOptions(new URL(urlStr));\n        }\n        catch (err) {\n          /* istanbul ignore next */\n          input = url.parse(urlStr);\n        }\n      }\n      else if (URL && (input instanceof URL)) {\n        input = urlToOptions(input);\n      }\n      else {\n        callback = options;\n        options = input;\n        input = { protocol: protocol };\n      }\n      if (typeof options === \"function\") {\n        callback = options;\n        options = null;\n      }\n\n      // Set defaults\n      options = Object.assign({\n        maxRedirects: exports.maxRedirects,\n        maxBodyLength: exports.maxBodyLength,\n      }, input, options);\n      options.nativeProtocols = nativeProtocols;\n\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    };\n\n    // Executes a GET request, following redirects\n    wrappedProtocol.get = function (input, options, callback) {\n      var request = wrappedProtocol.request(input, options, callback);\n      request.end();\n      return request;\n    };\n  });\n  return exports;\n}\n\n/* istanbul ignore next */\nfunction noop() { /* empty */ }\n\n// from https://github.com/nodejs/node/blob/master/lib/internal/url.js\nfunction urlToOptions(urlObject) {\n  var options = {\n    protocol: urlObject.protocol,\n    hostname: urlObject.hostname.startsWith(\"[\") ?\n      /* istanbul ignore next */\n      urlObject.hostname.slice(1, -1) :\n      urlObject.hostname,\n    hash: urlObject.hash,\n    search: urlObject.search,\n    pathname: urlObject.pathname,\n    path: urlObject.pathname + urlObject.search,\n    href: urlObject.href,\n  };\n  if (urlObject.port !== \"\") {\n    options.port = Number(urlObject.port);\n  }\n  return options;\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n","module.exports = require(\"url\");","module.exports = require(\"stream\");","\"use strict\";\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @api public\n  */\n\n\n  function disable() {\n    createDebug.enable('');\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;\n\n","module.exports = require(\"util\");","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","import { Transaction } from '../type'\nimport calFee from '../asch-fee'\nimport * as Constants from '../constants'\nimport * as Slots from '../time/slots'\nimport * as Utils from '../utils'\n\nfunction convertBigintMemberToString(obj: any) {\n  if (typeof obj !== 'object' || obj === null) return\n  let bint = 'bigint'\n  Object.keys(obj).forEach(key => {\n    const value = obj[key]\n    const type = typeof value\n    if (type === bint) {\n      obj[key] = String(value)\n    }\n    else if (type === 'object') {\n      convertBigintMemberToString(value)\n    }\n  })\n}\n\n\n/**\n * TransactionBuilder 创建未签名交易\n */\nexport class TransactionBuilder {\n\n  /**\n   * 构建一个未签名的交易\n   * @param type 交易类型\n   * @param args 交易所需要的参数\n   * @param message 备注\n   * @param options 选项\n   */\n  static buildTransaction(\n    type: number,\n    args: Array<any>,\n    message: string = '',\n    options = {}\n  ): Transaction {\n    convertBigintMemberToString(args)\n    let transaction: Transaction = {\n      type: type,\n      fee: 0,\n      args: args,\n      timestamp: 0,\n      message: message,\n      senderPublicKey: '',\n      senderId: ''\n      //mode: 0\n    }\n    transaction = calFee(transaction)\n    transaction.timestamp = Slots.getTime() - Constants.CLIENT_DRIFT_SECONDS\n    return transaction\n  }\n\n  static convertSecondPwd(pwd: string): string {\n    const key = pwd\n    const keyPair = Utils.getKeys(key)\n    return keyPair.publicKey\n  }\n\n  /**\n   * 主链转账XAS\n   * @param amount 转账数量\n   * @param recipientId 接收者地址\n   * @param message 转账备注 \n   */\n  static transferXAS(amount: number | string, to: string, message: string): Transaction {\n    return this.buildTransaction(1, [amount, to], message)\n  }\n\n\n  /**\n   * 设置昵称\n   * @param name 昵称\n   */\n  static setName(name: string): Transaction {\n    return this.buildTransaction(2, [name])\n  }\n\n  /**\n   * 设置二级密码\n   * @param secondPwd 二级密码(加密后publickey)\n   */\n  static setSecondPassword(secondPwd: string): Transaction {\n    let pubkey = this.convertSecondPwd(secondPwd)\n    return this.buildTransaction(3, [pubkey])\n  }\n\n  /**\n   * 锁仓\n   * @param height 锁仓高度\n   * @param amount 锁仓XAS数量\n   */\n  static setLock(height: number, amount: number): Transaction {\n    return this.buildTransaction(4, [height, amount])\n  }\n\n  /**\n   * 解锁\n   */\n  static unlock(): Transaction {\n    return this.buildTransaction(5, [])\n  }\n\n  /**\n   * 设置理事会\n   * @param name 理事会名称\n   * @param members 成员组\n   * @param min 最少决策数(最少为3)\n   * @param max 最多决策数\n   * @param m 决策权值最小值\n   * @param updateInterval 更新间隔\n   */\n  static setCouncil(name: string, members: Array<any>, min: number, max: number, m: number, updateInterval: number): Transaction {\n    return this.buildTransaction(6, [name, members, min, max, m, updateInterval])\n  }\n\n  /**\n  * 注册代理人\n  */\n  static registerAgent(): Transaction {\n    return this.buildTransaction(7, [])\n  }\n\n  /**\n   * 设置投票代理人\n   * @param agent 代理人昵称\n   */\n  static setAgent(agent: string): Transaction {\n    return this.buildTransaction(8, [agent])\n  }\n\n  /**\n   * 取消投票代理\n   */\n  static repealAgent(): Transaction {\n    return this.buildTransaction(9, [])\n  }\n\n  /**\n   * 注册为受托人\n   */\n  static registerDelegate(): Transaction {\n    return this.buildTransaction(10, [])\n  }\n\n  /**\n   * 给委托人投票\n   * @param delegates 受托人数组,最多33个\n   */\n  static voteDelegates(delegates: string[]): Transaction {\n    return this.buildTransaction(11, delegates)\n  }\n\n  /**\n   * 撤销受托人投票\n   * @param delegates 受托人公钥数组,最多33个\n   */\n  static cleanVote(delegates: string[]): Transaction {\n    return this.buildTransaction(12, delegates)\n  }\n\n  /**\n   * 带宽和CPU抵押\n   * @param bandwidth 带宽抵押的XAS数量\n   * @param cpu CPU抵押的XAS数量\n   */\n  static pledge(bandwidth: string|number, cpu: string|number): Transaction {\n    return this.buildTransaction(13, [bandwidth, cpu])\n  }\n\n  /**\n   * 取消带宽和CPU抵押\n   * @param bandwidth 取消带宽抵押的XAS数量\n   * @param cpu 取消CPU抵押的XAS数量\n   */\n  static unPledge(bandwidth: string|number, cpu: string|number): Transaction {\n    return this.buildTransaction(14, [bandwidth, cpu])\n  }\n\n  /**\n   * 注册发行商\n   * @param name 发行商名称\n   * @param desc 描述\n   */\n  static registerIssuer(name: string, desc: string): Transaction {\n    return this.buildTransaction(100, [name, desc])\n  }\n\n  /**\n   * 注册资产\n   * @param symbol 资产名称\n   * @param desc 描述\n   * @param maximum 上限\n   * @param precision 精度\n   */\n  static registerAsset(\n    symbol: string,\n    desc: string,\n    maximum: number,\n    precision: number\n  ): Transaction {\n    return this.buildTransaction(101, [symbol, desc, maximum, precision])\n  }\n\n  /**\n   * 发行资产\n   * @param symbol 资产名称\n   * @param amount 发行数量\n   */\n  static issueAsset(symbol: string, amount: string): Transaction {\n    return this.buildTransaction(102, [symbol, amount])\n  }\n\n  /**\n   * 资产转账(内部转账)\n   * @param symbol 资产名称\n   * @param amount 数量\n   * @param recipientId 接收人地址\n   * @param message 备注\n   */\n  static transferAsset(\n    symbol: string,\n    amount: string,\n    recipientId: string,\n    message: string\n  ): Transaction {\n    return this.buildTransaction(103, [symbol, amount, recipientId], message)\n  }\n\n  /**\n   * 注册侧链DApp\n   * @param name dapp名称\n   * @param desc 描述\n   * @param link 链接\n   * @param icon 图标\n   * @param delegates 委托人\n   * @param nlockNumber 最小受托人数量\n   */\n  static registerDapp(\n    name: string,\n    desc: string,\n    link: string,\n    icon: string,\n    delegates: number,\n    nlockNumber: number\n  ): Transaction {\n    return this.buildTransaction(200, [name, desc, link, icon, delegates, nlockNumber])\n  }\n\n  /**\n   * 更新Dapp委托人\n   * @param dappId Dapp ID\n   * @param from 旧的记账人公钥\n   * @param to  新的记账人公钥\n   */\n  static updateBooker(dappId: string, from: string, to: string): Transaction {\n    return this.buildTransaction(201, [dappId, from, to])\n  }\n\n  /**\n   * 添加Dapp委托人\n   * @param dappId Dapp ID\n   * @param key 委托人公钥\n   */\n  static addBooker(dappId: string, key: string): Transaction {\n    return this.buildTransaction(202, [dappId, key])\n  }\n\n  /**\n   * 删除Dapp委托人\n   * @param dappId Dapp ID\n   * @param key 委托人公钥\n   */\n  static deleteBooker(dappId: string, key: string): Transaction {\n    return this.buildTransaction(203, [dappId, key])\n  }\n\n  /**\n   * 充值到侧链DApp\n   * @param dappId  Dapp ID\n   * @param currency 资产名称\n   * @param amount 数量\n   */\n  static depositDapp(dappId: string, currency: string, amount: string): Transaction {\n    return this.buildTransaction(204, [name, currency, amount])\n  }\n\n  /**\n   * 从Dapp提现 \n   * @param dappId Dapp ID\n   * @param recipient 接受者地址\n   * @param currency 资产名\n   * @param amount 提现金额\n   * @param oid \n   * @param signatures \n   */\n  static withdrawDapp(\n    dappId: string,\n    recipient: string,\n    currency: string,\n    amount: string,\n    oid: string,\n    signatures: string\n  ): Transaction {\n    return this.buildTransaction(205, [dappId, recipient, currency, amount, oid, signatures])\n  }\n\n  /**\n   * 发起提案\n   * @param title 提案标题\n   * @param desc 描述\n   * @param topic 提案类型\n   * @param content 内容\n   * @param endHeight 提案结束高度\n   * ~~~\n   * 对不同提案类型给出不同的参数\n   * 1.新增网关\n   * //提案类型\n   * let topic = 'gateway_register'\n   * //下面构造content,对于新增网关提案，需要提供提案的名称，描述，最少成员，更新间隔，资产信息等\n   * let name = 'aschCoin'   //3-16位大小写字母数字\n   * let desc = 'test the gateway register'\n   * let minimumMembers = 3      //网关最少成员数，这个数值的范围应当在3-33之间的整数，\n   * let updateInterval = 8640   //更新频率，这个值应当是大于8640的\n   * let symbol = 'TEC'   //比如发行的币叫TEC\n   * let currencyDesc = 'some describes of currency'    //资产描述\n   * let precision = 1      //资产精度\n   * let currency = {symbol:symbol,\n   *            desc:currencyDesc,\n   *           precision:precision}\n   * //下面构造这个content\n   * let content = {name:name,\n   *           desc:desc,\n   *           minimumMembers:minimumMembers,\n   *           updateInterval:updateInterval,\n   *           currency:currency}\n   * 2. 网关初始化\n   * //提案类型\n   * let topic = 'gateway_init'\n   * //下面构造content\n   * let gateway = 'bitcoin'     //网关的名字\n   * let members = [             //初始网关的成员\n   * 'A5eTVn2Mz5p2j6SjGKdgvmUc2vMsSvKzuy',\n   * 'A3SmW61ZwxmNc26BbfKLbHkaNbmUQzexuj',\n   * 'A4ncaYtKRrD8YS2Mi82HbwGEE9DxqsbEr9']\n   * //下面构造这个content\n   * let content = {gateway:gateway,\n   *            members:members\n   *          }\n   * \n   * 3.更新网关成员\n   * //提案类型\n   * let topic = 'gateway_update_member'\n   * //下面构造content\n   * let gateway = 'bitcoin'     //网关的名字\n   * let from = 'A3SmW61ZwxmNc26BbfKLbHkaNbmUQzexuj'   //要撤销的成员地址\n   * let to = 'A7w7Rx5bCerJFbfG5BKdQ77bPqfWeyrmgJ'     //要添加的成员地址\n   * //下面构造这个content\n   * let content = {gateway:gateway, from:from, to:to}\n   * \n   * 4.网关撤销\n   * //提案类型\n   * let topic = 'gateway_revoke'     //这个参数较少，只需要网关的名字即可\n   * //下面构造content\n   * let gateway = 'bitcoin'     //网关的名字\n   * //下面构造这个content\n   * let content = {gateway:gateway}\n   * \n   * ~~~\n   */\n  static createProposal(\n    title: string,\n    desc: string,\n    topic: string,\n    content: string,\n    endHeight: number\n  ): Transaction {\n    return this.buildTransaction(300, [title, desc, topic, content, endHeight])\n  }\n\n  /**\n   * 给提案投票\n   * @param pid 提案的编号\n   */\n  static voteProposal(pid: string): Transaction {\n    return this.buildTransaction(301, [pid])\n  }\n\n  /**\n   * 激活提案\n   * @param pid 提案的编号\n   */\n  static activateProposal(pid: string): Transaction {\n    return this.buildTransaction(302, [pid])\n  }\n\n  /**\n   * 网关注册成员\n   * @param gateway 网关名字\n   * @param publicKey 成员公钥\n   * @param desc 描述\n   */\n  static registerGateway(gateway: string, publicKey: string, desc: string): Transaction {\n    return this.buildTransaction(401, [gateway, publicKey, desc])\n  }\n\n  /**\n   * 开通网关账户\n   * @param gateway 网关的名字\n   */\n  static openGatewayAccount(gateway: string): Transaction {\n    return this.buildTransaction(400, [gateway])\n  }\n\n  /**\n   * 对网关充值\n   * @param gateway 网关名字\n   * @param address 存款地址\n   * @param currency 资产名称\n   * @param amount 数量\n   * @param oid \n   */\n  static depositGateway(gateway: string, address: string, currency: string, amount: string, oid: string): Transaction {\n    return this.buildTransaction(402, [gateway, address, currency, amount, oid])\n  }\n\n  /**\n   * 从网关提现\n   * @param address 提现地址\n   * @param gateway 网关名字\n   * @param currency 资产名称\n   * @param amount 数量\n   * @param fee 手续费\n   */\n  static withdrawGateway(\n    address: string,\n    gateway: string,\n    currency: string,\n    amount: number,\n    fee: number\n  ): Transaction {\n    return this.buildTransaction(403, [address, gateway, currency, amount, fee])\n  }\n\n\n  /**\n   * 为理事会投票\n   * @param targetId 目标ID\n   */\n  static voteForCouncil(targetId: string): Transaction {\n    return this.buildTransaction(500, [targetId])\n  }\n\n  /**\n   * 激活理事会\n   * @param targetId 目标ID\n   */\n  static activCouncil(targetId: string): Transaction {\n    return this.buildTransaction(501, [targetId])\n  }\n\n  /**\n   * 增加理事会成员\n   * @param address 成员地址\n   * @param weight 权重\n   * @param m \n   */\n  static addMemberToCouncil(address: string, weight: string, m: number): Transaction {\n    return this.buildTransaction(502, [address,weight,m])\n  }\n\n  /**\n   * 移除理事会成员\n   * @param address 成员地址\n   * @param m \n   */\n  static removeMemberFromCouncil(address: string, m: number): Transaction {\n    return this.buildTransaction(503, [address, m])\n  }\n\n  /**\n   * 置换理事会成员\n   * @param from 将被替换成员\n   * @param to 新来成员\n   * @param weight 权重\n   * @param m \n   */\n  static replaceMemberFromCouncil(from: string, to: string, weight: string, m: number): Transaction {\n    return this.buildTransaction(504, [from,to,weight,m])\n  }\n\n\n\n  /**\n   * 注册合约\n   * @param name 智能合约名称，全网唯一，3 ~ 32个字母或数字组成\n   * @param version 合约引擎版本，目前请填v1.0\n   * @param desc 智能合约的描述，长度不超过255的字符串\n   * @param code 智能合约代码，长度不超过16K\n   * @param consumeOwnerEnergy 是否优先消耗合约所有者的能量\n   * @param gasLimit 最大消耗的Gas, 10,000,000 > gasLimit > 0\n   */\n  static registerContract(\n    name: string,\n    version: string,\n    desc: string,\n    code: string,\n    consumeOwnerEnergy: boolean=true,\n    gasLimit: number=1000000\n  ): Transaction {\n    return this.buildTransaction(600, [gasLimit, name, version, desc, code, consumeOwnerEnergy])\n  }\n\n  /**\n   * 调用合约方法\n   * @param contractName 智能合约名称\n   * @param methodName 要调用的方法名称\n   * @param methodArgs 调用方法所需要的参数列表\n   * @param gasLimit 最大消耗的Gas, 10,000,000 > gasLimit > 0\n   * @param enablePayGasInXAS 当调用者能量不足时，是否使用XAS支付Gas\n   */\n  static callContract(\n    contractName: string,\n    methodName: string,\n    methodArgs: Array<any>,\n    gasLimit: number=100000,\n    enablePayGasInXAS: boolean=true\n  ): Transaction {\n    return this.buildTransaction(601, [\n      gasLimit,\n      enablePayGasInXAS,\n      contractName,\n      methodName,\n      methodArgs\n    ])\n  }\n\n  /**\n   * 转账到合约\n   * @param currency 转账资产名称\n   * @param amount 转账金额\n   * @param extraArgs 额外参数\n   * @param nameOrAddress 合约名称或者地址\n   * @param methodName payable方法名称, 若为undefined, null或者''，则调用默认的payable方法\n   * @param gasLimit 最大消耗的Gas, 10,000,000 > gasLimit > 0\n   * @param enablePayGasInXAS 当调用者能量不足时，是否使用XAS支付Gas\n   */\n  static payContract(\n    currency: string,\n    amount: number|string,\n    extraArgs: Array<any>,\n    nameOrAddress?: string,\n    methodName?: string,\n    gasLimit: number = 100000,\n    enablePayGasInXAS: boolean = true\n  ): Transaction {\n    if(extraArgs && extraArgs.length>0)\n    {\n      return this.buildTransaction(602, [\n        gasLimit,\n        enablePayGasInXAS,\n        nameOrAddress,\n        (methodName && methodName.length > 0) ? methodName : '',\n        amount,\n        currency,\n        extraArgs\n      ])\n    }else{\n      return this.buildTransaction(602, [\n        gasLimit,\n        enablePayGasInXAS,\n        nameOrAddress,\n        (methodName && methodName.length > 0) ? methodName : '',\n        amount,\n        currency\n      ])\n    }\n  }\n\n}\n","function getEpochTime(time?: number): number {\n  if (time === undefined) {\n    time = new Date().getTime()\n  }\n  var d = beginEpochTime()\n  var t = d.getTime()\n  return Math.floor((time - t) / 1000)\n}\n\nfunction beginEpochTime(): Date {\n  let d: Date = new Date(Date.UTC(2016, 5, 27, 20, 0, 0, 0))\n  return d\n}\n\nconst interval = 10\nconst delegates = 101\n\nfunction getTime(time?: number) {\n  return getEpochTime(time)\n}\n\nfunction getRealTime(epochTime?: number) {\n  if (epochTime === undefined) {\n    epochTime = getTime()\n  }\n  var d = beginEpochTime()\n  var t = Math.floor(d.getTime() / 1000) * 1000\n  return t + epochTime * 1000\n}\n\nfunction getSlotNumber(epochTime?: number) {\n  if (epochTime === undefined) {\n    epochTime = getTime()\n  }\n\n  return Math.floor(epochTime / interval)\n}\n\nfunction getSlotTime(slot: number) {\n  return slot * interval\n}\n\nfunction getNextSlot() {\n  var slot = getSlotNumber()\n\n  return slot + 1\n}\n\nfunction getLastSlot(nextSlot: number) {\n  return nextSlot + delegates\n}\n\nexport {\n  interval,\n  delegates,\n  getTime,\n  getRealTime,\n  getSlotNumber,\n  getSlotTime,\n  getNextSlot,\n  getLastSlot,\n  beginEpochTime\n}\n","import * as Bip39 from 'bip39'\nimport * as sha256 from 'fast-sha256'\nimport * as RIPEMD160 from 'ripemd160'\nimport * as nacl from 'tweetnacl'\nimport * as ByteBuffer from 'bytebuffer'\nimport * as Format from './time/format'\n// import { Buffer } from '../node_modules/buffer/'\n// import * as libBuffer from 'buffer'\n\n// console.log('libBuffer:' + JSON.stringify(libBuffer))\n// console.log('globalBuffer:' + global.Buffer)\n\n// const Buffer = global.Buffer || libBuffer\n\n// export default Buffer\n\nimport { Transaction, Keys, ObjectType, Account } from './type'\n\n\n\ntype Bytes = string | Uint8Array\nconst NORMAL_PREFIX = 'A'\nconst ONE_XAS = 100000000\nconst EPOCHTIME = new Date(Date.UTC(2016, 5, 27, 20, 0, 0, 0))\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nlet ALPHABET_MAP: ObjectType = {}\nlet BASE = ALPHABET.length\nlet LEADER = ALPHABET.charAt(0)\n\n// pre-compute lookup table\nfor (let z = 0; z < ALPHABET.length; z++) {\n  let x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction sha256Bytes(data: Uint8Array): Uint8Array {\n  return sha256.hash(data)\n}\n\nfunction getHash(\n  transaction: Transaction,\n  skipSignature: boolean = false,\n  skipSecondSignature: boolean = false\n) {\n  return sha256Bytes(getBytes(transaction, skipSignature, skipSecondSignature))\n}\n\nfunction getBytes(\n  trs: Transaction,\n  skipSignature: boolean = false,\n  skipSecondSignature: boolean = false\n): Uint8Array {\n  let bb = new ByteBuffer(1, true)\n  bb.writeInt(trs.type)\n  bb.writeInt(trs.timestamp)\n  bb.writeLong(trs.fee)\n  bb.writeString(trs.senderId)\n  if (trs.message) bb.writeString(trs.message)\n  if (trs.args) {\n    let args: string | undefined\n    if (typeof trs.args === 'string') {\n      args = trs.args\n    } else if (Array.isArray(trs.args)) {\n      args = JSON.stringify(trs.args)\n    }\n    if (args != undefined && args.length > 0) {\n      bb.writeString(args)\n    }\n  }\n\n  if (!skipSignature && trs.signatures) {\n    for (let signature of trs.signatures) {\n      let signatureBuffer = new Buffer(signature, 'hex')\n      for (let idx = 0; idx < signatureBuffer.length; idx++) {\n        bb.writeByte(signatureBuffer[idx])\n      }\n    }\n  }\n\n  if (!skipSecondSignature && trs.secondSignature) {\n    let signSignatureBuffer = new Buffer(trs.secondSignature, 'hex')\n    for (let idx = 0; idx < signSignatureBuffer.length; idx++) {\n      bb.writeByte(signSignatureBuffer[idx])\n    }\n  }\n\n  bb.flip()\n  return toLocalBuffer(bb)\n}\n\n/**\n * 填充 senderId和senderPublicKey\n * @param transaction\n * @param secret\n */\nfunction fill(transaction: Transaction, secret: string): Transaction {\n  let keys = getKeys(secret)\n  transaction.senderPublicKey = keys.publicKey\n  transaction.senderId = getAddress(keys.publicKey)\n  return transaction\n}\n\nfunction sign(transaction: Transaction, secret: string): Transaction {\n  let hash = getHash(transaction, true, true)\n  let keys = getKeys(secret)\n  let signature = nacl.sign.detached(hash, keys.keypair.secretKey)\n  let signStr = new Buffer(signature).toString('hex')\n  if (transaction.signatures == null) transaction.signatures = new Array<string>()\n  transaction.signatures!.push(signStr)\n  transaction.id = new Buffer(getId(transaction)).toString('hex')\n  return transaction\n}\n\nfunction secondSign(transaction: Transaction, secret: string): Transaction {\n  let hash = getHash(transaction, true, true)\n  let keys = getKeys(secret)\n  let signature = nacl.sign.detached(hash, keys.keypair.secretKey)\n  let signStr = new Buffer(signature).toString('hex')\n  transaction.secondSignature = signStr\n  transaction.id = new Buffer(getId(transaction)).toString('hex')\n  return transaction\n}\n\n/**\n * 所有交易的签名函数\n * @param unsignedTrx\n */\nfunction fullSign(unsignedTrx: Transaction, secret: string, secondSecret: string): Transaction {\n  //console.log('secret:'+secret)\n  let keys: Keys = getKeys(secret)\n  // console.log('Keys:' + JSON.stringify(keys))\n  let trx = fill(unsignedTrx, secret)\n  trx = sign(unsignedTrx, secret)\n  if (secondSecret != null && secondSecret.length > 0) {\n    trx = secondSign(trx, secondSecret)\n  }\n  // trx.id = new Buffer(getId(trx)).toString('hex')\n  return trx\n}\n\n// /**\n//  * 所有扩展交易二进制数据签名\n//  * @param unsignedTrx\n//  */\n// function fullSignBytes(bytes: Bytes, secret: string): string {\n//   let keys: Keys = getKeys(secret)\n//   let trx = fill(unsignedTrx, secret)\n//   trx = sign(unsignedTrx, secret)\n//   if (secondSecret != null && secondSecret.length > 0) {\n//     trx = secondSign(trx, secondSecret)\n//   }\n//   // trx.id = new Buffer(getId(trx)).toString('hex')\n//   return trx\n// }\n\nfunction getKeys(secret: string): Keys {\n  let hash = sha256Bytes(new Buffer(secret))\n  //console.log('get keys hash:'+hash)\n  let keypair = nacl.sign.keyPair.fromSeed(hash)\n  //console.log('get keys keypair:'+JSON.stringify(keypair))\n  return {\n    keypair,\n    publicKey: new Buffer(keypair.publicKey).toString('hex'),\n    privateKey: new Buffer(keypair.secretKey).toString('hex')\n  }\n}\n\nfunction toLocalBuffer(buf: any) {\n  if (typeof window !== 'undefined') {\n    return new Uint8Array(buf.toArrayBuffer())\n  } else {\n    return buf.toBuffer()\n  }\n}\n\n/**\n * 将Hex字符串或者buffer转换成Uint8Array\n * @param hex \n */\nfunction fromHex(hex: string | Buffer): Uint8Array {\n  if (typeof hex === 'string') {\n    hex = Buffer.from(hex, 'hex')\n    // return Uint8Array.from(Buffer.from(hex, 'hex'))\n  }\n  let a = new Uint8Array(hex.length)\n  for (let i = 0; i < hex.length; i++) {\n    a[i] = hex[i]\n  }\n  return a;\n}\n\n/**\n * 将Uint8Array转换成十六进制的字符串\n * @param bytes \n */\nfunction toHex(bytes: Uint8Array): string {\n  if (typeof bytes === 'string') {\n    return bytes;\n  }\n  return new Buffer(bytes).toString('hex')\n}\n\n/**\n * 对字节数字签名\n * @param bytes \n * @param secretKey 12个单词的mnemonic或者hex字符串，或者Uint8Array\n */\nfunction signBytes(bytes: Bytes, secretKey: Bytes): string {\n  if (typeof bytes === 'string') {\n    bytes = fromHex(bytes)\n  }\n  if (typeof secretKey === 'string') {\n    if(secretKey.split(' ').length==12){\n     let keys: Keys =  getKeys(secretKey)\n     secretKey = keys.keypair.secretKey\n    }else{\n     secretKey = fromHex(secretKey)\n    }\n  }\n  // console.log('secretKey:' + secretKey)\n  let hash = sha256Bytes(bytes)\n  console.log('hash:' + hash)\n  let signature = nacl.sign.detached(hash, secretKey)\n  return toHex(signature)\n}\n\n/**\n * \n * @param transaction \n */\nfunction verify(transaction: Transaction): boolean {\n  let remove = 64\n  if (transaction.signSignature) {\n    remove = 128\n  }\n\n  let bytes = getBytes(transaction)\n  let data2 = new Buffer(bytes.length - remove)\n\n  for (let idx = 0; idx < data2.length; idx++) {\n    data2[idx] = bytes[idx]\n  }\n\n  let hash = sha256Bytes(data2)\n\n  let signatureBuffer = new Buffer(transaction.signatures![0], 'hex')\n  let senderPublicKeyBuffer = new Buffer(transaction.senderPublicKey, 'hex')\n  let res = nacl.sign.detached.verify(hash, signatureBuffer, senderPublicKeyBuffer)\n  return res\n}\n\n/**\n * 验证签名\n * @param bytes \n * @param signature \n * @param publicKey \n */\nfunction verifyBytes(bytes: Bytes, signature: Bytes, publicKey: Bytes): boolean {\n  if (typeof bytes === 'string') {\n    bytes = fromHex(bytes)\n  }\n  if (typeof signature === 'string') {\n    signature = fromHex(signature)\n  }\n  if (typeof publicKey === 'string') {\n    publicKey = fromHex(publicKey)\n  }\n  let hash = sha256Bytes(bytes)\n  let res = nacl.sign.detached.verify(hash, signature, publicKey)\n  return res\n}\n\nfunction getId(transaction: Transaction): Uint8Array {\n  return sha256Bytes(getBytes(transaction))\n}\n\nfunction base58DecodeUnsafe(str: string) {\n  if (str.length === 0) return Buffer.allocUnsafe(0)\n\n  let bytes: number[] = [0]\n  for (let idx = 0; idx < str.length; idx++) {\n    let value = ALPHABET_MAP[str[idx]]\n    if (value === undefined) return\n    let carry = value\n    for (let j = 0; j < bytes.length; ++j) {\n      carry += bytes[j] * BASE\n      bytes[j] = carry & 0xff\n      carry >>= 8\n    }\n\n    while (carry > 0) {\n      bytes.push(carry & 0xff)\n      carry >>= 8\n    }\n  }\n\n  // deal with leading zeros\n  for (let k = 0; str[k] === LEADER && k < str.length - 1; ++k) {\n    bytes.push(0)\n  }\n  return Buffer.from(bytes.reverse())\n}\n\nfunction base58Encode(payload: Uint8Array): string {\n\n  let checksum: Buffer = new Buffer(sha256Bytes(sha256Bytes(payload)))\n  let source: Buffer = Buffer.concat([new Buffer(payload), checksum], payload.length + 4)\n  if (source.length === 0) return ''\n\n  let digits = [0]\n  for (let i = 0; i < source.length; ++i) {\n    let carry = source[i]\n    for (let j = 0; j < digits.length; ++j) {\n      carry += digits[j] << 8\n      digits[j] = carry % BASE\n      carry = (carry / BASE) | 0\n    }\n\n    while (carry > 0) {\n      digits.push(carry % BASE)\n      carry = (carry / BASE) | 0\n    }\n  }\n\n  let str: string = ''\n\n  // deal with leading zeros\n  for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n    str += ALPHABET[0]\n  }\n  // convert digits to a string\n  for (let q = digits.length - 1; q >= 0; --q) {\n    str += ALPHABET[digits[q]]\n  }\n  return str\n}\n\nfunction isAddress(address: string): boolean {\n  if (typeof address !== 'string') {\n    return false\n  }\n  if (!/^[0-9]{1,20}$/g.test(address)) {\n    if (!base58DecodeUnsafe(address.slice(1))) {\n      return false\n    }\n    if (\n      ['A'].indexOf(address[0]) === -1 &&\n      ['S'].indexOf(address[0]) === -1 &&\n      ['G'].indexOf(address[0]) === -1\n    ) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction generateBase58CheckAddress(publicKey: string): string {\n  let pubKey: Uint8Array\n  if (typeof publicKey === 'string') {\n    // pubKey = Buffer.from(publicKey, 'hex')\n    pubKey = fromHex(publicKey)\n  } else {\n    pubKey = publicKey\n  }\n  let h1 = sha256Bytes(pubKey)\n  let h2 = new RIPEMD160().update(new Buffer(h1)).digest()\n  return NORMAL_PREFIX + base58Encode(h2)\n}\n\nfunction createAccount(): Account {\n  const mnemonic = generateMnemonic()\n  const publicKey = getKeys(mnemonic).publicKey\n  // let password = base64EncodeToString(priKeyBytes)\n  return {\n    privateKey: mnemonic,\n    address: getAddress(publicKey)\n  }\n}\n\nfunction generateMnemonic(): string {\n  return Bip39.generateMnemonic()\n}\n\nfunction getAddress(publicKey: string): string {\n  let pubKey: Uint8Array\n  if (typeof publicKey === 'string') {\n    pubKey = fromHex(publicKey)\n  } else {\n    pubKey = publicKey\n  }\n  const h1: Uint8Array = sha256Bytes(pubKey)\n  const h2: Uint8Array = new RIPEMD160().update(new Buffer(h1)).digest()\n  return NORMAL_PREFIX + base58Encode(h2)\n}\n\nfunction fromSatoshi(rawAmount: number, precision: number = 8): number {\n  return rawAmount / Math.pow(10, precision)\n}\n\nfunction toSatoshi(amount: number, precision: number = 8): number {\n  return amount * Math.pow(10, precision)\n}\n\nfunction getTime(time: number | undefined = undefined): number {\n  if (time === undefined) {\n    time = new Date().getTime()\n  }\n  const d = EPOCHTIME\n  const t = d.getTime()\n  return Math.floor((time - t) / 1000)\n}\n\nfunction transactionBuilder(params: ObjectType): Transaction {\n  let transaction = {\n    type: params.type,\n    timestamp: getTime() - 5,\n    fee: params.fee,\n    args: params.args,\n    senderPublicKey: params.address,\n    senderId: params.address,\n    signatures: [],\n    secondSecret: params.secondSecret,\n    message: params.message || ''\n  }\n  return transaction\n}\n\nfunction sha256Hex(data: Uint8Array): string {\n  // return Buffer.from(sha256Bytes(data)).toString('hex')\n  // return new Buffer(sha256Bytes(data)).toString('hex')\n  return toHex(sha256Bytes(data))\n}\n\nfunction injectPromise(func: any, ...args: any[]) {\n  return new Promise((resolve, reject) => {\n    func(...args, (err: any, res: any) => {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(res)\n      }\n    })\n  })\n}\n\n// injectPromise(func, ...args) {\n//   return new Promise((resolve, reject) => {\n//       func(...args, (err, res) => {\n//           if(err)\n//               reject(err);\n//           else resolve(res);\n//       });\n//   });\n// },\n\nfunction promiseInjector(scope: any) {\n  return (func: any, ...args: any[]) => {\n    return injectPromise(func.bind(scope), ...args)\n  }\n}\n\nfunction isFunction(obj: any) {\n  return typeof obj === 'function';\n}\n\nexport {\n  fill,\n  sign,\n  secondSign,\n  fullSign,\n  signBytes,\n  getId,\n  fromHex,\n  toHex,\n  verify,\n  verifyBytes,\n  sha256Bytes,\n  isAddress,\n  createAccount,\n  generateMnemonic,\n  getAddress,\n  fromSatoshi,\n  toSatoshi,\n  // transactionBuilder,\n  getTime,\n  getKeys,\n  Format,\n  getHash,\n  injectPromise,\n  promiseInjector,\n  isFunction,\n  ByteBuffer\n}\n","var sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nvar createHmac = require('create-hmac')\nvar checkParameters = require('../lib/precondition')\nvar defaultEncoding = require('../lib/default-encoding')\nvar Buffer = require('safe-buffer').Buffer\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(password, salt, iterations, keylen)\n\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)\n\n  digest = digest || 'sha1'\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = createHmac(digest, password).update(block1).digest()\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = createHmac(digest, password).update(U).digest()\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n","var defaultEncoding\n/* istanbul ignore next */\nif (process.browser) {\n  defaultEncoding = 'utf-8'\n} else {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\n\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\n}\nmodule.exports = defaultEncoding\n","try {\n  var util = require('util');\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  module.exports = require('./inherits_browser.js');\n}\n","// import { assert } from '../util/common'\n// import { Messages } from '../util/messages'\n\nexport const CONTRACT_INITIALIZER_METHOD = '__init__'\nexport interface ParameterMetadata {\n  index: number\n  name: string\n  type: TypeInfo\n  optional: boolean\n}\n\nexport interface TypeInfo {\n  text: string\n  name: string\n  kind: TypeKind\n  typeArguments?: TypeInfo[]\n}\n\nexport enum TypeKind {\n  unknow = -1,\n  primitive = 0,\n  stateCollection = 1,\n  customeState = 2,\n  array = 11,\n  interface = 12\n}\n\nexport interface MethodMetadata {\n  name: string\n  parameters: ParameterMetadata[]\n  returnType?: TypeInfo\n  public: boolean\n  isConstructor?: boolean\n  payable?: boolean\n  defaultPayable?: boolean\n  constant?: boolean\n}\n\nexport interface StateMetadata {\n  name: string\n  public: boolean\n  readonly: boolean\n  type: TypeInfo\n}\n\nexport interface PropertyMetadata {\n  name: string,\n  optional: boolean\n  type: TypeInfo\n}\n\nexport interface ConstVariable {\n  name: string\n  type: TypeInfo\n}\n\nexport interface DataInterface {\n  name: string\n  flat: boolean\n  properties: PropertyMetadata[]\n}\n\nexport interface CustomeStateType {\n  name: string\n  flat: boolean\n  constructorMethod?: MethodMetadata\n  properties: PropertyMetadata[]\n}\n\nexport interface ContractMetadataObject {\n  className: string\n  constVariables: ConstVariable[]\n  dataInterfaces: DataInterface[]\n  customeTypes: CustomeStateType[]\n  states: StateMetadata[]\n  methods: MethodMetadata[]\n}\n\nexport interface ContractMetadata extends ContractMetadataObject {\n  getInterfaceType(name: string): DataInterface | undefined\n  getCustomeType(nane: string): CustomeStateType | undefined\n  getState(name: string): StateMetadata | undefined\n  getMethod(name: string): MethodMetadata | undefined\n  updateMethod(name: string, method: MethodMetadata): void\n  toJSONObject(): ContractMetadataObject\n}\n\nexport class ContractMetadataMananger implements ContractMetadata {\n  private _className = ''\n  private _constVariables = new Map<string, ConstVariable>()\n  private _interfaces = new Map<string, DataInterface>()\n  private _customeTypes = new Map<string, CustomeStateType>()\n  private _states = new Map<string, StateMetadata>()\n  private _methods = new Map<string, MethodMetadata>()\n\n  static fromJSONObject(json: ContractMetadataObject): ContractMetadataMananger {\n    const metadata = new ContractMetadataMananger()\n    metadata._className = json.className\n    json.methods.forEach(m => metadata._methods.set(m.name, m))\n    json.customeTypes.forEach(c => metadata._customeTypes.set(c.name, c))\n    json.states.forEach(s => metadata._states.set(s.name, s))\n    return metadata\n  }\n\n  toJSONObject(): ContractMetadataObject {\n    return {\n      className: this.className,\n      constVariables: this.constVariables,\n      dataInterfaces: this.dataInterfaces,\n      customeTypes: this.customeTypes,\n      states: this.states,\n      methods: this.methods\n    }\n  }\n\n  set className(value: string) {\n    this._className = value\n  }\n\n  get className(): string {\n    return this._className\n  }\n\n  get states(): StateMetadata[] {\n   return Array.from(this._states.values())\n    // return [...this._states.values()]\n  }\n\n  get methods(): MethodMetadata[] {\n    return Array.from(this._methods.values())\n    // return [...this._methods.values()]\n  }\n\n  get customeTypes(): CustomeStateType[] {\n    return Array.from(this._customeTypes.values())\n    // return [...this._customeTypes.values()]\n  }\n\n  get constVariables(): ConstVariable[] {\n    return Array.from(this._constVariables.values())\n    // return [...this._constVariables.values()]\n  }\n\n  get dataInterfaces(): DataInterface[] {\n    return Array.from(this._interfaces.values())\n    // return [...this._interfaces.values()]\n  }\n\n  updateMethod(name: string, method: MethodMetadata) {\n    this._methods.delete(name)\n    this._methods.set(method.name, method)\n  }\n  getCustomeType(name: string): CustomeStateType | undefined {\n    return this._customeTypes.get(name)\n  }\n\n  getInterfaceType(name: string): DataInterface | undefined {\n    return this._interfaces.get(name)\n  }\n\n  getState(name: string): StateMetadata | undefined {\n    return this._states.get(name)\n  }\n\n  getMethod(name: string): MethodMetadata | undefined {\n    return this._methods.get(name)\n  }\n\n  registerConstVariables(variables: ConstVariable[]): void {\n    variables.forEach(variable => {\n    //assert(!this._constVariables.has(variable.name), 'msg.ConstVariableExistsAlready', variable.name)\n\n    this._constVariables.set(variable.name, variable)\n    })\n  }\n\n  registerDataInterface(dataInterface: DataInterface): void {\n    //assert(!this._interfaces.has(dataInterface.name), 'msg.DataInterfaceExistsAlready', dataInterface.name)\n  \n    this._interfaces.set(dataInterface.name, dataInterface)\n  }\n\n  registerState(state: StateMetadata): void {\n    //assert(!this._states.has(state.name), msg.StateExistsAlready, state.name)\n\n    this._states.set(state.name, state)\n  }\n\n  registerCustomeStateType(customeState: CustomeStateType): void {\n    //assert(!this._customeTypes.has(customeState.name), msg.CustomeStateTypeExistsAlready, customeState.name)\n    \n    this._customeTypes.set(customeState.name, customeState)\n  }\n\n  registerContractClass(contract: { className: string, states: StateMetadata[], methods: MethodMetadata[] }): void {\n    this._className = contract.className\n    contract.states.forEach(s => this.registerState(s))\n    contract.methods.forEach(m => this.registerMethod(m))\n  }\n\n  registerMethod(method: MethodMetadata): void {\n    //assert(!this._methods.has(method.name), msg.MethodExistsAlready, method.name)\n    //assert(!method.isConstructor || [...this.methods].every(m => !m.isConstructor), msg.InitializerMethodExistsAlready)\n\n    this._methods.set(method.name, method)\n  }\n\n}","import AschWeb from \"./asch-web\";\n\n// import AschWeb from './asch-web'\n// import { Provider, HTTPProvider, Network } from './providers'\n// import { TransactionBuilder } from './builders'\n// import * as Constants from './constants'\n// import * as Utils from './utils'\n// export * from './type'\n// // export * from './test'\n// const Asch = { AschWeb, Provider, HTTPProvider, Network, TransactionBuilder, Constants, Utils }\n// export { Asch }\n// export default AschWeb \nexport *  from './contract/metadata'\nexport { AschWeb } ","import * as utils from './utils'\nimport AschAPI from './asch-api'\nimport { Transaction, ObjectType } from './type'\nimport { Provider, HTTPProvider, Network } from './providers'\nimport { AschContract } from './asch-contract'\nimport { ContractMetadataObject } from './contract/metadata'\n\nimport { TransactionBuilder } from './builders'\nimport * as Constants from './constants'\nimport * as Utils from './utils'\nimport * as AschType from './type'\n\n\ntype CallbackType = (\n  trx: Transaction\n) => { signatures: string[]; secondSignature?: string; senderPublicKey: string }\n\ntype Callback = (err: any, trx?: Transaction | string) => Transaction | string | undefined\n\nexport default class AschWeb {\n  static Provider = Provider\n  static HTTPProvider = HTTPProvider\n  static Network = Network\n  static TransactionBuilder = TransactionBuilder\n  static Constants = Constants\n  static Utils = Utils\n  static AschType = AschType\n  static AschContract = AschContract\n\n  public defaultAccount: any\n  public secret: string //12个助记词或者私钥\n  public secondSecret: string\n  public readonly publicKey: string\n  public readonly address: string\n  public provider: Provider\n  public api: AschAPI\n  // private injectPromise: any\n\n  constructor(provider: Provider, secret: string, secondSecret: string = '') {\n    this.provider = provider\n    this.secret = secret\n    this.secondSecret = secondSecret\n    this.api = new AschAPI(this)\n    if (secret && secret.length > 0) {\n      let publicKey = Utils.getKeys(secret).publicKey\n      this.publicKey = publicKey\n      let address = Utils.getAddress(publicKey)\n      this.address = address\n      this.defaultAccount = { address: address, publicKey: publicKey }\n    } else {\n      this.publicKey = ''\n      this.address = ''\n      this.defaultAccount = { address: '', publicKey: '' }\n    }\n    // this.injectPromise = Utils.promiseInjector(this)\n  }\n\n  // getHost(): string {\n  //   return this.host\n  // }\n  // setHost(url: string) {\n  //   this.host = url\n  // }\n\n  public setProvider(provider: Provider) {\n    this.provider = provider\n    this.api.provider = provider\n  }\n\n  public setHttpProvider(url: string, net: Network = Network.Test) {\n    let provider = new HTTPProvider(url, net)\n    this.provider = provider\n    this.api.provider = provider\n  }\n\n  public setSecret(secret: string) {\n    this.secret = secret\n  }\n\n  public setSecondSecret(secondSecret: string) {\n    this.secondSecret = secondSecret\n  }\n\n  /**\n   * 所有交易的签名函数\n   * @param unsignedTrx\n   */\n  public fullSign(unsignedTrx: Transaction): Transaction {\n    return Utils.fullSign(unsignedTrx, this.secret, this.secondSecret)\n  }\n\n  public sign(\n    unsignedTrx: Transaction,\n    secret: string = this.secret,\n    secondSecret: string = this.secondSecret,\n    callback?: Callback\n  ) {\n    if (!callback) {\n      let injectPromise: any = Utils.promiseInjector(this)\n      return injectPromise(this.sign, unsignedTrx, secret, secondSecret)\n    }\n    try {\n      const trx: Transaction = Utils.fullSign(unsignedTrx, secret, secondSecret)\n      return callback(null, trx)\n    } catch (ex) {\n      callback(ex)\n    }\n  }\n\n  /**\n   * 对扩展非交易二进制数据进行签名\n   * @param bytes 字节数组或者16进制字符串\n   * @param secret \n   * @param callback \n   */\n  public signBytes(\n    bytes: string | Uint8Array,\n    secret: string = this.secret,\n    callback?: Callback\n  ) {\n    if (!callback) {\n      let injectPromise: any = Utils.promiseInjector(this)\n      return injectPromise(this.signBytes, bytes, secret)\n    }\n    try {\n      const signature: string = Utils.signBytes(bytes, secret)\n      return callback(null, signature)\n    } catch (ex) {\n      callback(ex)\n    }\n  }\n\n\n  // public sign(\n  //   unsignedTrx: Transaction,\n  //   secret: string = this.secret,\n  //   secondSecret: string = this.secondSecret\n  // ): Promise<Transaction>{\n  //   // if (!callback) {\n  //   //   return this.injectPromise(this.sign, unsignedTrx, secret, secondSecret)\n  //   // }\n  //   try {\n  //     const trx: Transaction = Utils.fullSign(unsignedTrx, secret, secondSecret)\n  //     return Promise.resolve(trx)\n  //     //return callback(null, trx)\n  //   } catch (ex) {\n  //     //callback(ex)\n  //     return Promise.reject(ex)\n  //   }\n  // }\n\n\n  /**\n   * 发布智能合约\n   * @param name 智能合约名称，全网唯一，3 ~ 32个字母或数字组成\n   * @param desc 智能合约的描述，长度不超过255的字符串\n   * @param code 智能合约代码，长度不超过16K\n   * @param version 合约引擎版本，目前请填v0.1\n   * @param consumeOwnerEnergy 是否优先消耗合约所有者的能量\n   * @param gasLimit 最大消耗的Gas, 10,000,000 > gasLimit > 0\n   */\n  public registerContract(\n    name: string,\n    desc: string,\n    code: string,\n    version: string = 'v0.1',\n    consumeOwnerEnergy: boolean = true,\n    gasLimit: number = 1000000\n  ): Promise<object> {\n    return this.api.registerContract(name, desc, code, version, consumeOwnerEnergy, gasLimit)\n  }\n\n\n  /**\n   * 从metadata创建合约对象\n   * @param name \n   * @param metadata \n   */\n  public createContractFromJson(contractJson: ObjectType): AschContract {\n    return new AschContract(contractJson, this.api)\n  }\n\n  /**\n   * 从合约名称创建合约对象\n   * @param name\n   */\n  public createContractFromName(name: string): Promise<object> {\n    try {\n      return this.api.getContractDetail(name).then((res: ObjectType) => {\n        if (res && res.contract) {\n          return Promise.resolve(this.createContractFromJson(res.contract))\n        } else {\n          return Promise.reject(`contract get error`)\n        }\n      })\n    } catch (e) {\n      console.log(e)\n      return Promise.reject(e)\n    }\n  }\n}\n","import { API } from './api'\nimport AschWeb from './asch-web'\nimport { TransactionBuilder } from './builders'\nimport { Transaction } from './type'\nimport { ObjectType } from './type'\nimport { URLS } from './constants'\nimport * as Validation from './validation'\n\nexport default class AschAPI extends API {\n  aschWeb: AschWeb\n\n  /**\n   * 构造函数\n   * @param aschWeb AschWeb实例\n   */\n  constructor(aschWeb: AschWeb) {\n    super(aschWeb.provider)\n    this.aschWeb = aschWeb\n  }\n\n  /**\n   * \n   * 以下接口为查询接口\n   * \n   */\n\n  /**\n   * 本地不加密直接登陆\n   * 备注：将密码以明文方式传入到后端，根据生成的地址去查询账户信息。不推荐在公网坏境使用！\n   * @param secret \n   */\n  public async open(secret: string=this.aschWeb.secret): Promise<object>{\n    if(!Validation.checkSecret(secret))\n    {\n      return Promise.reject('param secret is wrong.')\n    }\n    return this.post(URLS.accounts.open, {secret:secret})\n  }\n\n  /**\n   * 本地加密后再登陆（推荐使用）\n   * @param publicKey \n   */\n  public async open2(publicKey: string=this.aschWeb.publicKey): Promise<object>{\n    if(!Validation.checkPublicKey(publicKey))\n    {\n      return Promise.reject('param publicKey is wrong.')\n    }\n    return this.post(URLS.accounts.open2,{publicKey:publicKey})\n  }\n\n  /**\n   * 根据地址获取账户信息\n   * @param address \n   */\n  public async getAccountDetail(address: string=this.aschWeb.address): Promise<object>{\n    if(!Validation.checkAddress(address))\n    {\n      return Promise.reject('param address is wrong.')\n    }\n    return this.get(URLS.v2.accounts.detail.replace(':address', address))\n  }\n\n  /**\n   * 获取账户带宽和CPU等资源抵押信息\n   * @param address 账户地址\n   */\n  public async getPledges(address: string=this.aschWeb.address): Promise<object>{\n    if(!Validation.checkAddress(address))\n    {\n      return Promise.reject('param address is wrong.')\n    }\n    return this.get(URLS.v2.accounts.pledges,{address: address})\n  }\n\n    /**\n   * 获取账户资产余额\n   * @param address 账户地址\n   */\n  public async queryBalances(address: string=this.aschWeb.address): Promise<object>{\n    if(!Validation.checkAddress(address))\n    {\n      return Promise.reject('param address is wrong.')\n    }\n    return this.get(URLS.v2.accounts.balances.replace(':address',address))\n  }\n\n  /**\n   * 根据地址获取其投票列表\n   * @param address 账户地址\n   */\n  public async queryVotedDelegates(address: string): Promise<object>{\n    return this.get(URLS.accounts.deletates_voted, {address: address})\n  }\n\n  /**\n   * 生成新账户\n   */\n  public async generateAccount(): Promise<object>{\n    return this.get(URLS.accounts.new)\n  }\n\n  /**\n   * 获取当前链上账户总个数\n   */\n  public async getAccountCount(): Promise<object>{\n    return this.get(URLS.accounts.count)\n  }\n\n  /**\n   * 获取交易列表\n   * @param offset 偏移量\n   * @param limit 个数限制\n   * @param orderBy 排序方式\n   * @param height 交易所所在高度\n   * @param senderId 交易签名者地址\n   * @param message 交易备注\n   */\n  public async queryTransactions(offset:number=0, limit:number=20, orderBy: string='', height: number=-1, senderId:string='', message:string=''): Promise<object>{\n    let params:ObjectType ={\n      offset:offset,\n      limit:limit\n    }\n    if (orderBy.length>0) {\n      params[orderBy]=orderBy\n    }\n    if (height!=-1) {\n      params[height]=height\n    }\n    if (senderId.length>0) {\n      params[senderId]=senderId\n    }\n    if (message.length>0) {\n      params[message]=message\n    }\n    return this.get(URLS.v2.transactions.list,params)\n  }\n\n  /**\n   *  根据交易id查看交易详情\n   * @param tid \n   */\n  public async getTransactionDetail(tid: string): Promise<object>{\n    return this.get(URLS.v2.transactions.detail.replace(':tid',tid))\n  }\n\n  /**\n   * 根据id查看未确认交易详情\n   * @param tid 交易id\n   */\n  public async getUnconfirmedTransactionDetail(tid: string): Promise<object>{\n    return this.get(URLS.transactions.uncomfirmed_detail,{id:tid})\n  }\n\n  /**\n   * 获取[全网所有]未确认的交易详情\n   * 接口说明：如果不加参数，则会获取全网所有未确认交易\n   * @param senderPublicKey 发送者公钥\n   * @param address 地址\n   */\n  public async queryUnconfirmedTransactions(senderPublicKey: string='', address: string=''): Promise<object>{\n    let params:ObjectType ={\n    }\n    if (senderPublicKey.length>0) {\n      params[senderPublicKey]=senderPublicKey\n    }\n    if (address.length>0) {\n      params[address]=address\n    }\n\n    return this.get(URLS.transactions.uncomfirmed, params)\n  }\n\n  /**\n   * 获取转账记录\n   * @param limit 返回个数限制（默认20）\n   * @param offset 偏移量\n   * @param ownerId 发送/接收者ID\n   * @param currency 币种\n   */\n  public async queryTransfers(offset:number=0, limit: number=20, ownerId:string='', currency:string=''): Promise<object>{\n    let params:ObjectType ={\n      offset:offset,\n      limit:limit,\n    }\n    if (ownerId.length>0) {\n      params[ownerId]=ownerId\n    }\n    if (currency.length>0) {\n      params[currency]=currency\n    }\n    return this.get(URLS.v2.transfers.list,params)\n  }\n\n  /**\n   *  根据区块ID获取指定区块的详情\n   * @param id 区块id\n   */\n  public async getBlockDetailById(id:string): Promise<object>{\n    return this.get(URLS.blocks.detail,{id:id})\n  }\n\n  /**\n   *  根据区块高度获取指定区块的详情\n   * @param height 区块高度\n   */\n  public async getBlockDetailByHeight(height: number): Promise<object>{\n    return this.get(URLS.blocks.detail,{height:height})\n  }\n\n  /**\n   *  根据区块hash获取指定区块的详情\n   * @param hash 区块hash\n   */\n  public async getBlockDetailByHash(hash:string): Promise<object>{\n    return this.get(URLS.blocks.detail,{hash:hash})\n  }\n\n  /**\n   * 获取区块列表\n   * @param limit 个数限制\n   * @param offset 偏移量\n   * @param orderBy height:desc或者height:asc(目前提供的排序方法)\n   */\n  public async queryBlocks(offset: number=0, limit: number=20, orderBy: string='height:desc'): Promise<object>{\n    return this.get(URLS.v2.blocks.list,{\n      offset:offset,\n      limit:limit,\n      orderBy:orderBy\n    })\n  }\n\n  /**\n   *  根据id或高度获取区块详情\n   * @param idOrHeight id或高度\n   */\n  public async getBlockDetailByIdOrHeight(idOrHeight: string): Promise<object>{\n    return this.get(URLS.v2.blocks.detail.replace(':idOrHeight',idOrHeight))\n  }\n\n  /**\n   * 获取区块链高度\n   */\n  public async getBlocksHeight(): Promise<object>{\n    return this.get(URLS.blocks.height)\n  }\n\n  /**\n   * 获取里程碑信息\n   */\n  public async getMilestone(): Promise<object>{\n    return this.get(URLS.blocks.milestone)\n  }\n\n  /**\n   * 查看单个区块奖励\n   */\n  public async getBlockReward(): Promise<object>{\n    return this.get(URLS.blocks.reward)\n  }\n\n  /**\n   * 获取XAS当前供应量\n   */\n  public async getXASSupply(): Promise<object>{\n    return this.get(URLS.blocks.supply)\n  }\n\n  /**\n   * 获取区块链状态\n   */\n  public async getBlockchainStatus(): Promise<object>{\n    return this.get(URLS.blocks.status)\n  }\n\n  /**\n   * 根据区块ID获取指定区块的交易信息\n   * @param id 区块id\n   */\n  public async getBlockFullDetailById(id: string): Promise<object>{\n    return this.get(URLS.blocks.full,{id:id})\n  }\n\n  /**\n   * 根据区块高度获取指定区块的交易信息\n   * @param height 区块高度\n   */\n  public async getBlockFullDetailByHeight(height: number|string): Promise<object>{\n    return this.get(URLS.blocks.full,{height:height})\n  }\n\n  /**\n   * 获取受托人总个数\n   */\n  public async getDelegatesCount(): Promise<object>{\n    return this.get(URLS.delegates.count)\n  }\n\n  /**\n   * 根据受托人名字查看哪些人为其投了票\n   * @param name 受托人名字\n   */\n  public async getVotersOfDelegate(name: string): Promise<object>{\n    return this.get(URLS.delegates.voters,{name:name})\n  }\n\n  // /**\n  //  * 根据公钥获取受托人详情\n  //  * @param publickey 受托人公钥\n  //  */\n  // public async getDelegateDetailByPublickey(publickey: string): Promise<object>{\n  //   return this.get(URLS.delegates.detail,{publickey:publickey})\n  // }\n\n  /**\n   * 根据地址获取受托人详情\n   * @param address 受托人地址\n   */\n  public async getDelegateDetailByAddress(address: string): Promise<object>{\n    return this.get(URLS.delegates.detail,{address:address})\n  }\n\n  /**\n   * 根据用户名获取受托人详情\n   * @param name 受托人用户名\n   */\n  public async getDelegateDetailByName(name: string): Promise<object>{\n    return this.get(URLS.delegates.detail,{name:name})\n  }\n\n  /**\n   * 获取受托人列表\n   * 接口说明：如果不加参数则会返回全网受托人列表\n   * @param offset 偏移量，最小值：0\n   * @param limit 数量\n   * @param orderBy 排序字段:排序规则，如:desc\n   */\n  public async queryDelegates(offset: number=0, limit: number=20, orderBy: string='vote:desc'): Promise<object>{\n    return this.get(URLS.delegates.list,{\n      offset:offset,\n      limit:limit,\n      orderBy:orderBy\n    })\n  }\n\n  /**\n   * 受托人锻造状态查看\n   * @param publicKey 公钥\n   */\n  public async getForgingStatusOfDelegate(publicKey: string): Promise<object>{\n    return this.get(URLS.delegates.forging_status,{publicKey:publicKey})\n  }\n\n  /**\n   * 获取当前节点连接的所有节点信息\n   * 备注：展示节点只是和本机有连接的节点，并不是全网所有的节点\n   * @param limit 数量限制\n   * @param offset 偏移量\n   */\n  public async queryPeers(offset: number=0, limit: number=20): Promise<object>{\n    return this.get(URLS.peers.list,{\n      offset:offset,\n      limit:limit\n    })\n  }\n\n  /**\n   * 获取当前节点版本号等信息\n   */\n  public async getPeerVersion(): Promise<object>{\n    return this.get(URLS.peers.version)\n  }\n\n  /**\n   * 获取指定ip节点信息\n   * @param ip 待查询节点ip\n   * @param port 待查询节点端口，1~65535\n   */\n  public async getPeerDetail(ip: string, port: number): Promise<object>{\n    return this.get(URLS.peers.detail,{ip:ip, port:port})\n  }\n\n  /**\n   * 查看当前节点区块链加载状态\n   */\n  public async getLoaderStatus(): Promise<object>{\n    return this.get(URLS.loder.status)\n  }\n\n  /**\n   * 查看区块同步信息\n   */\n  public async getLoaderStatusSync(): Promise<object>{\n    return this.get(URLS.loder.status_sync)\n  }\n\n  /**\n   * 获取提案列表\n   * @param offset 偏移量\n   * @param limit 数量限制\n   */\n  public async queryProposals(offset: number=0, limit: number=20): Promise<object>{\n    return this.get(URLS.v2.proposals.list,{\n      offset:offset,\n      limit:limit\n    })\n  }\n\n  /**\n   * 根据提案id获取提案详情\n   * @param pid 提案id\n   */\n  public async getProposalDetail(pid: string): Promise<object>{\n    return this.get(URLS.v2.proposals.detail.replace(':id',pid))\n  }\n\n  /**\n   * 获取网关列表\n   * @param offset 偏移量\n   * @param limit 数量限制\n   */\n  public async queryGateways(offset: number=0, limit: number=20): Promise<object>{\n    return this.get(URLS.v2.gateways.list,{\n      offset:offset,\n      limit:limit\n    })\n  }\n\n  /**\n   * 获取指定网关的验证者\n   * @param gateway 网关名字\n   */\n  public async queryValidatorsOfGateway(gateway: string): Promise<object>{\n    return this.get(URLS.v2.gateways.validators.replace(':name',gateway))\n  }\n\n  /**\n   * 获取支持的所有跨链币种\n   */\n  public async queryAllCurrenciesOfGateways(): Promise<object>{\n    return this.get(URLS.v2.gateways.currencies_all)\n  }\n\n  /**\n   * 获取指定网关的支持币种\n   * @param gateway 网关名称\n   */\n  public async queryCurrenciesOfGateway(gateway: string): Promise<object>{\n    return this.get(URLS.v2.gateways.currencies_one.replace(':name',gateway))\n  }\n\n  /**\n   * 获取指定网关的指定账户\n   * @param gateway 网关名字\n   * @param address 账户地址\n   */\n  public async getAccountOfGateway(gateway: string, address: string): Promise<object>{\n    return this.get(URLS.v2.gateways.account_one.replace(':name',gateway).replace(':address',address))\n  }\n\n  /**\n   * 获取指定用户地址的所有网关账户\n   * @param address \n   */\n  public async queryAccountsOfGateway(address: string): Promise<object>{\n    return this.get(URLS.v2.gateways.account_all.replace(':address',address))\n  }\n\n  /**\n   * 获取指定用户地址指定币种的所有充值记录\n   * @param address 账户地址\n   * @param currency 币种\n   */\n  public async querDepositsToGateway(address: string, currency: string): Promise<object>{\n    return this.get(URLS.v2.gateways.deposits.replace(':address',address).replace(':currency',currency))\n  }\n\n  /**\n   * 获取指定用户地址指定币种的所有提现记录\n   * @param address 账户地址\n   * @param currency 币种\n   */\n  public async querWithdrawalsFromGateway(address: string, currency: string): Promise<object>{\n    return this.get(URLS.v2.gateways.withdrawals.replace(':address',address).replace(':currency',currency))\n  }\n\n  /**\n   * 获取所有代理人账户\n   * @param offset 偏移量\n   * @param limit 数量限制\n   */\n  public async queryAgents(offset: number=0, limit: number=20): Promise<object>{\n    return this.get(URLS.v2.agents.list, {\n      offset:offset,\n      limit:limit\n    })\n  }\n\n  /**\n   * 获取某个代理下的委托客户\n   * @param agent 代理人名字\n   */\n  public async queryClientelesOfAgent(agent: string): Promise<object>{\n    return this.get(URLS.v2.agents.clienteles.replace(':name',agent))\n  }\n\n  /**\n   * 获取Group信息\n   * @param address Group地址\n   */\n  public async queryGroups(address: string): Promise<object>{\n    return this.get(URLS.v2.agents.group.replace(':address',address))\n  }\n\n  /**\n   * 获取所有已注册侧链\n   * @param offset 偏移量\n   * @param limit 数量限制\n   */\n  public async querySideChainsRegistered(offset: number=0, limit: number=20): Promise<object>{\n    return this.get(URLS.v2.chains.list,{\n      offset:offset,\n      limit:limit\n    })\n  }\n\n  /**\n   * 获取全网所有发行商\n   * @param offset 偏移量，最小值0\n   * @param limit 限制结果集个数，最小值：0,最大值：100\n   */\n  public async queryIssuers(offset: number=0, limit: number=20): Promise<object>{\n    return this.get(URLS.v2.uia.issuers_list,{\n      offset:offset,\n      limit:limit\n    })\n  }\n\n  /**\n   * 查询指定发行商的信息\n   * @param address 账户地址\n   */\n  public async getIssuerDetail(address: string): Promise<object>{\n    return this.get(URLS.v2.uia.issuers_detail.replace(':address',address))\n  }\n\n  /**\n   * 查看指定发行商的资产\n   * @param address 账户地址\n   * @param offset 偏移量，最小值0\n   * @param limit 限制结果集个数，最小值：0,最大值：100\n   */\n  public async queryAssetsOfIssuer(address: string, offset: number=0, limit: number=20): Promise<object>{\n    return this.get(URLS.v2.uia.assets_one.replace(':address',address),{\n      offset:offset,\n      limit:limit\n    })\n  }\n\n  /**\n   * 获取全网所有资产信息\n   * @param limit 限制结果集个数，最小值：0,最大值：100\n   * @param offset 偏移量，最小值0\n   */\n  public async querAllAssets(offset: number=0, limit: number=20): Promise<object>{\n    return this.get(URLS.v2.uia.assets_all,{\n      offset:offset,\n      limit:limit\n    })\n  }\n\n  /**\n   * 获取指定资产信息\n   * @param currency 资产名\n   */\n  public async getAssetDetail(currency: string): Promise<object>{\n    return this.get(URLS.v2.uia.assets_detail.replace(':name',currency))\n  }\n\n  /**\n   * 获取指定账户所有uia的余额\n   * @param address 账户地址\n   * @param offset 偏移量，最小值0\n   * @param limit 限制结果集个数，最小值：0,最大值：100\n   */\n  public async queryAssetBalances(address: string, offset: number=0, limit: number=20): Promise<object>{\n    return this.get(URLS.v2.uia.balances.replace(':address',address),{\n      offset:offset,\n      limit:limit\n    })\n  }\n\n  /**\n   * 查询智能合约列表\n   * @param name 合约名称\n   * @param ownerId 创建人地址\n   * @param address 合约地址\n   * @param offset 偏移量，最小值0\n   * @param limit 限制结果集个数，最小值：0,最大值：100\n   */\n  public async queryContracts(name:string='',ownerId:string='', address: string='',offset: number=0, limit: number=20): Promise<object>{\n    let params:ObjectType ={\n      offset:offset,\n      limit:limit,\n    }\n    if (name.length>0) {\n      params[name]=name\n    }\n    if (ownerId.length>0) {\n      params[ownerId]=ownerId\n    }\n    if (address.length>0) {\n      params[address]=address\n    }\n    return this.get(URLS.v2.contracts.list,params)\n  }\n\n  /**\n   * 查询智能合约详细信息\n   * @param name 合约名称\n   */\n  public async getContractDetail(name: string): Promise<object>{\n    return this.get(URLS.v2.contracts.detail.replace(':name',name))\n  }\n\n  /**\n   * 查询智能合约代码\n   * @param name 合约名称\n   */\n  public async getCodeOfContract(name: string): Promise<object>{\n    return this.get(URLS.v2.contracts.code.replace(':name',name))\n  }\n\n  /**\n   * 查询智能合约元数据\n   * @param name 合约名称\n   */\n  public async getMetadataOfContract(name: string): Promise<object>{\n    return this.get(URLS.v2.contracts.metadata.replace(':name',name))\n  }\n\n  /**\n   * 查询智能合约公开状态\n   * @param name 合约名称\n   * @param path 状态的路径，状态路径是用'.'号分隔的一个字符串，表示要查询的状态所在的合约对象的位置。\n   * 如：\n   * 'amount'表示查询合约的amount属性，\n   * 'payments.0'表示payments对象的第0个元素，\n   * 'paymentOfAddress.ABuH9VHV3cFi9UKzcHXGMPGnSC4QqT2cZ5'表示合约的paymentOfAddress['ABuH9VHV3cFi9UKzcHXGMPGnSC4QqT2cZ5']。\n   * 以此类推\n   * \n   * ~~~\n   * 需要注意的是，该方法仅可查询公开的简单属性的值，否则会失败。\n   * 如amount是private的则查询会失败。如paymentOfAddress的类型是Mapping<Payment>这种复杂类型，查询也会失败。\n   * 如需实现更复杂的查询，请参考智能合约开发文档，使用查询方法\n   * ~~~\n   * \n   */\n  public async queryStatesOfContract(name: string, path:string): Promise<object>{\n    return this.get(URLS.v2.contracts.states.replace(':name',name).replace(':path',path))\n  }\n\n  /**\n   * 查询智能合约执行结果\n   * @param name 合约名称\n   * @param tid 执行合约的交易Id\n   */\n  public async getResultOfContract(name: string, tid: string): Promise<object>{\n    return this.get(URLS.v2.contracts.results.replace(':name',name).replace(':tid',tid))\n  }\n\n  /**\n   * 调用查询方法\n   * @param name 合约名称\n   * @param method 查询方法名称\n   * @param args 查询方法参数数组，以json形式放在请求的body中。查询方法参数必须是数组，如果没有参数请使用空数组\n   */\n  public async callConstantMethod(name: string, method: string, ...args: Array<any>): Promise<object>{\n    // console.log('callConstantMethod:'+JSON.stringify(args))\n    return this.post(URLS.v2.contracts.constants_method.replace(':name',name).replace(':method',method),args)\n  }\n\n  /**\n   * \n   * 以下接口为事务接口\n   * \n  */\n\n  /**\n   * 主链转账XAS\n   * @param amount 转账数量\n   * @param recipientId 接收者地址\n   * @param message 转账备注 \n   */\n  public async transferXAS(amount: number, recipientId: string, message: string=''): Promise<object> {\n    let trx: Transaction = TransactionBuilder.transferXAS(amount, recipientId, message)\n    trx = await this.aschWeb.sign(trx)\n    //console.log('+++++transaction:' + JSON.stringify(trx))\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 设置昵称\n   * @param name 昵称\n   */\n  public async setName(name: string): Promise<object> {\n    let trx: Transaction = TransactionBuilder.setName(name)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 设置二级密码\n   * @param secondPwd 二级密码\n   */\n  public async setSecondPassword(secondPwd: string): Promise<object> {\n    let trx: Transaction = TransactionBuilder.setSecondPassword(secondPwd)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 锁仓\n   * @param height 锁仓高度\n   * @param amount 锁仓XAS数量\n   */\n  public async setLock(height: number, amount: number): Promise<object> {\n    let trx: Transaction = TransactionBuilder.setLock(height, amount)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 解锁\n   */\n  public async unlock(): Promise<object> {\n    let trx: Transaction = TransactionBuilder.unlock()\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 设置理事会\n   * @param name 理事会名称\n   * @param members 成员组\n   * @param min 最少决策数(最少为3)\n   * @param max 最多决策数\n   * @param m 决策权值最小值\n   * @param updateInterval 更新间隔\n   */\n  public async setCouncil(name: string,members: Array<any>, min: number ,max: number ,m: number ,updateInterval :number): Promise<object> {\n    let trx: Transaction = TransactionBuilder.setCouncil(name,members,min,max,m,updateInterval)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 注册代理人\n   */\n  public async registerAgent(): Promise<object> {\n    let trx: Transaction = TransactionBuilder.registerAgent()\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 设置投票代理人\n   * @param agent 代理人昵称\n   */\n  public async setAgent(agent: string): Promise<object> {\n    let trx: Transaction = TransactionBuilder.setAgent(agent)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 取消投票代理\n   */\n  public async repealAgent(): Promise<object> {\n    let trx: Transaction = TransactionBuilder.repealAgent()\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 注册为受托人\n   */\n  public async registerDelegate(): Promise<object> {\n    let trx: Transaction = TransactionBuilder.registerDelegate()\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 给委托人投票\n   * @param delegates 受托人昵称数组,最多33个\n   */\n  public async voteDelegates(delegates: string[]): Promise<object> {\n    let trx: Transaction = TransactionBuilder.voteDelegates(delegates)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 撤销受托人投票\n   * @param delegates 受托人昵称数组,最多33个\n   */\n  public async cleanVote(delegates: string[]): Promise<object> {\n    let trx: Transaction = TransactionBuilder.cleanVote(delegates)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 带宽和CPU抵押\n   * @param bandwidth 带宽抵押的XAS数量\n   * @param cpu CPU抵押的XAS数量\n   */\n  public async pledge(bandwidth: string|number, cpu: string|number): Promise<object> {\n    let trx: Transaction = TransactionBuilder.pledge(bandwidth,cpu)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 取消带宽和CPU抵押\n   * @param bandwidth 取消带宽抵押的XAS数量\n   * @param cpu 取消CPU抵押的XAS数量\n   */\n  public async unPledge(bandwidth: string|number, cpu: string|number): Promise<object> {\n    let trx: Transaction = TransactionBuilder.unPledge(bandwidth,cpu)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 注册发行商\n   * @param name 发行商名称\n   * @param desc 描述\n   */\n  public async registerIssuer(name: string, desc: string): Promise<object> {\n    let trx: Transaction = TransactionBuilder.registerIssuer(name, desc)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 注册资产\n   * @param symbol 资产名称\n   * @param desc 描述\n   * @param maximum 上限\n   * @param precision 精度\n   */\n  public async registerAsset(\n    symbol: string,\n    desc: string,\n    maximum: number,\n    precision: number\n  ): Promise<object> {\n    let trx: Transaction = TransactionBuilder.registerAsset(symbol, desc, maximum, precision)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 发行资产\n   * @param symbol 资产名称\n   * @param amount 发行数量\n   */\n  public async issueAsset(symbol: string, amount: string): Promise<object> {\n    let trx: Transaction = TransactionBuilder.issueAsset(symbol, amount)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 资产转账(内部转账)\n   * @param symbol 资产名称\n   * @param amount 数量\n   * @param recipientId 接收人地址\n   * @param message 备注\n   */\n  public async transferAsset(\n    symbol: string,\n    amount: string,\n    recipientId: string,\n    message: string=''\n  ): Promise<object> {\n    let trx: Transaction = TransactionBuilder.transferAsset(symbol, amount, recipientId, message)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 注册侧链DApp\n   * @param name dapp名称\n   * @param desc 描述\n   * @param tags 标签\n   * @param link 链接\n   * @param icon 图标\n   * @param delegates 委托人\n   * @param nlockNumber 最小受托人数量\n   */\n  public async registerDapp(\n    name: string,\n    desc: string,\n    link: string,\n    icon: string,\n    delegates: number,\n    nlockNumber: number\n  ): Promise<object> {\n    let trx: Transaction = TransactionBuilder.registerDapp(\n      name,\n      desc,\n      link,\n      icon,\n      delegates,\n      nlockNumber\n    )\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 更新Dapp委托人\n   * @param dappId Dapp ID\n   * @param from 旧的记账人公钥\n   * @param to  新的记账人公钥\n   */\n  public async updateBooker(dappId: string, from: string, to: string): Promise<object> {\n    let trx: Transaction = TransactionBuilder.updateBooker(dappId, from, to)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 添加Dapp委托人\n   * @param dappId Dapp ID\n   * @param key 委托人公钥\n   */\n  public async addBooker(dappId: string, key: string): Promise<object> {\n    let trx: Transaction = TransactionBuilder.addBooker(dappId, key)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 删除Dapp委托人\n   * @param dappId Dapp ID\n   * @param key 委托人公钥\n   */\n  public async deleteBooker(dappId: string, key: string): Promise<object> {\n    let trx: Transaction = TransactionBuilder.deleteBooker(dappId, key)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 充值到侧链DApp\n   * @param dappId  Dapp ID\n   * @param currency 资产名称\n   * @param amount 数量\n   */\n  public async depositDapp(dappId: string, currency: string, amount: string): Promise<object> {\n    let trx: Transaction = TransactionBuilder.depositDapp(dappId, currency, amount)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n  \n  /**\n   * 从Dapp提现 \n   * @param dappId Dapp ID\n   * @param recipient 接受者地址\n   * @param currency 资产名\n   * @param amount 提现金额\n   * @param oid \n   * @param signatures \n   */\n  public async withdrawDapp(\n    dappId: string,\n    recipient: string,\n    currency: string,\n    amount: string,\n    oid: string,\n    signatures: string\n  ): Promise<object> {\n    let trx: Transaction = TransactionBuilder.withdrawDapp(\n      dappId,\n      recipient,\n      currency,\n      amount,\n      oid,\n      signatures\n    )\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 发起提案\n   * @param title 提案标题\n   * @param desc 描述\n   * @param topic 提案类型\n   * @param content 内容\n   * @param endHeight 提案结束高度\n   * ~~~\n   * 对不同提案类型给出不同的参数\n   * 1.新增网关\n   * //提案类型\n   * let topic = 'gateway_register'\n   * //下面构造content,对于新增网关提案，需要提供提案的名称，描述，最少成员，更新间隔，资产信息等\n   * let name = 'aschCoin'   //3-16位大小写字母数字\n   * let desc = 'test the gateway register'\n   * let minimumMembers = 3      //网关最少成员数，这个数值的范围应当在3-33之间的整数，\n   * let updateInterval = 8640   //更新频率，这个值应当是大于8640的\n   * let symbol = 'TEC'   //比如发行的币叫TEC\n   * let currencyDesc = 'some describes of currency'    //资产描述\n   * let precision = 1      //资产精度\n   * let currency = {symbol:symbol,\n   *            desc:currencyDesc,\n   *           precision:precision}\n   * //下面构造这个content\n   * let content = {name:name,\n   *           desc:desc,\n   *           minimumMembers:minimumMembers,\n   *           updateInterval:updateInterval,\n   *           currency:currency}\n   * 2. 网关初始化\n   * //提案类型\n   * let topic = 'gateway_init'\n   * //下面构造content\n   * let gateway = 'bitcoin'     //网关的名字\n   * let members = [             //初始网关的成员\n   * 'A5eTVn2Mz5p2j6SjGKdgvmUc2vMsSvKzuy',\n   * 'A3SmW61ZwxmNc26BbfKLbHkaNbmUQzexuj',\n   * 'A4ncaYtKRrD8YS2Mi82HbwGEE9DxqsbEr9']\n   * //下面构造这个content\n   * let content = {gateway:gateway,\n   *            members:members\n   *          }\n   * \n   * 3.更新网关成员\n   * //提案类型\n   * let topic = 'gateway_update_member'\n   * //下面构造content\n   * let gateway = 'bitcoin'     //网关的名字\n   * let from = 'A3SmW61ZwxmNc26BbfKLbHkaNbmUQzexuj'   //要撤销的成员地址\n   * let to = 'A7w7Rx5bCerJFbfG5BKdQ77bPqfWeyrmgJ'     //要添加的成员地址\n   * //下面构造这个content\n   * let content = {gateway:gateway, from:from, to:to}\n   * \n   * 4.网关撤销\n   * //提案类型\n   * let topic = 'gateway_revoke'     //这个参数较少，只需要网关的名字即可\n   * //下面构造content\n   * let gateway = 'bitcoin'     //网关的名字\n   * //下面构造这个content\n   * let content = {gateway:gateway}\n   * \n   * ~~~\n   */\n  public async createProposal(\n    title: string,\n    desc: string,\n    topic: string,\n    content: string,\n    endHeight: number\n  ): Promise<object> {\n    let trx: Transaction = TransactionBuilder.createProposal(title, desc, topic, content, endHeight)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 给提案投票\n   * @param pid 提案的编号\n   */\n  public async voteProposal(pid: string): Promise<object> {\n    let trx: Transaction = TransactionBuilder.voteProposal(pid)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 激活提案\n   * @param pid 提案的编号\n   */\n  public async activateProposal(pid: string): Promise<object> {\n    let trx: Transaction = TransactionBuilder.activateProposal(pid)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 网关注册成员\n   * @param gateway 网关名字\n   * @param publicKey 成员公钥\n   * @param desc 描述\n   */\n  public async registerGateway(gateway: string, publicKey: string, desc: string): Promise<object> {\n    let trx: Transaction = TransactionBuilder.registerGateway(gateway, publicKey, desc)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n  \n  /**\n   * 开通网关账户\n   * @param gateway 网关的名字\n   */\n  public async openGatewayAccount(gateway: string): Promise<object> {\n    let trx: Transaction = TransactionBuilder.openGatewayAccount(gateway)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 对网关充值\n   * @param gateway 网关名字\n   * @param address 存款地址\n   * @param currency 资产名称\n   * @param amount 数量\n   * @param oid \n   */\n  public async depositGateway(gateway:string, address: string, currency: string, amount: string, oid: string): Promise<object> {\n    let trx: Transaction = TransactionBuilder.depositGateway(gateway,address, currency, amount, oid)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 从网关提现\n   * @param address 提现地址\n   * @param gateway 网关名字\n   * @param currency 资产名称\n   * @param amount 数量\n   * @param fee 手续费\n   */\n  public async withdrawGateway(\n    address: string,\n    gateway: string,\n    currency: string,\n    amount: number,\n    fee: number\n  ): Promise<object> {\n    let trx: Transaction = TransactionBuilder.withdrawGateway(\n      address,\n      gateway,\n      currency,\n      amount,\n      fee\n    )\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 为理事会投票\n   * @param targetId 目标ID\n   */\n  public async voteForCouncil(targetId: string): Promise<object> {\n    let trx: Transaction = TransactionBuilder.voteForCouncil(targetId)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 激活理事会\n   * @param targetId 目标ID\n   */\n  public async activCouncil(targetId: string): Promise<object> {\n    let trx: Transaction = TransactionBuilder.activCouncil(targetId)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 增加理事会成员\n   * @param address 成员地址\n   * @param weight 权重\n   * @param m \n   */\n  public async addMemberToCouncil(address: string, weight: string, m: number): Promise<object> {\n    let trx: Transaction = TransactionBuilder.addMemberToCouncil(address,weight,m)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 移除理事会成员\n   * @param address 成员地址\n   * @param m \n   */\n  public async removeMemberFromCouncil(address: string, m: number): Promise<object> {\n    let trx: Transaction = TransactionBuilder.removeMemberFromCouncil(address,m)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n    /**\n   * 置换理事会成员\n   * @param from 将被替换成员\n   * @param to 新来成员\n   * @param weight 权重\n   * @param m \n   */\n  public async replaceMemberFromCouncil(from: string, to: string, weight: string, m: number): Promise<object> {\n    let trx: Transaction = TransactionBuilder.replaceMemberFromCouncil(from, to, weight, m)\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n\n  /**\n   * 注册合约\n   * @param name 智能合约名称，全网唯一，3 ~ 32个字母或数字组成\n   * @param desc 智能合约的描述，长度不超过255的字符串\n   * @param code 智能合约代码，长度不超过16K\n   * @param version 合约引擎版本，目前请填v0.1\n   * @param consumeOwnerEnergy 是否优先消耗合约所有者的能量\n   * @param gasLimit 最大消耗的Gas, 10,000,000 > gasLimit > 0\n   */\n  public async registerContract(\n    name: string,\n    desc: string,\n    code: string,\n    version: string='v0.1',\n    consumeOwnerEnergy: boolean=true,\n    gasLimit: number=1000000\n  ): Promise<object> {\n    let trx: Transaction =TransactionBuilder.registerContract(\n      name,\n      version,\n      desc,\n      code,\n      consumeOwnerEnergy,\n      gasLimit\n    )\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 调用合约方法\n   * @param contractName 智能合约名称\n   * @param methodName 要调用的方法名称\n   * @param methodArgs 调用方法所需要的参数列表\n   * @param gasLimit 最大消耗的Gas, 10,000,000 > gasLimit > 0\n   * @param enablePayGasInXAS 当调用者能量不足时，是否使用XAS支付Gas\n   */\n  public async callContract(\n    contractName: string,\n    methodName: string,\n    methodArgs: Array<any>,\n    gasLimit: number=100000,\n    enablePayGasInXAS: boolean=true\n  ): Promise<object> {\n    let trx: Transaction =TransactionBuilder.callContract(\n      contractName,\n      methodName,\n      methodArgs,\n      gasLimit,\n      enablePayGasInXAS\n    )\n    trx = await this.aschWeb.sign(trx)\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 合约默认接收方法\n   * @param currency 转账资产名称\n   * @param amount 转账金额\n   * @param nameOrAddress 合约名称或者地址\n   * @param gasLimit 最大消耗的Gas, 10,000,000 > gasLimit > 0\n   * @param enablePayGasInXAS 当调用者能量不足时，是否使用XAS支付Gas\n   */\n  public async payDefaultContract(\n    currency: string,\n    amount: number|string,\n    nameOrAddress: string,\n    gasLimit: number=100000,\n    enablePayGasInXAS: boolean=true\n  ): Promise<object> {\n    let trx: Transaction =TransactionBuilder.payContract(\n      currency,\n      amount,\n      [],\n      nameOrAddress,\n      '',\n      gasLimit,\n      enablePayGasInXAS)\n    trx = await this.aschWeb.sign(trx)\n    console.log('payContract:'+JSON.stringify(trx))\n    return this.broadcastTransaction(trx)\n  }\n\n  /**\n   * 转账到合约\n   * @param currency 转账资产名称\n   * @param amount 转账金额\n   * @param extraArgs 额外参数\n   * @param nameOrAddress 合约名称或者地址\n   * @param methodName payable方法名称, 若为undefined, null或者''，则调用默认的payable方法\n   * @param gasLimit 最大消耗的Gas, 10,000,000 > gasLimit > 0\n   * @param enablePayGasInXAS 当调用者能量不足时，是否使用XAS支付Gas\n   */\n  public async payContract(\n    currency: string,\n    amount: number|string,\n    extraArgs: Array<any>,\n    nameOrAddress: string,\n    methodName:string,\n    gasLimit: number=100000,\n    enablePayGasInXAS: boolean=true\n  ): Promise<object> {\n    let trx: Transaction =TransactionBuilder.payContract(\n      currency,\n      amount,\n      extraArgs,\n      nameOrAddress,\n      methodName,\n      gasLimit,\n      enablePayGasInXAS)\n    trx = await this.aschWeb.sign(trx)\n    console.log('payContract:'+JSON.stringify(trx))\n    return this.broadcastTransaction(trx)\n  }\n}\n","import { Network, Provider, HTTPProvider, AutoProvider } from './providers'\nimport { ObjectType } from './type'\nimport { Transaction } from './type'\n\nexport class API {\n  _provider: Provider\n\n  /**\n   * 构造函数\n   * @param p provider\n   */\n  constructor(p: Provider | string) {\n    if (typeof p === 'string') {\n      this._provider = new HTTPProvider(p, Network.Test)\n    } else {\n      this._provider = p\n    }\n    this.connect()\n  }\n\n  get provider() {\n    return this._provider\n  }\n\n  set provider(p: Provider) {\n    this._provider = p\n  }\n\n  public isConnected(): boolean {\n    return true\n  }\n\n  public useHttpProvider(url: string) {\n    this._provider = new HTTPProvider(url)\n  }\n\n  public useAutoProvider() {\n    this._provider = new AutoProvider()\n  }\n\n  public broadcastTransaction(trx: Transaction) {\n    return this._provider.post(`/peer/transactions`, {\n      transaction: trx\n    })\n  }\n\n  public get(uri: string, params?: object): Promise<object> {\n    return this._provider.get(uri, params)\n  }\n\n  public post(uri: string, params: object): Promise<object> {\n    return this._provider.post(uri, params)\n  }\n\n  public contract(name: string): Promise<object> {\n    return this._provider.get(`/contracts/${name}`, {})\n  }\n\n  private connect() {\n    return true\n  }\n}\n","import Axios, { AxiosRequestConfig, AxiosResponse } from 'axios'\nimport { AxiosInstance, AxiosPromise } from 'axios'\nimport { ObjectType } from '../type'\nimport { Provider, Network } from './provider'\nimport { LOCAL_NET_MAGIC, TEST_NET_MAGIC, MAIN_NET_MAGIC } from '../constants'\nexport class HTTPProvider extends Provider {\n  _url: string\n  _timeout: number\n  _net?: Network\n  _instance: AxiosInstance\n\n  constructor(url: string, net?: Network, timeout: number = 30000) {\n    super()\n    url = url.replace(/\\/+$/, '')\n\n    this._url = url\n    this._timeout = timeout\n    if (net == null) {\n      this._net = Network.Test\n    }\n    this._net = net\n    this._instance = Axios.create({\n      baseURL: url,\n      timeout: timeout,\n      headers: this.headerForNet(net)\n    })\n    //debug log\n    this.addLogger(this._instance)\n  }\n\n  headerForNet(net?: Network): ObjectType {\n    return {\n      magic:\n        net == Network.Main\n          ? MAIN_NET_MAGIC\n          : net == Network.Test\n            ? TEST_NET_MAGIC\n            : LOCAL_NET_MAGIC,\n      version: '',\n      'Content-Type': 'application/json'\n    }\n  }\n\n  /**\n   * 添加loger\n   * @param instance \n   */\n  addLogger(instance: AxiosInstance) {\n    instance.interceptors.request.use(function (config: AxiosRequestConfig) {\n      console.debug((config.method ? config.method.toUpperCase() : 'unknow method') + ' ' + config.url)\n      console.debug('headers: ' + JSON.stringify(config.headers))\n      console.debug('data: ' + JSON.stringify(config.data))\n      return config\n    })\n    instance.interceptors.response.use(function (response: AxiosResponse) {\n      let config: AxiosRequestConfig = response.config\n      console.debug(\n        response.status + ' ' + response.statusText,\n        '(' + (config && config.method ? config.method.toUpperCase() : 'unknow method' )+ ' ' + response.config.url + ')'\n      )\n      return response\n    }, function (error) {\n      if (error.config) {\n        console.debug(\n          error.name + ': ' + error.message,\n          '(' + error.config.method.toUpperCase() + ' ' + error.config.url + ')'\n        )\n      } else {\n        console.debug(error.name + ': ' + error.message)\n      }\n      throw error\n    })\n  }\n\n  json2url(json: any) {\n    let arr: string[] = []\n    let str = ''\n    for (let i in json) {\n      str = i + '=' + json[i]\n      arr.push(str)\n    }\n    return arr.join('&')\n  }\n\n  request(\n    url: string,\n    data: ObjectType = {},\n    method: string = 'get',\n    postHeaders: ObjectType = {}\n  ): Promise<object> {\n\n    for (let k in data) {\n      if (url.indexOf(':' + k) !== -1) {\n        url = url.replace(':' + k, data[k])\n        delete data[k]\n      }\n    }\n\n    method = method.toLowerCase()\n    if (method === 'get') {\n      let params = this.json2url(data)\n      return this._instance\n        .get(params && params.length > 0 ? url + '?' + params : url)\n        .then(({ data }: ObjectType) => data)\n    } else if (method === 'post') {\n      return this._instance.post(url, data, postHeaders).then(({ data }: ObjectType) => data)\n    } else if (method === 'put') {\n      return this._instance.put(url, data, postHeaders).then(({ data }: ObjectType) => data)\n    }\n    return Promise.reject('has not been implement the method')\n  }\n\n  get(uri: string, params?: ObjectType): Promise<object> {\n    return this.request(uri, params)\n  }\n\n  post(uri: string, params: ObjectType, headers?: ObjectType): Promise<object> {\n    return this.request(uri, params, 'post', headers)\n  }\n\n  async isConnected(statusPage: string = '/') {\n    return this.request(statusPage)\n      .then(() => {\n        // return utils.hasProperties(data, 'blockID', 'block_header')\n        return true\n      })\n      .catch(() => false)\n  }\n}\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n","'use strict';\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar http = require('http');\nvar https = require('https');\nvar httpFollow = require('follow-redirects').http;\nvar httpsFollow = require('follow-redirects').https;\nvar url = require('url');\nvar zlib = require('zlib');\nvar pkg = require('./../../package.json');\nvar createError = require('../core/createError');\nvar enhanceError = require('../core/enhanceError');\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolve, reject) {\n    var data = config.data;\n    var headers = config.headers;\n    var timer;\n\n    // Set User-Agent (required by some servers)\n    // Only set header if it hasn't been set in config\n    // See https://github.com/axios/axios/issues/69\n    if (!headers['User-Agent'] && !headers['user-agent']) {\n      headers['User-Agent'] = 'axios/' + pkg.version;\n    }\n\n    if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = new Buffer(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = new Buffer(data, 'utf-8');\n      } else {\n        return reject(createError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers['Content-Length'] = data.length;\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var parsed = url.parse(config.url);\n    var protocol = parsed.protocol || 'http:';\n\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    if (auth) {\n      delete headers.Authorization;\n    }\n\n    var isHttps = protocol === 'https:';\n    var agent = isHttps ? config.httpsAgent : config.httpAgent;\n\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method,\n      headers: headers,\n      agent: agent,\n      auth: auth\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        proxy = {\n          host: parsedProxyUrl.hostname,\n          port: parsedProxyUrl.port\n        };\n\n        if (parsedProxyUrl.auth) {\n          var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n          proxy.auth = {\n            username: proxyUrlAuth[0],\n            password: proxyUrlAuth[1]\n          };\n        }\n      }\n    }\n\n    if (proxy) {\n      options.hostname = proxy.host;\n      options.host = proxy.host;\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      options.port = proxy.port;\n      options.path = protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path;\n\n      // Basic proxy authorization\n      if (proxy.auth) {\n        var base64 = new Buffer(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n        options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n      }\n    }\n\n    var transport;\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttps ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      transport = isHttps ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxContentLength && config.maxContentLength > -1) {\n      options.maxBodyLength = config.maxContentLength;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // Response has been received so kill timer that handles request timeout\n      clearTimeout(timer);\n      timer = null;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n      switch (res.headers['content-encoding']) {\n      /*eslint default-case:0*/\n      case 'gzip':\n      case 'compress':\n      case 'deflate':\n        // add the unzipper to the body stream processing pipeline\n        stream = stream.pipe(zlib.createUnzip());\n\n        // remove the content-encoding in order to not confuse downstream operations\n        delete res.headers['content-encoding'];\n        break;\n      }\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && Buffer.concat(responseBuffer).length > config.maxContentLength) {\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              config, null, lastRequest));\n          }\n        });\n\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(enhanceError(err, config, null, lastRequest));\n        });\n\n        stream.on('end', function handleStreamEnd() {\n          var responseData = Buffer.concat(responseBuffer);\n          if (config.responseType !== 'arraybuffer') {\n            responseData = responseData.toString('utf8');\n          }\n\n          response.data = responseData;\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      if (req.aborted) return;\n      reject(enhanceError(err, config, null, req));\n    });\n\n    // Handle request timeout\n    if (config.timeout && !timer) {\n      timer = setTimeout(function handleRequestTimeout() {\n        req.abort();\n        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', req));\n      }, config.timeout);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (req.aborted) return;\n\n        req.abort();\n        reject(cancel);\n      });\n    }\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};\n","module.exports = require(\"assert\");","\"use strict\";\n\n/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n\n","\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};\n\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\-?\\d?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\"use strict\";\n\n/**\n * Module dependencies.\n */\nvar tty = require('tty');\n\nvar util = require('util');\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n  // Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n  // eslint-disable-next-line import/no-extraneous-dependencies\n  var supportsColor = require('supports-color');\n\n  if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n    exports.colors = [20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134, 135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 220, 221];\n  }\n} catch (error) {} // Swallow - we only care if `supports-color` is available; it doesn't have to be.\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // Camel-case\n  var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function (_, k) {\n    return k.toUpperCase();\n  }); // Coerce string value into JS value\n\n  var val = process.env[key];\n\n  if (/^(yes|on|true|enabled)$/i.test(val)) {\n    val = true;\n  } else if (/^(no|off|false|disabled)$/i.test(val)) {\n    val = false;\n  } else if (val === 'null') {\n    val = null;\n  } else {\n    val = Number(val);\n  }\n\n  obj[prop] = val;\n  return obj;\n}, {});\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);\n}\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var name = this.namespace,\n      useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var colorCode = \"\\x1B[3\" + (c < 8 ? c : '8;5;' + c);\n    var prefix = \"  \".concat(colorCode, \";1m\").concat(name, \" \\x1B[0m\");\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + \"\\x1B[0m\");\n  } else {\n    args[0] = getDate() + name + ' ' + args[0];\n  }\n}\n\nfunction getDate() {\n  if (exports.inspectOpts.hideDate) {\n    return '';\n  }\n\n  return new Date().toISOString() + ' ';\n}\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\n\nfunction log() {\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  if (namespaces) {\n    process.env.DEBUG = namespaces;\n  } else {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  return process.env.DEBUG;\n}\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\n\nfunction init(debug) {\n  debug.inspectOpts = {};\n  var keys = Object.keys(exports.inspectOpts);\n\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts).replace(/\\s*\\n\\s*/g, ' ');\n};\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\n\nformatters.O = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n","module.exports = require(\"tty\");","'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n","module.exports = require(\"os\");","'use strict';\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n","module.exports = require(\"zlib\");","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","export class AutoProvider {\n  get: any\n  post: any\n}\n","import { ObjectType, Transaction } from './type'\n\nlet feeFuncMap: { [index: number]: any } = {\n  1: function(trs: Transaction): number {\n    return 0.1\n  },\n  2: function(trs: Transaction): number {\n    var len = trs.args[0].length\n    if (len === 2) {\n      return 200\n    } else if (len === 3) {\n      return 100\n    } else if (len === 4) {\n      return 80\n    } else if (len === 5) {\n      return 40\n    } else if (len <= 10) {\n      return 10\n    } else {\n      return 1\n    }\n  },\n  3: function(trs: Transaction): number {\n    return 5\n  },\n  4: function(trs: Transaction): number {\n    return 0.1\n  },\n  5: function(trs: Transaction): number {\n    return 0\n  },\n  6: function(trs: Transaction): number {\n    return 5\n  },\n  7: function(trs: Transaction): number {\n    return 100\n  },\n  8: function(trs: Transaction): number {\n    return 0.1\n  },\n  9: function(trs: Transaction): number {\n    return 0\n  },\n  10: function(trs: Transaction): number {\n    return 100\n  },\n  11: function(trs: Transaction): number {\n    return 0.1\n  },\n  12: function(trs: Transaction): number {\n    return 0.1\n  },\n  13: function(trs: Transaction): number {\n    return 0.1\n  },\n  14: function(trs: Transaction): number {\n    return 0\n  },\n  100: function(trs: Transaction): number {\n    return 100\n  },\n  101: function(trs: Transaction): number {\n    return 500\n  },\n  102: function(trs: Transaction): number {\n    return 0.1\n  },\n  103: function(trs: Transaction): number {\n    return 0.1\n  },\n  200: function(trs: Transaction): number {\n    return 100\n  },\n  201: function(trs: Transaction): number {\n    return 1\n  },\n  202: function(trs: Transaction): number {\n    return 1\n  },\n  203: function(trs: Transaction): number {\n    return 1\n  },\n  204: function(trs: Transaction): number {\n    return 0.1\n  },\n  205: function(trs: Transaction): number {\n    return 0.1\n  },\n  300: function(trs: Transaction): number {\n    return 10\n  },\n  301: function(trs: Transaction): number {\n    return 0.1\n  },\n  302: function(trs: Transaction): number {\n    return 0\n  },\n  400: function(trs: Transaction): number {\n    return 0.1\n  },\n  401: function(trs: Transaction): number {\n    return 100\n  },\n  402: function(trs: Transaction): number {\n    return 0.01\n  },\n  403: function(trs: Transaction): number {\n    return 0\n  },\n  404: function(trs: Transaction): number {\n    return 0.01\n  },\n  500: function(trs: Transaction): number {\n    return 0\n  },\n  501: function(trs: Transaction): number {\n    return 0\n  },\n  502: function(trs: Transaction): number {\n    return 1\n  },\n  503: function(trs: Transaction): number {\n    return 1\n  },\n  504: function(trs: Transaction): number {\n    return 1\n  },\n  600: function(trs: Transaction): number {\n    return 0\n  },\n  601: function(trs: Transaction): number {\n    return 0\n  },\n  602: function(trs: Transaction): number {\n    return 0\n  }\n}\n\nlet calFee = function(trans: Transaction): Transaction {\n  let type: number = trans.type\n  let fee: number = feeFuncMap[type](trans)\n  fee = fee * Math.pow(10, 8)\n  trans.fee = fee\n  return trans\n}\n\nexport default calFee\n","var Buffer = require('safe-buffer').Buffer\nvar createHash = require('create-hash')\nvar pbkdf2 = require('pbkdf2').pbkdf2Sync\nvar randomBytes = require('randombytes')\n\n// use unorm until String.prototype.normalize gets better browser support\nvar unorm = require('unorm')\n\nvar CHINESE_SIMPLIFIED_WORDLIST = require('./wordlists/chinese_simplified.json')\nvar CHINESE_TRADITIONAL_WORDLIST = require('./wordlists/chinese_traditional.json')\nvar ENGLISH_WORDLIST = require('./wordlists/english.json')\nvar FRENCH_WORDLIST = require('./wordlists/french.json')\nvar ITALIAN_WORDLIST = require('./wordlists/italian.json')\nvar JAPANESE_WORDLIST = require('./wordlists/japanese.json')\nvar KOREAN_WORDLIST = require('./wordlists/korean.json')\nvar SPANISH_WORDLIST = require('./wordlists/spanish.json')\nvar DEFAULT_WORDLIST = ENGLISH_WORDLIST\n\nvar INVALID_MNEMONIC = 'Invalid mnemonic'\nvar INVALID_ENTROPY = 'Invalid entropy'\nvar INVALID_CHECKSUM = 'Invalid mnemonic checksum'\n\nfunction lpad (str, padString, length) {\n  while (str.length < length) str = padString + str\n  return str\n}\n\nfunction binaryToByte (bin) {\n  return parseInt(bin, 2)\n}\n\nfunction bytesToBinary (bytes) {\n  return bytes.map(function (x) {\n    return lpad(x.toString(2), '0', 8)\n  }).join('')\n}\n\nfunction deriveChecksumBits (entropyBuffer) {\n  var ENT = entropyBuffer.length * 8\n  var CS = ENT / 32\n  var hash = createHash('sha256').update(entropyBuffer).digest()\n\n  return bytesToBinary([].slice.call(hash)).slice(0, CS)\n}\n\nfunction salt (password) {\n  return 'mnemonic' + (password || '')\n}\n\nfunction mnemonicToSeed (mnemonic, password) {\n  var mnemonicBuffer = Buffer.from(unorm.nfkd(mnemonic), 'utf8')\n  var saltBuffer = Buffer.from(salt(unorm.nfkd(password)), 'utf8')\n\n  return pbkdf2(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512')\n}\n\nfunction mnemonicToSeedHex (mnemonic, password) {\n  return mnemonicToSeed(mnemonic, password).toString('hex')\n}\n\nfunction mnemonicToEntropy (mnemonic, wordlist) {\n  wordlist = wordlist || DEFAULT_WORDLIST\n\n  var words = unorm.nfkd(mnemonic).split(' ')\n  if (words.length % 3 !== 0) throw new Error(INVALID_MNEMONIC)\n\n  // convert word indices to 11 bit binary strings\n  var bits = words.map(function (word) {\n    var index = wordlist.indexOf(word)\n    if (index === -1) throw new Error(INVALID_MNEMONIC)\n\n    return lpad(index.toString(2), '0', 11)\n  }).join('')\n\n  // split the binary string into ENT/CS\n  var dividerIndex = Math.floor(bits.length / 33) * 32\n  var entropyBits = bits.slice(0, dividerIndex)\n  var checksumBits = bits.slice(dividerIndex)\n\n  // calculate the checksum and compare\n  var entropyBytes = entropyBits.match(/(.{1,8})/g).map(binaryToByte)\n  if (entropyBytes.length < 16) throw new Error(INVALID_ENTROPY)\n  if (entropyBytes.length > 32) throw new Error(INVALID_ENTROPY)\n  if (entropyBytes.length % 4 !== 0) throw new Error(INVALID_ENTROPY)\n\n  var entropy = Buffer.from(entropyBytes)\n  var newChecksum = deriveChecksumBits(entropy)\n  if (newChecksum !== checksumBits) throw new Error(INVALID_CHECKSUM)\n\n  return entropy.toString('hex')\n}\n\nfunction entropyToMnemonic (entropy, wordlist) {\n  if (!Buffer.isBuffer(entropy)) entropy = Buffer.from(entropy, 'hex')\n  wordlist = wordlist || DEFAULT_WORDLIST\n\n  // 128 <= ENT <= 256\n  if (entropy.length < 16) throw new TypeError(INVALID_ENTROPY)\n  if (entropy.length > 32) throw new TypeError(INVALID_ENTROPY)\n  if (entropy.length % 4 !== 0) throw new TypeError(INVALID_ENTROPY)\n\n  var entropyBits = bytesToBinary([].slice.call(entropy))\n  var checksumBits = deriveChecksumBits(entropy)\n\n  var bits = entropyBits + checksumBits\n  var chunks = bits.match(/(.{1,11})/g)\n  var words = chunks.map(function (binary) {\n    var index = binaryToByte(binary)\n    return wordlist[index]\n  })\n\n  return wordlist === JAPANESE_WORDLIST ? words.join('\\u3000') : words.join(' ')\n}\n\nfunction generateMnemonic (strength, rng, wordlist) {\n  strength = strength || 128\n  if (strength % 32 !== 0) throw new TypeError(INVALID_ENTROPY)\n  rng = rng || randomBytes\n\n  return entropyToMnemonic(rng(strength / 8), wordlist)\n}\n\nfunction validateMnemonic (mnemonic, wordlist) {\n  try {\n    mnemonicToEntropy(mnemonic, wordlist)\n  } catch (e) {\n    return false\n  }\n\n  return true\n}\n\nmodule.exports = {\n  mnemonicToSeed: mnemonicToSeed,\n  mnemonicToSeedHex: mnemonicToSeedHex,\n  mnemonicToEntropy: mnemonicToEntropy,\n  entropyToMnemonic: entropyToMnemonic,\n  generateMnemonic: generateMnemonic,\n  validateMnemonic: validateMnemonic,\n  wordlists: {\n    EN: ENGLISH_WORDLIST,\n    JA: JAPANESE_WORDLIST,\n\n    chinese_simplified: CHINESE_SIMPLIFIED_WORDLIST,\n    chinese_traditional: CHINESE_TRADITIONAL_WORDLIST,\n    english: ENGLISH_WORDLIST,\n    french: FRENCH_WORDLIST,\n    italian: ITALIAN_WORDLIST,\n    japanese: JAPANESE_WORDLIST,\n    korean: KOREAN_WORDLIST,\n    spanish: SPANISH_WORDLIST\n  }\n}\n","module.exports = require('crypto').createHash\n","var checkParameters = require('./lib/precondition')\nvar native = require('crypto')\n\nfunction nativePBKDF2 (password, salt, iterations, keylen, digest, callback) {\n  checkParameters(password, salt, iterations, keylen)\n\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = 'sha1'\n  }\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n\n  return native.pbkdf2(password, salt, iterations, keylen, digest, callback)\n}\n\nfunction nativePBKDF2Sync (password, salt, iterations, keylen, digest) {\n  checkParameters(password, salt, iterations, keylen)\n  digest = digest || 'sha1'\n  return native.pbkdf2Sync(password, salt, iterations, keylen, digest)\n}\n\n/* istanbul ignore next */\nif (!native.pbkdf2Sync || native.pbkdf2Sync.toString().indexOf('keylen, digest') === -1) {\n  exports.pbkdf2Sync = require('./lib/sync')\n  exports.pbkdf2 = require('./lib/async')\n\n// native\n} else {\n  exports.pbkdf2Sync = nativePBKDF2Sync\n  exports.pbkdf2 = nativePBKDF2\n}\n","module.exports = require('crypto').createHmac\n","var checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar sync = require('./sync')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ZERO_BUF\nvar subtle = global.crypto && global.crypto.subtle\nvar toBrowser = {\n  'sha': 'SHA-1',\n  'sha-1': 'SHA-1',\n  'sha1': 'SHA-1',\n  'sha256': 'SHA-256',\n  'sha-256': 'SHA-256',\n  'sha384': 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  'sha512': 'SHA-512'\n}\nvar checks = []\nfunction checkNative (algo) {\n  if (global.process && !global.process.browser) {\n    return Promise.resolve(false)\n  }\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false)\n  }\n  if (checks[algo] !== undefined) {\n    return checks[algo]\n  }\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n    .then(function () {\n      return true\n    }).catch(function () {\n      return false\n    })\n  checks[algo] = prom\n  return prom\n}\n\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\n  return subtle.importKey(\n    'raw', password, {name: 'PBKDF2'}, false, ['deriveBits']\n  ).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3)\n  }).then(function (res) {\n    return Buffer.from(res)\n  })\n}\n\nfunction resolvePromise (promise, callback) {\n  promise.then(function (out) {\n    process.nextTick(function () {\n      callback(null, out)\n    })\n  }, function (e) {\n    process.nextTick(function () {\n      callback(e)\n    })\n  })\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  digest = digest || 'sha1'\n  var algo = toBrowser[digest.toLowerCase()]\n\n  if (!algo || typeof global.Promise !== 'function') {\n    return process.nextTick(function () {\n      var out\n      try {\n        out = sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n      callback(null, out)\n    })\n  }\n\n  checkParameters(password, salt, iterations, keylen)\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)\n\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\n\n    return sync(password, salt, iterations, keylen, digest)\n  }), callback)\n}\n","module.exports = require('crypto').randomBytes\n","(function (root) {\n   \"use strict\";\n\n/***** unorm.js *****/\n\n/*\n * UnicodeNormalizer 1.0.0\n * Copyright (c) 2008 Matsuza\n * Dual licensed under the MIT (MIT-LICENSE.txt) and GPL (GPL-LICENSE.txt) licenses.\n * $Date: 2008-06-05 16:44:17 +0200 (Thu, 05 Jun 2008) $\n * $Rev: 13309 $\n */\n\n   var DEFAULT_FEATURE = [null, 0, {}];\n   var CACHE_THRESHOLD = 10;\n   var SBase = 0xAC00, LBase = 0x1100, VBase = 0x1161, TBase = 0x11A7, LCount = 19, VCount = 21, TCount = 28;\n   var NCount = VCount * TCount; // 588\n   var SCount = LCount * NCount; // 11172\n\n   var UChar = function(cp, feature){\n      this.codepoint = cp;\n      this.feature = feature;\n   };\n\n   // Strategies\n   var cache = {};\n   var cacheCounter = [];\n   for (var i = 0; i <= 0xFF; ++i){\n      cacheCounter[i] = 0;\n   }\n\n   function fromCache(next, cp, needFeature){\n      var ret = cache[cp];\n      if(!ret){\n         ret = next(cp, needFeature);\n         if(!!ret.feature && ++cacheCounter[(cp >> 8) & 0xFF] > CACHE_THRESHOLD){\n            cache[cp] = ret;\n         }\n      }\n      return ret;\n   }\n\n   function fromData(next, cp, needFeature){\n      var hash = cp & 0xFF00;\n      var dunit = UChar.udata[hash] || {};\n      var f = dunit[cp];\n      return f ? new UChar(cp, f) : new UChar(cp, DEFAULT_FEATURE);\n   }\n   function fromCpOnly(next, cp, needFeature){\n      return !!needFeature ? next(cp, needFeature) : new UChar(cp, null);\n   }\n   function fromRuleBasedJamo(next, cp, needFeature){\n      var j;\n      if(cp < LBase || (LBase + LCount <= cp && cp < SBase) || (SBase + SCount < cp)){\n         return next(cp, needFeature);\n      }\n      if(LBase <= cp && cp < LBase + LCount){\n         var c = {};\n         var base = (cp - LBase) * VCount;\n         for (j = 0; j < VCount; ++j){\n            c[VBase + j] = SBase + TCount * (j + base);\n         }\n         return new UChar(cp, [,,c]);\n      }\n\n      var SIndex = cp - SBase;\n      var TIndex = SIndex % TCount;\n      var feature = [];\n      if(TIndex !== 0){\n         feature[0] = [SBase + SIndex - TIndex, TBase + TIndex];\n      } else {\n         feature[0] = [LBase + Math.floor(SIndex / NCount), VBase + Math.floor((SIndex % NCount) / TCount)];\n         feature[2] = {};\n         for (j = 1; j < TCount; ++j){\n            feature[2][TBase + j] = cp + j;\n         }\n      }\n      return new UChar(cp, feature);\n   }\n   function fromCpFilter(next, cp, needFeature){\n      return cp < 60 || 13311 < cp && cp < 42607 ? new UChar(cp, DEFAULT_FEATURE) : next(cp, needFeature);\n   }\n\n   var strategies = [fromCpFilter, fromCache, fromCpOnly, fromRuleBasedJamo, fromData];\n\n   UChar.fromCharCode = strategies.reduceRight(function (next, strategy) {\n      return function (cp, needFeature) {\n         return strategy(next, cp, needFeature);\n      };\n   }, null);\n\n   UChar.isHighSurrogate = function(cp){\n      return cp >= 0xD800 && cp <= 0xDBFF;\n   };\n   UChar.isLowSurrogate = function(cp){\n      return cp >= 0xDC00 && cp <= 0xDFFF;\n   };\n\n   UChar.prototype.prepFeature = function(){\n      if(!this.feature){\n         this.feature = UChar.fromCharCode(this.codepoint, true).feature;\n      }\n   };\n\n   UChar.prototype.toString = function(){\n      if(this.codepoint < 0x10000){\n         return String.fromCharCode(this.codepoint);\n      } else {\n         var x = this.codepoint - 0x10000;\n         return String.fromCharCode(Math.floor(x / 0x400) + 0xD800, x % 0x400 + 0xDC00);\n      }\n   };\n\n   UChar.prototype.getDecomp = function(){\n      this.prepFeature();\n      return this.feature[0] || null;\n   };\n\n   UChar.prototype.isCompatibility = function(){\n      this.prepFeature();\n      return !!this.feature[1] && (this.feature[1] & (1 << 8));\n   };\n   UChar.prototype.isExclude = function(){\n      this.prepFeature();\n      return !!this.feature[1] && (this.feature[1] & (1 << 9));\n   };\n   UChar.prototype.getCanonicalClass = function(){\n      this.prepFeature();\n      return !!this.feature[1] ? (this.feature[1] & 0xff) : 0;\n   };\n   UChar.prototype.getComposite = function(following){\n      this.prepFeature();\n      if(!this.feature[2]){\n         return null;\n      }\n      var cp = this.feature[2][following.codepoint];\n      return cp ? UChar.fromCharCode(cp) : null;\n   };\n\n   var UCharIterator = function(str){\n      this.str = str;\n      this.cursor = 0;\n   };\n   UCharIterator.prototype.next = function(){\n      if(!!this.str && this.cursor < this.str.length){\n         var cp = this.str.charCodeAt(this.cursor++);\n         var d;\n         if(UChar.isHighSurrogate(cp) && this.cursor < this.str.length && UChar.isLowSurrogate((d = this.str.charCodeAt(this.cursor)))){\n            cp = (cp - 0xD800) * 0x400 + (d -0xDC00) + 0x10000;\n            ++this.cursor;\n         }\n         return UChar.fromCharCode(cp);\n      } else {\n         this.str = null;\n         return null;\n      }\n   };\n\n   var RecursDecompIterator = function(it, cano){\n      this.it = it;\n      this.canonical = cano;\n      this.resBuf = [];\n   };\n\n   RecursDecompIterator.prototype.next = function(){\n      function recursiveDecomp(cano, uchar){\n         var decomp = uchar.getDecomp();\n         if(!!decomp && !(cano && uchar.isCompatibility())){\n            var ret = [];\n            for(var i = 0; i < decomp.length; ++i){\n               var a = recursiveDecomp(cano, UChar.fromCharCode(decomp[i]));\n                ret = ret.concat(a);\n            }\n            return ret;\n         } else {\n            return [uchar];\n         }\n      }\n      if(this.resBuf.length === 0){\n         var uchar = this.it.next();\n         if(!uchar){\n            return null;\n         }\n         this.resBuf = recursiveDecomp(this.canonical, uchar);\n      }\n      return this.resBuf.shift();\n   };\n\n   var DecompIterator = function(it){\n      this.it = it;\n      this.resBuf = [];\n   };\n\n   DecompIterator.prototype.next = function(){\n      var cc;\n      if(this.resBuf.length === 0){\n         do{\n            var uchar = this.it.next();\n            if(!uchar){\n               break;\n            }\n            cc = uchar.getCanonicalClass();\n            var inspt = this.resBuf.length;\n            if(cc !== 0){\n               for(; inspt > 0; --inspt){\n                  var uchar2 = this.resBuf[inspt - 1];\n                  var cc2 = uchar2.getCanonicalClass();\n                  if(cc2 <= cc){\n                     break;\n                  }\n               }\n            }\n            this.resBuf.splice(inspt, 0, uchar);\n         } while(cc !== 0);\n      }\n      return this.resBuf.shift();\n   };\n\n   var CompIterator = function(it){\n      this.it = it;\n      this.procBuf = [];\n      this.resBuf = [];\n      this.lastClass = null;\n   };\n\n   CompIterator.prototype.next = function(){\n      while(this.resBuf.length === 0){\n         var uchar = this.it.next();\n         if(!uchar){\n            this.resBuf = this.procBuf;\n            this.procBuf = [];\n            break;\n         }\n         if(this.procBuf.length === 0){\n            this.lastClass = uchar.getCanonicalClass();\n            this.procBuf.push(uchar);\n         } else {\n            var starter = this.procBuf[0];\n            var composite = starter.getComposite(uchar);\n            var cc = uchar.getCanonicalClass();\n            if(!!composite && (this.lastClass < cc || this.lastClass === 0)){\n               this.procBuf[0] = composite;\n            } else {\n               if(cc === 0){\n                  this.resBuf = this.procBuf;\n                  this.procBuf = [];\n               }\n               this.lastClass = cc;\n               this.procBuf.push(uchar);\n            }\n         }\n      }\n      return this.resBuf.shift();\n   };\n\n   var createIterator = function(mode, str){\n      switch(mode){\n         case \"NFD\":\n            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true));\n         case \"NFKD\":\n            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false));\n         case \"NFC\":\n            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true)));\n         case \"NFKC\":\n            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false)));\n      }\n      throw mode + \" is invalid\";\n   };\n   var normalize = function(mode, str){\n      var it = createIterator(mode, str);\n      var ret = \"\";\n      var uchar;\n      while(!!(uchar = it.next())){\n         ret += uchar.toString();\n      }\n      return ret;\n   };\n\n   /* API functions */\n   function nfd(str){\n      return normalize(\"NFD\", str);\n   }\n\n   function nfkd(str){\n      return normalize(\"NFKD\", str);\n   }\n\n   function nfc(str){\n      return normalize(\"NFC\", str);\n   }\n\n   function nfkc(str){\n      return normalize(\"NFKC\", str);\n   }\n\n/* Unicode data */\nUChar.udata={\n0:{60:[,,{824:8814}],61:[,,{824:8800}],62:[,,{824:8815}],65:[,,{768:192,769:193,770:194,771:195,772:256,774:258,775:550,776:196,777:7842,778:197,780:461,783:512,785:514,803:7840,805:7680,808:260}],66:[,,{775:7682,803:7684,817:7686}],67:[,,{769:262,770:264,775:266,780:268,807:199}],68:[,,{775:7690,780:270,803:7692,807:7696,813:7698,817:7694}],69:[,,{768:200,769:201,770:202,771:7868,772:274,774:276,775:278,776:203,777:7866,780:282,783:516,785:518,803:7864,807:552,808:280,813:7704,816:7706}],70:[,,{775:7710}],71:[,,{769:500,770:284,772:7712,774:286,775:288,780:486,807:290}],72:[,,{770:292,775:7714,776:7718,780:542,803:7716,807:7720,814:7722}],73:[,,{768:204,769:205,770:206,771:296,772:298,774:300,775:304,776:207,777:7880,780:463,783:520,785:522,803:7882,808:302,816:7724}],74:[,,{770:308}],75:[,,{769:7728,780:488,803:7730,807:310,817:7732}],76:[,,{769:313,780:317,803:7734,807:315,813:7740,817:7738}],77:[,,{769:7742,775:7744,803:7746}],78:[,,{768:504,769:323,771:209,775:7748,780:327,803:7750,807:325,813:7754,817:7752}],79:[,,{768:210,769:211,770:212,771:213,772:332,774:334,775:558,776:214,777:7886,779:336,780:465,783:524,785:526,795:416,803:7884,808:490}],80:[,,{769:7764,775:7766}],82:[,,{769:340,775:7768,780:344,783:528,785:530,803:7770,807:342,817:7774}],83:[,,{769:346,770:348,775:7776,780:352,803:7778,806:536,807:350}],84:[,,{775:7786,780:356,803:7788,806:538,807:354,813:7792,817:7790}],85:[,,{768:217,769:218,770:219,771:360,772:362,774:364,776:220,777:7910,778:366,779:368,780:467,783:532,785:534,795:431,803:7908,804:7794,808:370,813:7798,816:7796}],86:[,,{771:7804,803:7806}],87:[,,{768:7808,769:7810,770:372,775:7814,776:7812,803:7816}],88:[,,{775:7818,776:7820}],89:[,,{768:7922,769:221,770:374,771:7928,772:562,775:7822,776:376,777:7926,803:7924}],90:[,,{769:377,770:7824,775:379,780:381,803:7826,817:7828}],97:[,,{768:224,769:225,770:226,771:227,772:257,774:259,775:551,776:228,777:7843,778:229,780:462,783:513,785:515,803:7841,805:7681,808:261}],98:[,,{775:7683,803:7685,817:7687}],99:[,,{769:263,770:265,775:267,780:269,807:231}],100:[,,{775:7691,780:271,803:7693,807:7697,813:7699,817:7695}],101:[,,{768:232,769:233,770:234,771:7869,772:275,774:277,775:279,776:235,777:7867,780:283,783:517,785:519,803:7865,807:553,808:281,813:7705,816:7707}],102:[,,{775:7711}],103:[,,{769:501,770:285,772:7713,774:287,775:289,780:487,807:291}],104:[,,{770:293,775:7715,776:7719,780:543,803:7717,807:7721,814:7723,817:7830}],105:[,,{768:236,769:237,770:238,771:297,772:299,774:301,776:239,777:7881,780:464,783:521,785:523,803:7883,808:303,816:7725}],106:[,,{770:309,780:496}],107:[,,{769:7729,780:489,803:7731,807:311,817:7733}],108:[,,{769:314,780:318,803:7735,807:316,813:7741,817:7739}],109:[,,{769:7743,775:7745,803:7747}],110:[,,{768:505,769:324,771:241,775:7749,780:328,803:7751,807:326,813:7755,817:7753}],111:[,,{768:242,769:243,770:244,771:245,772:333,774:335,775:559,776:246,777:7887,779:337,780:466,783:525,785:527,795:417,803:7885,808:491}],112:[,,{769:7765,775:7767}],114:[,,{769:341,775:7769,780:345,783:529,785:531,803:7771,807:343,817:7775}],115:[,,{769:347,770:349,775:7777,780:353,803:7779,806:537,807:351}],116:[,,{775:7787,776:7831,780:357,803:7789,806:539,807:355,813:7793,817:7791}],117:[,,{768:249,769:250,770:251,771:361,772:363,774:365,776:252,777:7911,778:367,779:369,780:468,783:533,785:535,795:432,803:7909,804:7795,808:371,813:7799,816:7797}],118:[,,{771:7805,803:7807}],119:[,,{768:7809,769:7811,770:373,775:7815,776:7813,778:7832,803:7817}],120:[,,{775:7819,776:7821}],121:[,,{768:7923,769:253,770:375,771:7929,772:563,775:7823,776:255,777:7927,778:7833,803:7925}],122:[,,{769:378,770:7825,775:380,780:382,803:7827,817:7829}],160:[[32],256],168:[[32,776],256,{768:8173,769:901,834:8129}],170:[[97],256],175:[[32,772],256],178:[[50],256],179:[[51],256],180:[[32,769],256],181:[[956],256],184:[[32,807],256],185:[[49],256],186:[[111],256],188:[[49,8260,52],256],189:[[49,8260,50],256],190:[[51,8260,52],256],192:[[65,768]],193:[[65,769]],194:[[65,770],,{768:7846,769:7844,771:7850,777:7848}],195:[[65,771]],196:[[65,776],,{772:478}],197:[[65,778],,{769:506}],198:[,,{769:508,772:482}],199:[[67,807],,{769:7688}],200:[[69,768]],201:[[69,769]],202:[[69,770],,{768:7872,769:7870,771:7876,777:7874}],203:[[69,776]],204:[[73,768]],205:[[73,769]],206:[[73,770]],207:[[73,776],,{769:7726}],209:[[78,771]],210:[[79,768]],211:[[79,769]],212:[[79,770],,{768:7890,769:7888,771:7894,777:7892}],213:[[79,771],,{769:7756,772:556,776:7758}],214:[[79,776],,{772:554}],216:[,,{769:510}],217:[[85,768]],218:[[85,769]],219:[[85,770]],220:[[85,776],,{768:475,769:471,772:469,780:473}],221:[[89,769]],224:[[97,768]],225:[[97,769]],226:[[97,770],,{768:7847,769:7845,771:7851,777:7849}],227:[[97,771]],228:[[97,776],,{772:479}],229:[[97,778],,{769:507}],230:[,,{769:509,772:483}],231:[[99,807],,{769:7689}],232:[[101,768]],233:[[101,769]],234:[[101,770],,{768:7873,769:7871,771:7877,777:7875}],235:[[101,776]],236:[[105,768]],237:[[105,769]],238:[[105,770]],239:[[105,776],,{769:7727}],241:[[110,771]],242:[[111,768]],243:[[111,769]],244:[[111,770],,{768:7891,769:7889,771:7895,777:7893}],245:[[111,771],,{769:7757,772:557,776:7759}],246:[[111,776],,{772:555}],248:[,,{769:511}],249:[[117,768]],250:[[117,769]],251:[[117,770]],252:[[117,776],,{768:476,769:472,772:470,780:474}],253:[[121,769]],255:[[121,776]]},\n256:{256:[[65,772]],257:[[97,772]],258:[[65,774],,{768:7856,769:7854,771:7860,777:7858}],259:[[97,774],,{768:7857,769:7855,771:7861,777:7859}],260:[[65,808]],261:[[97,808]],262:[[67,769]],263:[[99,769]],264:[[67,770]],265:[[99,770]],266:[[67,775]],267:[[99,775]],268:[[67,780]],269:[[99,780]],270:[[68,780]],271:[[100,780]],274:[[69,772],,{768:7700,769:7702}],275:[[101,772],,{768:7701,769:7703}],276:[[69,774]],277:[[101,774]],278:[[69,775]],279:[[101,775]],280:[[69,808]],281:[[101,808]],282:[[69,780]],283:[[101,780]],284:[[71,770]],285:[[103,770]],286:[[71,774]],287:[[103,774]],288:[[71,775]],289:[[103,775]],290:[[71,807]],291:[[103,807]],292:[[72,770]],293:[[104,770]],296:[[73,771]],297:[[105,771]],298:[[73,772]],299:[[105,772]],300:[[73,774]],301:[[105,774]],302:[[73,808]],303:[[105,808]],304:[[73,775]],306:[[73,74],256],307:[[105,106],256],308:[[74,770]],309:[[106,770]],310:[[75,807]],311:[[107,807]],313:[[76,769]],314:[[108,769]],315:[[76,807]],316:[[108,807]],317:[[76,780]],318:[[108,780]],319:[[76,183],256],320:[[108,183],256],323:[[78,769]],324:[[110,769]],325:[[78,807]],326:[[110,807]],327:[[78,780]],328:[[110,780]],329:[[700,110],256],332:[[79,772],,{768:7760,769:7762}],333:[[111,772],,{768:7761,769:7763}],334:[[79,774]],335:[[111,774]],336:[[79,779]],337:[[111,779]],340:[[82,769]],341:[[114,769]],342:[[82,807]],343:[[114,807]],344:[[82,780]],345:[[114,780]],346:[[83,769],,{775:7780}],347:[[115,769],,{775:7781}],348:[[83,770]],349:[[115,770]],350:[[83,807]],351:[[115,807]],352:[[83,780],,{775:7782}],353:[[115,780],,{775:7783}],354:[[84,807]],355:[[116,807]],356:[[84,780]],357:[[116,780]],360:[[85,771],,{769:7800}],361:[[117,771],,{769:7801}],362:[[85,772],,{776:7802}],363:[[117,772],,{776:7803}],364:[[85,774]],365:[[117,774]],366:[[85,778]],367:[[117,778]],368:[[85,779]],369:[[117,779]],370:[[85,808]],371:[[117,808]],372:[[87,770]],373:[[119,770]],374:[[89,770]],375:[[121,770]],376:[[89,776]],377:[[90,769]],378:[[122,769]],379:[[90,775]],380:[[122,775]],381:[[90,780]],382:[[122,780]],383:[[115],256,{775:7835}],416:[[79,795],,{768:7900,769:7898,771:7904,777:7902,803:7906}],417:[[111,795],,{768:7901,769:7899,771:7905,777:7903,803:7907}],431:[[85,795],,{768:7914,769:7912,771:7918,777:7916,803:7920}],432:[[117,795],,{768:7915,769:7913,771:7919,777:7917,803:7921}],439:[,,{780:494}],452:[[68,381],256],453:[[68,382],256],454:[[100,382],256],455:[[76,74],256],456:[[76,106],256],457:[[108,106],256],458:[[78,74],256],459:[[78,106],256],460:[[110,106],256],461:[[65,780]],462:[[97,780]],463:[[73,780]],464:[[105,780]],465:[[79,780]],466:[[111,780]],467:[[85,780]],468:[[117,780]],469:[[220,772]],470:[[252,772]],471:[[220,769]],472:[[252,769]],473:[[220,780]],474:[[252,780]],475:[[220,768]],476:[[252,768]],478:[[196,772]],479:[[228,772]],480:[[550,772]],481:[[551,772]],482:[[198,772]],483:[[230,772]],486:[[71,780]],487:[[103,780]],488:[[75,780]],489:[[107,780]],490:[[79,808],,{772:492}],491:[[111,808],,{772:493}],492:[[490,772]],493:[[491,772]],494:[[439,780]],495:[[658,780]],496:[[106,780]],497:[[68,90],256],498:[[68,122],256],499:[[100,122],256],500:[[71,769]],501:[[103,769]],504:[[78,768]],505:[[110,768]],506:[[197,769]],507:[[229,769]],508:[[198,769]],509:[[230,769]],510:[[216,769]],511:[[248,769]],66045:[,220]},\n512:{512:[[65,783]],513:[[97,783]],514:[[65,785]],515:[[97,785]],516:[[69,783]],517:[[101,783]],518:[[69,785]],519:[[101,785]],520:[[73,783]],521:[[105,783]],522:[[73,785]],523:[[105,785]],524:[[79,783]],525:[[111,783]],526:[[79,785]],527:[[111,785]],528:[[82,783]],529:[[114,783]],530:[[82,785]],531:[[114,785]],532:[[85,783]],533:[[117,783]],534:[[85,785]],535:[[117,785]],536:[[83,806]],537:[[115,806]],538:[[84,806]],539:[[116,806]],542:[[72,780]],543:[[104,780]],550:[[65,775],,{772:480}],551:[[97,775],,{772:481}],552:[[69,807],,{774:7708}],553:[[101,807],,{774:7709}],554:[[214,772]],555:[[246,772]],556:[[213,772]],557:[[245,772]],558:[[79,775],,{772:560}],559:[[111,775],,{772:561}],560:[[558,772]],561:[[559,772]],562:[[89,772]],563:[[121,772]],658:[,,{780:495}],688:[[104],256],689:[[614],256],690:[[106],256],691:[[114],256],692:[[633],256],693:[[635],256],694:[[641],256],695:[[119],256],696:[[121],256],728:[[32,774],256],729:[[32,775],256],730:[[32,778],256],731:[[32,808],256],732:[[32,771],256],733:[[32,779],256],736:[[611],256],737:[[108],256],738:[[115],256],739:[[120],256],740:[[661],256],66272:[,220]},\n768:{768:[,230],769:[,230],770:[,230],771:[,230],772:[,230],773:[,230],774:[,230],775:[,230],776:[,230,{769:836}],777:[,230],778:[,230],779:[,230],780:[,230],781:[,230],782:[,230],783:[,230],784:[,230],785:[,230],786:[,230],787:[,230],788:[,230],789:[,232],790:[,220],791:[,220],792:[,220],793:[,220],794:[,232],795:[,216],796:[,220],797:[,220],798:[,220],799:[,220],800:[,220],801:[,202],802:[,202],803:[,220],804:[,220],805:[,220],806:[,220],807:[,202],808:[,202],809:[,220],810:[,220],811:[,220],812:[,220],813:[,220],814:[,220],815:[,220],816:[,220],817:[,220],818:[,220],819:[,220],820:[,1],821:[,1],822:[,1],823:[,1],824:[,1],825:[,220],826:[,220],827:[,220],828:[,220],829:[,230],830:[,230],831:[,230],832:[[768],230],833:[[769],230],834:[,230],835:[[787],230],836:[[776,769],230],837:[,240],838:[,230],839:[,220],840:[,220],841:[,220],842:[,230],843:[,230],844:[,230],845:[,220],846:[,220],848:[,230],849:[,230],850:[,230],851:[,220],852:[,220],853:[,220],854:[,220],855:[,230],856:[,232],857:[,220],858:[,220],859:[,230],860:[,233],861:[,234],862:[,234],863:[,233],864:[,234],865:[,234],866:[,233],867:[,230],868:[,230],869:[,230],870:[,230],871:[,230],872:[,230],873:[,230],874:[,230],875:[,230],876:[,230],877:[,230],878:[,230],879:[,230],884:[[697]],890:[[32,837],256],894:[[59]],900:[[32,769],256],901:[[168,769]],902:[[913,769]],903:[[183]],904:[[917,769]],905:[[919,769]],906:[[921,769]],908:[[927,769]],910:[[933,769]],911:[[937,769]],912:[[970,769]],913:[,,{768:8122,769:902,772:8121,774:8120,787:7944,788:7945,837:8124}],917:[,,{768:8136,769:904,787:7960,788:7961}],919:[,,{768:8138,769:905,787:7976,788:7977,837:8140}],921:[,,{768:8154,769:906,772:8153,774:8152,776:938,787:7992,788:7993}],927:[,,{768:8184,769:908,787:8008,788:8009}],929:[,,{788:8172}],933:[,,{768:8170,769:910,772:8169,774:8168,776:939,788:8025}],937:[,,{768:8186,769:911,787:8040,788:8041,837:8188}],938:[[921,776]],939:[[933,776]],940:[[945,769],,{837:8116}],941:[[949,769]],942:[[951,769],,{837:8132}],943:[[953,769]],944:[[971,769]],945:[,,{768:8048,769:940,772:8113,774:8112,787:7936,788:7937,834:8118,837:8115}],949:[,,{768:8050,769:941,787:7952,788:7953}],951:[,,{768:8052,769:942,787:7968,788:7969,834:8134,837:8131}],953:[,,{768:8054,769:943,772:8145,774:8144,776:970,787:7984,788:7985,834:8150}],959:[,,{768:8056,769:972,787:8000,788:8001}],961:[,,{787:8164,788:8165}],965:[,,{768:8058,769:973,772:8161,774:8160,776:971,787:8016,788:8017,834:8166}],969:[,,{768:8060,769:974,787:8032,788:8033,834:8182,837:8179}],970:[[953,776],,{768:8146,769:912,834:8151}],971:[[965,776],,{768:8162,769:944,834:8167}],972:[[959,769]],973:[[965,769]],974:[[969,769],,{837:8180}],976:[[946],256],977:[[952],256],978:[[933],256,{769:979,776:980}],979:[[978,769]],980:[[978,776]],981:[[966],256],982:[[960],256],1008:[[954],256],1009:[[961],256],1010:[[962],256],1012:[[920],256],1013:[[949],256],1017:[[931],256],66422:[,230],66423:[,230],66424:[,230],66425:[,230],66426:[,230]},\n1024:{1024:[[1045,768]],1025:[[1045,776]],1027:[[1043,769]],1030:[,,{776:1031}],1031:[[1030,776]],1036:[[1050,769]],1037:[[1048,768]],1038:[[1059,774]],1040:[,,{774:1232,776:1234}],1043:[,,{769:1027}],1045:[,,{768:1024,774:1238,776:1025}],1046:[,,{774:1217,776:1244}],1047:[,,{776:1246}],1048:[,,{768:1037,772:1250,774:1049,776:1252}],1049:[[1048,774]],1050:[,,{769:1036}],1054:[,,{776:1254}],1059:[,,{772:1262,774:1038,776:1264,779:1266}],1063:[,,{776:1268}],1067:[,,{776:1272}],1069:[,,{776:1260}],1072:[,,{774:1233,776:1235}],1075:[,,{769:1107}],1077:[,,{768:1104,774:1239,776:1105}],1078:[,,{774:1218,776:1245}],1079:[,,{776:1247}],1080:[,,{768:1117,772:1251,774:1081,776:1253}],1081:[[1080,774]],1082:[,,{769:1116}],1086:[,,{776:1255}],1091:[,,{772:1263,774:1118,776:1265,779:1267}],1095:[,,{776:1269}],1099:[,,{776:1273}],1101:[,,{776:1261}],1104:[[1077,768]],1105:[[1077,776]],1107:[[1075,769]],1110:[,,{776:1111}],1111:[[1110,776]],1116:[[1082,769]],1117:[[1080,768]],1118:[[1091,774]],1140:[,,{783:1142}],1141:[,,{783:1143}],1142:[[1140,783]],1143:[[1141,783]],1155:[,230],1156:[,230],1157:[,230],1158:[,230],1159:[,230],1217:[[1046,774]],1218:[[1078,774]],1232:[[1040,774]],1233:[[1072,774]],1234:[[1040,776]],1235:[[1072,776]],1238:[[1045,774]],1239:[[1077,774]],1240:[,,{776:1242}],1241:[,,{776:1243}],1242:[[1240,776]],1243:[[1241,776]],1244:[[1046,776]],1245:[[1078,776]],1246:[[1047,776]],1247:[[1079,776]],1250:[[1048,772]],1251:[[1080,772]],1252:[[1048,776]],1253:[[1080,776]],1254:[[1054,776]],1255:[[1086,776]],1256:[,,{776:1258}],1257:[,,{776:1259}],1258:[[1256,776]],1259:[[1257,776]],1260:[[1069,776]],1261:[[1101,776]],1262:[[1059,772]],1263:[[1091,772]],1264:[[1059,776]],1265:[[1091,776]],1266:[[1059,779]],1267:[[1091,779]],1268:[[1063,776]],1269:[[1095,776]],1272:[[1067,776]],1273:[[1099,776]]},\n1280:{1415:[[1381,1410],256],1425:[,220],1426:[,230],1427:[,230],1428:[,230],1429:[,230],1430:[,220],1431:[,230],1432:[,230],1433:[,230],1434:[,222],1435:[,220],1436:[,230],1437:[,230],1438:[,230],1439:[,230],1440:[,230],1441:[,230],1442:[,220],1443:[,220],1444:[,220],1445:[,220],1446:[,220],1447:[,220],1448:[,230],1449:[,230],1450:[,220],1451:[,230],1452:[,230],1453:[,222],1454:[,228],1455:[,230],1456:[,10],1457:[,11],1458:[,12],1459:[,13],1460:[,14],1461:[,15],1462:[,16],1463:[,17],1464:[,18],1465:[,19],1466:[,19],1467:[,20],1468:[,21],1469:[,22],1471:[,23],1473:[,24],1474:[,25],1476:[,230],1477:[,220],1479:[,18]},\n1536:{1552:[,230],1553:[,230],1554:[,230],1555:[,230],1556:[,230],1557:[,230],1558:[,230],1559:[,230],1560:[,30],1561:[,31],1562:[,32],1570:[[1575,1619]],1571:[[1575,1620]],1572:[[1608,1620]],1573:[[1575,1621]],1574:[[1610,1620]],1575:[,,{1619:1570,1620:1571,1621:1573}],1608:[,,{1620:1572}],1610:[,,{1620:1574}],1611:[,27],1612:[,28],1613:[,29],1614:[,30],1615:[,31],1616:[,32],1617:[,33],1618:[,34],1619:[,230],1620:[,230],1621:[,220],1622:[,220],1623:[,230],1624:[,230],1625:[,230],1626:[,230],1627:[,230],1628:[,220],1629:[,230],1630:[,230],1631:[,220],1648:[,35],1653:[[1575,1652],256],1654:[[1608,1652],256],1655:[[1735,1652],256],1656:[[1610,1652],256],1728:[[1749,1620]],1729:[,,{1620:1730}],1730:[[1729,1620]],1746:[,,{1620:1747}],1747:[[1746,1620]],1749:[,,{1620:1728}],1750:[,230],1751:[,230],1752:[,230],1753:[,230],1754:[,230],1755:[,230],1756:[,230],1759:[,230],1760:[,230],1761:[,230],1762:[,230],1763:[,220],1764:[,230],1767:[,230],1768:[,230],1770:[,220],1771:[,230],1772:[,230],1773:[,220]},\n1792:{1809:[,36],1840:[,230],1841:[,220],1842:[,230],1843:[,230],1844:[,220],1845:[,230],1846:[,230],1847:[,220],1848:[,220],1849:[,220],1850:[,230],1851:[,220],1852:[,220],1853:[,230],1854:[,220],1855:[,230],1856:[,230],1857:[,230],1858:[,220],1859:[,230],1860:[,220],1861:[,230],1862:[,220],1863:[,230],1864:[,220],1865:[,230],1866:[,230],2027:[,230],2028:[,230],2029:[,230],2030:[,230],2031:[,230],2032:[,230],2033:[,230],2034:[,220],2035:[,230]},\n2048:{2070:[,230],2071:[,230],2072:[,230],2073:[,230],2075:[,230],2076:[,230],2077:[,230],2078:[,230],2079:[,230],2080:[,230],2081:[,230],2082:[,230],2083:[,230],2085:[,230],2086:[,230],2087:[,230],2089:[,230],2090:[,230],2091:[,230],2092:[,230],2093:[,230],2137:[,220],2138:[,220],2139:[,220],2276:[,230],2277:[,230],2278:[,220],2279:[,230],2280:[,230],2281:[,220],2282:[,230],2283:[,230],2284:[,230],2285:[,220],2286:[,220],2287:[,220],2288:[,27],2289:[,28],2290:[,29],2291:[,230],2292:[,230],2293:[,230],2294:[,220],2295:[,230],2296:[,230],2297:[,220],2298:[,220],2299:[,230],2300:[,230],2301:[,230],2302:[,230],2303:[,230]},\n2304:{2344:[,,{2364:2345}],2345:[[2344,2364]],2352:[,,{2364:2353}],2353:[[2352,2364]],2355:[,,{2364:2356}],2356:[[2355,2364]],2364:[,7],2381:[,9],2385:[,230],2386:[,220],2387:[,230],2388:[,230],2392:[[2325,2364],512],2393:[[2326,2364],512],2394:[[2327,2364],512],2395:[[2332,2364],512],2396:[[2337,2364],512],2397:[[2338,2364],512],2398:[[2347,2364],512],2399:[[2351,2364],512],2492:[,7],2503:[,,{2494:2507,2519:2508}],2507:[[2503,2494]],2508:[[2503,2519]],2509:[,9],2524:[[2465,2492],512],2525:[[2466,2492],512],2527:[[2479,2492],512]},\n2560:{2611:[[2610,2620],512],2614:[[2616,2620],512],2620:[,7],2637:[,9],2649:[[2582,2620],512],2650:[[2583,2620],512],2651:[[2588,2620],512],2654:[[2603,2620],512],2748:[,7],2765:[,9],68109:[,220],68111:[,230],68152:[,230],68153:[,1],68154:[,220],68159:[,9],68325:[,230],68326:[,220]},\n2816:{2876:[,7],2887:[,,{2878:2891,2902:2888,2903:2892}],2888:[[2887,2902]],2891:[[2887,2878]],2892:[[2887,2903]],2893:[,9],2908:[[2849,2876],512],2909:[[2850,2876],512],2962:[,,{3031:2964}],2964:[[2962,3031]],3014:[,,{3006:3018,3031:3020}],3015:[,,{3006:3019}],3018:[[3014,3006]],3019:[[3015,3006]],3020:[[3014,3031]],3021:[,9]},\n3072:{3142:[,,{3158:3144}],3144:[[3142,3158]],3149:[,9],3157:[,84],3158:[,91],3260:[,7],3263:[,,{3285:3264}],3264:[[3263,3285]],3270:[,,{3266:3274,3285:3271,3286:3272}],3271:[[3270,3285]],3272:[[3270,3286]],3274:[[3270,3266],,{3285:3275}],3275:[[3274,3285]],3277:[,9]},\n3328:{3398:[,,{3390:3402,3415:3404}],3399:[,,{3390:3403}],3402:[[3398,3390]],3403:[[3399,3390]],3404:[[3398,3415]],3405:[,9],3530:[,9],3545:[,,{3530:3546,3535:3548,3551:3550}],3546:[[3545,3530]],3548:[[3545,3535],,{3530:3549}],3549:[[3548,3530]],3550:[[3545,3551]]},\n3584:{3635:[[3661,3634],256],3640:[,103],3641:[,103],3642:[,9],3656:[,107],3657:[,107],3658:[,107],3659:[,107],3763:[[3789,3762],256],3768:[,118],3769:[,118],3784:[,122],3785:[,122],3786:[,122],3787:[,122],3804:[[3755,3737],256],3805:[[3755,3745],256]},\n3840:{3852:[[3851],256],3864:[,220],3865:[,220],3893:[,220],3895:[,220],3897:[,216],3907:[[3906,4023],512],3917:[[3916,4023],512],3922:[[3921,4023],512],3927:[[3926,4023],512],3932:[[3931,4023],512],3945:[[3904,4021],512],3953:[,129],3954:[,130],3955:[[3953,3954],512],3956:[,132],3957:[[3953,3956],512],3958:[[4018,3968],512],3959:[[4018,3969],256],3960:[[4019,3968],512],3961:[[4019,3969],256],3962:[,130],3963:[,130],3964:[,130],3965:[,130],3968:[,130],3969:[[3953,3968],512],3970:[,230],3971:[,230],3972:[,9],3974:[,230],3975:[,230],3987:[[3986,4023],512],3997:[[3996,4023],512],4002:[[4001,4023],512],4007:[[4006,4023],512],4012:[[4011,4023],512],4025:[[3984,4021],512],4038:[,220]},\n4096:{4133:[,,{4142:4134}],4134:[[4133,4142]],4151:[,7],4153:[,9],4154:[,9],4237:[,220],4348:[[4316],256],69702:[,9],69759:[,9],69785:[,,{69818:69786}],69786:[[69785,69818]],69787:[,,{69818:69788}],69788:[[69787,69818]],69797:[,,{69818:69803}],69803:[[69797,69818]],69817:[,9],69818:[,7]},\n4352:{69888:[,230],69889:[,230],69890:[,230],69934:[[69937,69927]],69935:[[69938,69927]],69937:[,,{69927:69934}],69938:[,,{69927:69935}],69939:[,9],69940:[,9],70003:[,7],70080:[,9]},\n4608:{70197:[,9],70198:[,7],70377:[,7],70378:[,9]},\n4864:{4957:[,230],4958:[,230],4959:[,230],70460:[,7],70471:[,,{70462:70475,70487:70476}],70475:[[70471,70462]],70476:[[70471,70487]],70477:[,9],70502:[,230],70503:[,230],70504:[,230],70505:[,230],70506:[,230],70507:[,230],70508:[,230],70512:[,230],70513:[,230],70514:[,230],70515:[,230],70516:[,230]},\n5120:{70841:[,,{70832:70844,70842:70843,70845:70846}],70843:[[70841,70842]],70844:[[70841,70832]],70846:[[70841,70845]],70850:[,9],70851:[,7]},\n5376:{71096:[,,{71087:71098}],71097:[,,{71087:71099}],71098:[[71096,71087]],71099:[[71097,71087]],71103:[,9],71104:[,7]},\n5632:{71231:[,9],71350:[,9],71351:[,7]},\n5888:{5908:[,9],5940:[,9],6098:[,9],6109:[,230]},\n6144:{6313:[,228]},\n6400:{6457:[,222],6458:[,230],6459:[,220]},\n6656:{6679:[,230],6680:[,220],6752:[,9],6773:[,230],6774:[,230],6775:[,230],6776:[,230],6777:[,230],6778:[,230],6779:[,230],6780:[,230],6783:[,220],6832:[,230],6833:[,230],6834:[,230],6835:[,230],6836:[,230],6837:[,220],6838:[,220],6839:[,220],6840:[,220],6841:[,220],6842:[,220],6843:[,230],6844:[,230],6845:[,220]},\n6912:{6917:[,,{6965:6918}],6918:[[6917,6965]],6919:[,,{6965:6920}],6920:[[6919,6965]],6921:[,,{6965:6922}],6922:[[6921,6965]],6923:[,,{6965:6924}],6924:[[6923,6965]],6925:[,,{6965:6926}],6926:[[6925,6965]],6929:[,,{6965:6930}],6930:[[6929,6965]],6964:[,7],6970:[,,{6965:6971}],6971:[[6970,6965]],6972:[,,{6965:6973}],6973:[[6972,6965]],6974:[,,{6965:6976}],6975:[,,{6965:6977}],6976:[[6974,6965]],6977:[[6975,6965]],6978:[,,{6965:6979}],6979:[[6978,6965]],6980:[,9],7019:[,230],7020:[,220],7021:[,230],7022:[,230],7023:[,230],7024:[,230],7025:[,230],7026:[,230],7027:[,230],7082:[,9],7083:[,9],7142:[,7],7154:[,9],7155:[,9]},\n7168:{7223:[,7],7376:[,230],7377:[,230],7378:[,230],7380:[,1],7381:[,220],7382:[,220],7383:[,220],7384:[,220],7385:[,220],7386:[,230],7387:[,230],7388:[,220],7389:[,220],7390:[,220],7391:[,220],7392:[,230],7394:[,1],7395:[,1],7396:[,1],7397:[,1],7398:[,1],7399:[,1],7400:[,1],7405:[,220],7412:[,230],7416:[,230],7417:[,230]},\n7424:{7468:[[65],256],7469:[[198],256],7470:[[66],256],7472:[[68],256],7473:[[69],256],7474:[[398],256],7475:[[71],256],7476:[[72],256],7477:[[73],256],7478:[[74],256],7479:[[75],256],7480:[[76],256],7481:[[77],256],7482:[[78],256],7484:[[79],256],7485:[[546],256],7486:[[80],256],7487:[[82],256],7488:[[84],256],7489:[[85],256],7490:[[87],256],7491:[[97],256],7492:[[592],256],7493:[[593],256],7494:[[7426],256],7495:[[98],256],7496:[[100],256],7497:[[101],256],7498:[[601],256],7499:[[603],256],7500:[[604],256],7501:[[103],256],7503:[[107],256],7504:[[109],256],7505:[[331],256],7506:[[111],256],7507:[[596],256],7508:[[7446],256],7509:[[7447],256],7510:[[112],256],7511:[[116],256],7512:[[117],256],7513:[[7453],256],7514:[[623],256],7515:[[118],256],7516:[[7461],256],7517:[[946],256],7518:[[947],256],7519:[[948],256],7520:[[966],256],7521:[[967],256],7522:[[105],256],7523:[[114],256],7524:[[117],256],7525:[[118],256],7526:[[946],256],7527:[[947],256],7528:[[961],256],7529:[[966],256],7530:[[967],256],7544:[[1085],256],7579:[[594],256],7580:[[99],256],7581:[[597],256],7582:[[240],256],7583:[[604],256],7584:[[102],256],7585:[[607],256],7586:[[609],256],7587:[[613],256],7588:[[616],256],7589:[[617],256],7590:[[618],256],7591:[[7547],256],7592:[[669],256],7593:[[621],256],7594:[[7557],256],7595:[[671],256],7596:[[625],256],7597:[[624],256],7598:[[626],256],7599:[[627],256],7600:[[628],256],7601:[[629],256],7602:[[632],256],7603:[[642],256],7604:[[643],256],7605:[[427],256],7606:[[649],256],7607:[[650],256],7608:[[7452],256],7609:[[651],256],7610:[[652],256],7611:[[122],256],7612:[[656],256],7613:[[657],256],7614:[[658],256],7615:[[952],256],7616:[,230],7617:[,230],7618:[,220],7619:[,230],7620:[,230],7621:[,230],7622:[,230],7623:[,230],7624:[,230],7625:[,230],7626:[,220],7627:[,230],7628:[,230],7629:[,234],7630:[,214],7631:[,220],7632:[,202],7633:[,230],7634:[,230],7635:[,230],7636:[,230],7637:[,230],7638:[,230],7639:[,230],7640:[,230],7641:[,230],7642:[,230],7643:[,230],7644:[,230],7645:[,230],7646:[,230],7647:[,230],7648:[,230],7649:[,230],7650:[,230],7651:[,230],7652:[,230],7653:[,230],7654:[,230],7655:[,230],7656:[,230],7657:[,230],7658:[,230],7659:[,230],7660:[,230],7661:[,230],7662:[,230],7663:[,230],7664:[,230],7665:[,230],7666:[,230],7667:[,230],7668:[,230],7669:[,230],7676:[,233],7677:[,220],7678:[,230],7679:[,220]},\n7680:{7680:[[65,805]],7681:[[97,805]],7682:[[66,775]],7683:[[98,775]],7684:[[66,803]],7685:[[98,803]],7686:[[66,817]],7687:[[98,817]],7688:[[199,769]],7689:[[231,769]],7690:[[68,775]],7691:[[100,775]],7692:[[68,803]],7693:[[100,803]],7694:[[68,817]],7695:[[100,817]],7696:[[68,807]],7697:[[100,807]],7698:[[68,813]],7699:[[100,813]],7700:[[274,768]],7701:[[275,768]],7702:[[274,769]],7703:[[275,769]],7704:[[69,813]],7705:[[101,813]],7706:[[69,816]],7707:[[101,816]],7708:[[552,774]],7709:[[553,774]],7710:[[70,775]],7711:[[102,775]],7712:[[71,772]],7713:[[103,772]],7714:[[72,775]],7715:[[104,775]],7716:[[72,803]],7717:[[104,803]],7718:[[72,776]],7719:[[104,776]],7720:[[72,807]],7721:[[104,807]],7722:[[72,814]],7723:[[104,814]],7724:[[73,816]],7725:[[105,816]],7726:[[207,769]],7727:[[239,769]],7728:[[75,769]],7729:[[107,769]],7730:[[75,803]],7731:[[107,803]],7732:[[75,817]],7733:[[107,817]],7734:[[76,803],,{772:7736}],7735:[[108,803],,{772:7737}],7736:[[7734,772]],7737:[[7735,772]],7738:[[76,817]],7739:[[108,817]],7740:[[76,813]],7741:[[108,813]],7742:[[77,769]],7743:[[109,769]],7744:[[77,775]],7745:[[109,775]],7746:[[77,803]],7747:[[109,803]],7748:[[78,775]],7749:[[110,775]],7750:[[78,803]],7751:[[110,803]],7752:[[78,817]],7753:[[110,817]],7754:[[78,813]],7755:[[110,813]],7756:[[213,769]],7757:[[245,769]],7758:[[213,776]],7759:[[245,776]],7760:[[332,768]],7761:[[333,768]],7762:[[332,769]],7763:[[333,769]],7764:[[80,769]],7765:[[112,769]],7766:[[80,775]],7767:[[112,775]],7768:[[82,775]],7769:[[114,775]],7770:[[82,803],,{772:7772}],7771:[[114,803],,{772:7773}],7772:[[7770,772]],7773:[[7771,772]],7774:[[82,817]],7775:[[114,817]],7776:[[83,775]],7777:[[115,775]],7778:[[83,803],,{775:7784}],7779:[[115,803],,{775:7785}],7780:[[346,775]],7781:[[347,775]],7782:[[352,775]],7783:[[353,775]],7784:[[7778,775]],7785:[[7779,775]],7786:[[84,775]],7787:[[116,775]],7788:[[84,803]],7789:[[116,803]],7790:[[84,817]],7791:[[116,817]],7792:[[84,813]],7793:[[116,813]],7794:[[85,804]],7795:[[117,804]],7796:[[85,816]],7797:[[117,816]],7798:[[85,813]],7799:[[117,813]],7800:[[360,769]],7801:[[361,769]],7802:[[362,776]],7803:[[363,776]],7804:[[86,771]],7805:[[118,771]],7806:[[86,803]],7807:[[118,803]],7808:[[87,768]],7809:[[119,768]],7810:[[87,769]],7811:[[119,769]],7812:[[87,776]],7813:[[119,776]],7814:[[87,775]],7815:[[119,775]],7816:[[87,803]],7817:[[119,803]],7818:[[88,775]],7819:[[120,775]],7820:[[88,776]],7821:[[120,776]],7822:[[89,775]],7823:[[121,775]],7824:[[90,770]],7825:[[122,770]],7826:[[90,803]],7827:[[122,803]],7828:[[90,817]],7829:[[122,817]],7830:[[104,817]],7831:[[116,776]],7832:[[119,778]],7833:[[121,778]],7834:[[97,702],256],7835:[[383,775]],7840:[[65,803],,{770:7852,774:7862}],7841:[[97,803],,{770:7853,774:7863}],7842:[[65,777]],7843:[[97,777]],7844:[[194,769]],7845:[[226,769]],7846:[[194,768]],7847:[[226,768]],7848:[[194,777]],7849:[[226,777]],7850:[[194,771]],7851:[[226,771]],7852:[[7840,770]],7853:[[7841,770]],7854:[[258,769]],7855:[[259,769]],7856:[[258,768]],7857:[[259,768]],7858:[[258,777]],7859:[[259,777]],7860:[[258,771]],7861:[[259,771]],7862:[[7840,774]],7863:[[7841,774]],7864:[[69,803],,{770:7878}],7865:[[101,803],,{770:7879}],7866:[[69,777]],7867:[[101,777]],7868:[[69,771]],7869:[[101,771]],7870:[[202,769]],7871:[[234,769]],7872:[[202,768]],7873:[[234,768]],7874:[[202,777]],7875:[[234,777]],7876:[[202,771]],7877:[[234,771]],7878:[[7864,770]],7879:[[7865,770]],7880:[[73,777]],7881:[[105,777]],7882:[[73,803]],7883:[[105,803]],7884:[[79,803],,{770:7896}],7885:[[111,803],,{770:7897}],7886:[[79,777]],7887:[[111,777]],7888:[[212,769]],7889:[[244,769]],7890:[[212,768]],7891:[[244,768]],7892:[[212,777]],7893:[[244,777]],7894:[[212,771]],7895:[[244,771]],7896:[[7884,770]],7897:[[7885,770]],7898:[[416,769]],7899:[[417,769]],7900:[[416,768]],7901:[[417,768]],7902:[[416,777]],7903:[[417,777]],7904:[[416,771]],7905:[[417,771]],7906:[[416,803]],7907:[[417,803]],7908:[[85,803]],7909:[[117,803]],7910:[[85,777]],7911:[[117,777]],7912:[[431,769]],7913:[[432,769]],7914:[[431,768]],7915:[[432,768]],7916:[[431,777]],7917:[[432,777]],7918:[[431,771]],7919:[[432,771]],7920:[[431,803]],7921:[[432,803]],7922:[[89,768]],7923:[[121,768]],7924:[[89,803]],7925:[[121,803]],7926:[[89,777]],7927:[[121,777]],7928:[[89,771]],7929:[[121,771]]},\n7936:{7936:[[945,787],,{768:7938,769:7940,834:7942,837:8064}],7937:[[945,788],,{768:7939,769:7941,834:7943,837:8065}],7938:[[7936,768],,{837:8066}],7939:[[7937,768],,{837:8067}],7940:[[7936,769],,{837:8068}],7941:[[7937,769],,{837:8069}],7942:[[7936,834],,{837:8070}],7943:[[7937,834],,{837:8071}],7944:[[913,787],,{768:7946,769:7948,834:7950,837:8072}],7945:[[913,788],,{768:7947,769:7949,834:7951,837:8073}],7946:[[7944,768],,{837:8074}],7947:[[7945,768],,{837:8075}],7948:[[7944,769],,{837:8076}],7949:[[7945,769],,{837:8077}],7950:[[7944,834],,{837:8078}],7951:[[7945,834],,{837:8079}],7952:[[949,787],,{768:7954,769:7956}],7953:[[949,788],,{768:7955,769:7957}],7954:[[7952,768]],7955:[[7953,768]],7956:[[7952,769]],7957:[[7953,769]],7960:[[917,787],,{768:7962,769:7964}],7961:[[917,788],,{768:7963,769:7965}],7962:[[7960,768]],7963:[[7961,768]],7964:[[7960,769]],7965:[[7961,769]],7968:[[951,787],,{768:7970,769:7972,834:7974,837:8080}],7969:[[951,788],,{768:7971,769:7973,834:7975,837:8081}],7970:[[7968,768],,{837:8082}],7971:[[7969,768],,{837:8083}],7972:[[7968,769],,{837:8084}],7973:[[7969,769],,{837:8085}],7974:[[7968,834],,{837:8086}],7975:[[7969,834],,{837:8087}],7976:[[919,787],,{768:7978,769:7980,834:7982,837:8088}],7977:[[919,788],,{768:7979,769:7981,834:7983,837:8089}],7978:[[7976,768],,{837:8090}],7979:[[7977,768],,{837:8091}],7980:[[7976,769],,{837:8092}],7981:[[7977,769],,{837:8093}],7982:[[7976,834],,{837:8094}],7983:[[7977,834],,{837:8095}],7984:[[953,787],,{768:7986,769:7988,834:7990}],7985:[[953,788],,{768:7987,769:7989,834:7991}],7986:[[7984,768]],7987:[[7985,768]],7988:[[7984,769]],7989:[[7985,769]],7990:[[7984,834]],7991:[[7985,834]],7992:[[921,787],,{768:7994,769:7996,834:7998}],7993:[[921,788],,{768:7995,769:7997,834:7999}],7994:[[7992,768]],7995:[[7993,768]],7996:[[7992,769]],7997:[[7993,769]],7998:[[7992,834]],7999:[[7993,834]],8000:[[959,787],,{768:8002,769:8004}],8001:[[959,788],,{768:8003,769:8005}],8002:[[8000,768]],8003:[[8001,768]],8004:[[8000,769]],8005:[[8001,769]],8008:[[927,787],,{768:8010,769:8012}],8009:[[927,788],,{768:8011,769:8013}],8010:[[8008,768]],8011:[[8009,768]],8012:[[8008,769]],8013:[[8009,769]],8016:[[965,787],,{768:8018,769:8020,834:8022}],8017:[[965,788],,{768:8019,769:8021,834:8023}],8018:[[8016,768]],8019:[[8017,768]],8020:[[8016,769]],8021:[[8017,769]],8022:[[8016,834]],8023:[[8017,834]],8025:[[933,788],,{768:8027,769:8029,834:8031}],8027:[[8025,768]],8029:[[8025,769]],8031:[[8025,834]],8032:[[969,787],,{768:8034,769:8036,834:8038,837:8096}],8033:[[969,788],,{768:8035,769:8037,834:8039,837:8097}],8034:[[8032,768],,{837:8098}],8035:[[8033,768],,{837:8099}],8036:[[8032,769],,{837:8100}],8037:[[8033,769],,{837:8101}],8038:[[8032,834],,{837:8102}],8039:[[8033,834],,{837:8103}],8040:[[937,787],,{768:8042,769:8044,834:8046,837:8104}],8041:[[937,788],,{768:8043,769:8045,834:8047,837:8105}],8042:[[8040,768],,{837:8106}],8043:[[8041,768],,{837:8107}],8044:[[8040,769],,{837:8108}],8045:[[8041,769],,{837:8109}],8046:[[8040,834],,{837:8110}],8047:[[8041,834],,{837:8111}],8048:[[945,768],,{837:8114}],8049:[[940]],8050:[[949,768]],8051:[[941]],8052:[[951,768],,{837:8130}],8053:[[942]],8054:[[953,768]],8055:[[943]],8056:[[959,768]],8057:[[972]],8058:[[965,768]],8059:[[973]],8060:[[969,768],,{837:8178}],8061:[[974]],8064:[[7936,837]],8065:[[7937,837]],8066:[[7938,837]],8067:[[7939,837]],8068:[[7940,837]],8069:[[7941,837]],8070:[[7942,837]],8071:[[7943,837]],8072:[[7944,837]],8073:[[7945,837]],8074:[[7946,837]],8075:[[7947,837]],8076:[[7948,837]],8077:[[7949,837]],8078:[[7950,837]],8079:[[7951,837]],8080:[[7968,837]],8081:[[7969,837]],8082:[[7970,837]],8083:[[7971,837]],8084:[[7972,837]],8085:[[7973,837]],8086:[[7974,837]],8087:[[7975,837]],8088:[[7976,837]],8089:[[7977,837]],8090:[[7978,837]],8091:[[7979,837]],8092:[[7980,837]],8093:[[7981,837]],8094:[[7982,837]],8095:[[7983,837]],8096:[[8032,837]],8097:[[8033,837]],8098:[[8034,837]],8099:[[8035,837]],8100:[[8036,837]],8101:[[8037,837]],8102:[[8038,837]],8103:[[8039,837]],8104:[[8040,837]],8105:[[8041,837]],8106:[[8042,837]],8107:[[8043,837]],8108:[[8044,837]],8109:[[8045,837]],8110:[[8046,837]],8111:[[8047,837]],8112:[[945,774]],8113:[[945,772]],8114:[[8048,837]],8115:[[945,837]],8116:[[940,837]],8118:[[945,834],,{837:8119}],8119:[[8118,837]],8120:[[913,774]],8121:[[913,772]],8122:[[913,768]],8123:[[902]],8124:[[913,837]],8125:[[32,787],256],8126:[[953]],8127:[[32,787],256,{768:8141,769:8142,834:8143}],8128:[[32,834],256],8129:[[168,834]],8130:[[8052,837]],8131:[[951,837]],8132:[[942,837]],8134:[[951,834],,{837:8135}],8135:[[8134,837]],8136:[[917,768]],8137:[[904]],8138:[[919,768]],8139:[[905]],8140:[[919,837]],8141:[[8127,768]],8142:[[8127,769]],8143:[[8127,834]],8144:[[953,774]],8145:[[953,772]],8146:[[970,768]],8147:[[912]],8150:[[953,834]],8151:[[970,834]],8152:[[921,774]],8153:[[921,772]],8154:[[921,768]],8155:[[906]],8157:[[8190,768]],8158:[[8190,769]],8159:[[8190,834]],8160:[[965,774]],8161:[[965,772]],8162:[[971,768]],8163:[[944]],8164:[[961,787]],8165:[[961,788]],8166:[[965,834]],8167:[[971,834]],8168:[[933,774]],8169:[[933,772]],8170:[[933,768]],8171:[[910]],8172:[[929,788]],8173:[[168,768]],8174:[[901]],8175:[[96]],8178:[[8060,837]],8179:[[969,837]],8180:[[974,837]],8182:[[969,834],,{837:8183}],8183:[[8182,837]],8184:[[927,768]],8185:[[908]],8186:[[937,768]],8187:[[911]],8188:[[937,837]],8189:[[180]],8190:[[32,788],256,{768:8157,769:8158,834:8159}]},\n8192:{8192:[[8194]],8193:[[8195]],8194:[[32],256],8195:[[32],256],8196:[[32],256],8197:[[32],256],8198:[[32],256],8199:[[32],256],8200:[[32],256],8201:[[32],256],8202:[[32],256],8209:[[8208],256],8215:[[32,819],256],8228:[[46],256],8229:[[46,46],256],8230:[[46,46,46],256],8239:[[32],256],8243:[[8242,8242],256],8244:[[8242,8242,8242],256],8246:[[8245,8245],256],8247:[[8245,8245,8245],256],8252:[[33,33],256],8254:[[32,773],256],8263:[[63,63],256],8264:[[63,33],256],8265:[[33,63],256],8279:[[8242,8242,8242,8242],256],8287:[[32],256],8304:[[48],256],8305:[[105],256],8308:[[52],256],8309:[[53],256],8310:[[54],256],8311:[[55],256],8312:[[56],256],8313:[[57],256],8314:[[43],256],8315:[[8722],256],8316:[[61],256],8317:[[40],256],8318:[[41],256],8319:[[110],256],8320:[[48],256],8321:[[49],256],8322:[[50],256],8323:[[51],256],8324:[[52],256],8325:[[53],256],8326:[[54],256],8327:[[55],256],8328:[[56],256],8329:[[57],256],8330:[[43],256],8331:[[8722],256],8332:[[61],256],8333:[[40],256],8334:[[41],256],8336:[[97],256],8337:[[101],256],8338:[[111],256],8339:[[120],256],8340:[[601],256],8341:[[104],256],8342:[[107],256],8343:[[108],256],8344:[[109],256],8345:[[110],256],8346:[[112],256],8347:[[115],256],8348:[[116],256],8360:[[82,115],256],8400:[,230],8401:[,230],8402:[,1],8403:[,1],8404:[,230],8405:[,230],8406:[,230],8407:[,230],8408:[,1],8409:[,1],8410:[,1],8411:[,230],8412:[,230],8417:[,230],8421:[,1],8422:[,1],8423:[,230],8424:[,220],8425:[,230],8426:[,1],8427:[,1],8428:[,220],8429:[,220],8430:[,220],8431:[,220],8432:[,230]},\n8448:{8448:[[97,47,99],256],8449:[[97,47,115],256],8450:[[67],256],8451:[[176,67],256],8453:[[99,47,111],256],8454:[[99,47,117],256],8455:[[400],256],8457:[[176,70],256],8458:[[103],256],8459:[[72],256],8460:[[72],256],8461:[[72],256],8462:[[104],256],8463:[[295],256],8464:[[73],256],8465:[[73],256],8466:[[76],256],8467:[[108],256],8469:[[78],256],8470:[[78,111],256],8473:[[80],256],8474:[[81],256],8475:[[82],256],8476:[[82],256],8477:[[82],256],8480:[[83,77],256],8481:[[84,69,76],256],8482:[[84,77],256],8484:[[90],256],8486:[[937]],8488:[[90],256],8490:[[75]],8491:[[197]],8492:[[66],256],8493:[[67],256],8495:[[101],256],8496:[[69],256],8497:[[70],256],8499:[[77],256],8500:[[111],256],8501:[[1488],256],8502:[[1489],256],8503:[[1490],256],8504:[[1491],256],8505:[[105],256],8507:[[70,65,88],256],8508:[[960],256],8509:[[947],256],8510:[[915],256],8511:[[928],256],8512:[[8721],256],8517:[[68],256],8518:[[100],256],8519:[[101],256],8520:[[105],256],8521:[[106],256],8528:[[49,8260,55],256],8529:[[49,8260,57],256],8530:[[49,8260,49,48],256],8531:[[49,8260,51],256],8532:[[50,8260,51],256],8533:[[49,8260,53],256],8534:[[50,8260,53],256],8535:[[51,8260,53],256],8536:[[52,8260,53],256],8537:[[49,8260,54],256],8538:[[53,8260,54],256],8539:[[49,8260,56],256],8540:[[51,8260,56],256],8541:[[53,8260,56],256],8542:[[55,8260,56],256],8543:[[49,8260],256],8544:[[73],256],8545:[[73,73],256],8546:[[73,73,73],256],8547:[[73,86],256],8548:[[86],256],8549:[[86,73],256],8550:[[86,73,73],256],8551:[[86,73,73,73],256],8552:[[73,88],256],8553:[[88],256],8554:[[88,73],256],8555:[[88,73,73],256],8556:[[76],256],8557:[[67],256],8558:[[68],256],8559:[[77],256],8560:[[105],256],8561:[[105,105],256],8562:[[105,105,105],256],8563:[[105,118],256],8564:[[118],256],8565:[[118,105],256],8566:[[118,105,105],256],8567:[[118,105,105,105],256],8568:[[105,120],256],8569:[[120],256],8570:[[120,105],256],8571:[[120,105,105],256],8572:[[108],256],8573:[[99],256],8574:[[100],256],8575:[[109],256],8585:[[48,8260,51],256],8592:[,,{824:8602}],8594:[,,{824:8603}],8596:[,,{824:8622}],8602:[[8592,824]],8603:[[8594,824]],8622:[[8596,824]],8653:[[8656,824]],8654:[[8660,824]],8655:[[8658,824]],8656:[,,{824:8653}],8658:[,,{824:8655}],8660:[,,{824:8654}]},\n8704:{8707:[,,{824:8708}],8708:[[8707,824]],8712:[,,{824:8713}],8713:[[8712,824]],8715:[,,{824:8716}],8716:[[8715,824]],8739:[,,{824:8740}],8740:[[8739,824]],8741:[,,{824:8742}],8742:[[8741,824]],8748:[[8747,8747],256],8749:[[8747,8747,8747],256],8751:[[8750,8750],256],8752:[[8750,8750,8750],256],8764:[,,{824:8769}],8769:[[8764,824]],8771:[,,{824:8772}],8772:[[8771,824]],8773:[,,{824:8775}],8775:[[8773,824]],8776:[,,{824:8777}],8777:[[8776,824]],8781:[,,{824:8813}],8800:[[61,824]],8801:[,,{824:8802}],8802:[[8801,824]],8804:[,,{824:8816}],8805:[,,{824:8817}],8813:[[8781,824]],8814:[[60,824]],8815:[[62,824]],8816:[[8804,824]],8817:[[8805,824]],8818:[,,{824:8820}],8819:[,,{824:8821}],8820:[[8818,824]],8821:[[8819,824]],8822:[,,{824:8824}],8823:[,,{824:8825}],8824:[[8822,824]],8825:[[8823,824]],8826:[,,{824:8832}],8827:[,,{824:8833}],8828:[,,{824:8928}],8829:[,,{824:8929}],8832:[[8826,824]],8833:[[8827,824]],8834:[,,{824:8836}],8835:[,,{824:8837}],8836:[[8834,824]],8837:[[8835,824]],8838:[,,{824:8840}],8839:[,,{824:8841}],8840:[[8838,824]],8841:[[8839,824]],8849:[,,{824:8930}],8850:[,,{824:8931}],8866:[,,{824:8876}],8872:[,,{824:8877}],8873:[,,{824:8878}],8875:[,,{824:8879}],8876:[[8866,824]],8877:[[8872,824]],8878:[[8873,824]],8879:[[8875,824]],8882:[,,{824:8938}],8883:[,,{824:8939}],8884:[,,{824:8940}],8885:[,,{824:8941}],8928:[[8828,824]],8929:[[8829,824]],8930:[[8849,824]],8931:[[8850,824]],8938:[[8882,824]],8939:[[8883,824]],8940:[[8884,824]],8941:[[8885,824]]},\n8960:{9001:[[12296]],9002:[[12297]]},\n9216:{9312:[[49],256],9313:[[50],256],9314:[[51],256],9315:[[52],256],9316:[[53],256],9317:[[54],256],9318:[[55],256],9319:[[56],256],9320:[[57],256],9321:[[49,48],256],9322:[[49,49],256],9323:[[49,50],256],9324:[[49,51],256],9325:[[49,52],256],9326:[[49,53],256],9327:[[49,54],256],9328:[[49,55],256],9329:[[49,56],256],9330:[[49,57],256],9331:[[50,48],256],9332:[[40,49,41],256],9333:[[40,50,41],256],9334:[[40,51,41],256],9335:[[40,52,41],256],9336:[[40,53,41],256],9337:[[40,54,41],256],9338:[[40,55,41],256],9339:[[40,56,41],256],9340:[[40,57,41],256],9341:[[40,49,48,41],256],9342:[[40,49,49,41],256],9343:[[40,49,50,41],256],9344:[[40,49,51,41],256],9345:[[40,49,52,41],256],9346:[[40,49,53,41],256],9347:[[40,49,54,41],256],9348:[[40,49,55,41],256],9349:[[40,49,56,41],256],9350:[[40,49,57,41],256],9351:[[40,50,48,41],256],9352:[[49,46],256],9353:[[50,46],256],9354:[[51,46],256],9355:[[52,46],256],9356:[[53,46],256],9357:[[54,46],256],9358:[[55,46],256],9359:[[56,46],256],9360:[[57,46],256],9361:[[49,48,46],256],9362:[[49,49,46],256],9363:[[49,50,46],256],9364:[[49,51,46],256],9365:[[49,52,46],256],9366:[[49,53,46],256],9367:[[49,54,46],256],9368:[[49,55,46],256],9369:[[49,56,46],256],9370:[[49,57,46],256],9371:[[50,48,46],256],9372:[[40,97,41],256],9373:[[40,98,41],256],9374:[[40,99,41],256],9375:[[40,100,41],256],9376:[[40,101,41],256],9377:[[40,102,41],256],9378:[[40,103,41],256],9379:[[40,104,41],256],9380:[[40,105,41],256],9381:[[40,106,41],256],9382:[[40,107,41],256],9383:[[40,108,41],256],9384:[[40,109,41],256],9385:[[40,110,41],256],9386:[[40,111,41],256],9387:[[40,112,41],256],9388:[[40,113,41],256],9389:[[40,114,41],256],9390:[[40,115,41],256],9391:[[40,116,41],256],9392:[[40,117,41],256],9393:[[40,118,41],256],9394:[[40,119,41],256],9395:[[40,120,41],256],9396:[[40,121,41],256],9397:[[40,122,41],256],9398:[[65],256],9399:[[66],256],9400:[[67],256],9401:[[68],256],9402:[[69],256],9403:[[70],256],9404:[[71],256],9405:[[72],256],9406:[[73],256],9407:[[74],256],9408:[[75],256],9409:[[76],256],9410:[[77],256],9411:[[78],256],9412:[[79],256],9413:[[80],256],9414:[[81],256],9415:[[82],256],9416:[[83],256],9417:[[84],256],9418:[[85],256],9419:[[86],256],9420:[[87],256],9421:[[88],256],9422:[[89],256],9423:[[90],256],9424:[[97],256],9425:[[98],256],9426:[[99],256],9427:[[100],256],9428:[[101],256],9429:[[102],256],9430:[[103],256],9431:[[104],256],9432:[[105],256],9433:[[106],256],9434:[[107],256],9435:[[108],256],9436:[[109],256],9437:[[110],256],9438:[[111],256],9439:[[112],256],9440:[[113],256],9441:[[114],256],9442:[[115],256],9443:[[116],256],9444:[[117],256],9445:[[118],256],9446:[[119],256],9447:[[120],256],9448:[[121],256],9449:[[122],256],9450:[[48],256]},\n10752:{10764:[[8747,8747,8747,8747],256],10868:[[58,58,61],256],10869:[[61,61],256],10870:[[61,61,61],256],10972:[[10973,824],512]},\n11264:{11388:[[106],256],11389:[[86],256],11503:[,230],11504:[,230],11505:[,230]},\n11520:{11631:[[11617],256],11647:[,9],11744:[,230],11745:[,230],11746:[,230],11747:[,230],11748:[,230],11749:[,230],11750:[,230],11751:[,230],11752:[,230],11753:[,230],11754:[,230],11755:[,230],11756:[,230],11757:[,230],11758:[,230],11759:[,230],11760:[,230],11761:[,230],11762:[,230],11763:[,230],11764:[,230],11765:[,230],11766:[,230],11767:[,230],11768:[,230],11769:[,230],11770:[,230],11771:[,230],11772:[,230],11773:[,230],11774:[,230],11775:[,230]},\n11776:{11935:[[27597],256],12019:[[40863],256]},\n12032:{12032:[[19968],256],12033:[[20008],256],12034:[[20022],256],12035:[[20031],256],12036:[[20057],256],12037:[[20101],256],12038:[[20108],256],12039:[[20128],256],12040:[[20154],256],12041:[[20799],256],12042:[[20837],256],12043:[[20843],256],12044:[[20866],256],12045:[[20886],256],12046:[[20907],256],12047:[[20960],256],12048:[[20981],256],12049:[[20992],256],12050:[[21147],256],12051:[[21241],256],12052:[[21269],256],12053:[[21274],256],12054:[[21304],256],12055:[[21313],256],12056:[[21340],256],12057:[[21353],256],12058:[[21378],256],12059:[[21430],256],12060:[[21448],256],12061:[[21475],256],12062:[[22231],256],12063:[[22303],256],12064:[[22763],256],12065:[[22786],256],12066:[[22794],256],12067:[[22805],256],12068:[[22823],256],12069:[[22899],256],12070:[[23376],256],12071:[[23424],256],12072:[[23544],256],12073:[[23567],256],12074:[[23586],256],12075:[[23608],256],12076:[[23662],256],12077:[[23665],256],12078:[[24027],256],12079:[[24037],256],12080:[[24049],256],12081:[[24062],256],12082:[[24178],256],12083:[[24186],256],12084:[[24191],256],12085:[[24308],256],12086:[[24318],256],12087:[[24331],256],12088:[[24339],256],12089:[[24400],256],12090:[[24417],256],12091:[[24435],256],12092:[[24515],256],12093:[[25096],256],12094:[[25142],256],12095:[[25163],256],12096:[[25903],256],12097:[[25908],256],12098:[[25991],256],12099:[[26007],256],12100:[[26020],256],12101:[[26041],256],12102:[[26080],256],12103:[[26085],256],12104:[[26352],256],12105:[[26376],256],12106:[[26408],256],12107:[[27424],256],12108:[[27490],256],12109:[[27513],256],12110:[[27571],256],12111:[[27595],256],12112:[[27604],256],12113:[[27611],256],12114:[[27663],256],12115:[[27668],256],12116:[[27700],256],12117:[[28779],256],12118:[[29226],256],12119:[[29238],256],12120:[[29243],256],12121:[[29247],256],12122:[[29255],256],12123:[[29273],256],12124:[[29275],256],12125:[[29356],256],12126:[[29572],256],12127:[[29577],256],12128:[[29916],256],12129:[[29926],256],12130:[[29976],256],12131:[[29983],256],12132:[[29992],256],12133:[[30000],256],12134:[[30091],256],12135:[[30098],256],12136:[[30326],256],12137:[[30333],256],12138:[[30382],256],12139:[[30399],256],12140:[[30446],256],12141:[[30683],256],12142:[[30690],256],12143:[[30707],256],12144:[[31034],256],12145:[[31160],256],12146:[[31166],256],12147:[[31348],256],12148:[[31435],256],12149:[[31481],256],12150:[[31859],256],12151:[[31992],256],12152:[[32566],256],12153:[[32593],256],12154:[[32650],256],12155:[[32701],256],12156:[[32769],256],12157:[[32780],256],12158:[[32786],256],12159:[[32819],256],12160:[[32895],256],12161:[[32905],256],12162:[[33251],256],12163:[[33258],256],12164:[[33267],256],12165:[[33276],256],12166:[[33292],256],12167:[[33307],256],12168:[[33311],256],12169:[[33390],256],12170:[[33394],256],12171:[[33400],256],12172:[[34381],256],12173:[[34411],256],12174:[[34880],256],12175:[[34892],256],12176:[[34915],256],12177:[[35198],256],12178:[[35211],256],12179:[[35282],256],12180:[[35328],256],12181:[[35895],256],12182:[[35910],256],12183:[[35925],256],12184:[[35960],256],12185:[[35997],256],12186:[[36196],256],12187:[[36208],256],12188:[[36275],256],12189:[[36523],256],12190:[[36554],256],12191:[[36763],256],12192:[[36784],256],12193:[[36789],256],12194:[[37009],256],12195:[[37193],256],12196:[[37318],256],12197:[[37324],256],12198:[[37329],256],12199:[[38263],256],12200:[[38272],256],12201:[[38428],256],12202:[[38582],256],12203:[[38585],256],12204:[[38632],256],12205:[[38737],256],12206:[[38750],256],12207:[[38754],256],12208:[[38761],256],12209:[[38859],256],12210:[[38893],256],12211:[[38899],256],12212:[[38913],256],12213:[[39080],256],12214:[[39131],256],12215:[[39135],256],12216:[[39318],256],12217:[[39321],256],12218:[[39340],256],12219:[[39592],256],12220:[[39640],256],12221:[[39647],256],12222:[[39717],256],12223:[[39727],256],12224:[[39730],256],12225:[[39740],256],12226:[[39770],256],12227:[[40165],256],12228:[[40565],256],12229:[[40575],256],12230:[[40613],256],12231:[[40635],256],12232:[[40643],256],12233:[[40653],256],12234:[[40657],256],12235:[[40697],256],12236:[[40701],256],12237:[[40718],256],12238:[[40723],256],12239:[[40736],256],12240:[[40763],256],12241:[[40778],256],12242:[[40786],256],12243:[[40845],256],12244:[[40860],256],12245:[[40864],256]},\n12288:{12288:[[32],256],12330:[,218],12331:[,228],12332:[,232],12333:[,222],12334:[,224],12335:[,224],12342:[[12306],256],12344:[[21313],256],12345:[[21316],256],12346:[[21317],256],12358:[,,{12441:12436}],12363:[,,{12441:12364}],12364:[[12363,12441]],12365:[,,{12441:12366}],12366:[[12365,12441]],12367:[,,{12441:12368}],12368:[[12367,12441]],12369:[,,{12441:12370}],12370:[[12369,12441]],12371:[,,{12441:12372}],12372:[[12371,12441]],12373:[,,{12441:12374}],12374:[[12373,12441]],12375:[,,{12441:12376}],12376:[[12375,12441]],12377:[,,{12441:12378}],12378:[[12377,12441]],12379:[,,{12441:12380}],12380:[[12379,12441]],12381:[,,{12441:12382}],12382:[[12381,12441]],12383:[,,{12441:12384}],12384:[[12383,12441]],12385:[,,{12441:12386}],12386:[[12385,12441]],12388:[,,{12441:12389}],12389:[[12388,12441]],12390:[,,{12441:12391}],12391:[[12390,12441]],12392:[,,{12441:12393}],12393:[[12392,12441]],12399:[,,{12441:12400,12442:12401}],12400:[[12399,12441]],12401:[[12399,12442]],12402:[,,{12441:12403,12442:12404}],12403:[[12402,12441]],12404:[[12402,12442]],12405:[,,{12441:12406,12442:12407}],12406:[[12405,12441]],12407:[[12405,12442]],12408:[,,{12441:12409,12442:12410}],12409:[[12408,12441]],12410:[[12408,12442]],12411:[,,{12441:12412,12442:12413}],12412:[[12411,12441]],12413:[[12411,12442]],12436:[[12358,12441]],12441:[,8],12442:[,8],12443:[[32,12441],256],12444:[[32,12442],256],12445:[,,{12441:12446}],12446:[[12445,12441]],12447:[[12424,12426],256],12454:[,,{12441:12532}],12459:[,,{12441:12460}],12460:[[12459,12441]],12461:[,,{12441:12462}],12462:[[12461,12441]],12463:[,,{12441:12464}],12464:[[12463,12441]],12465:[,,{12441:12466}],12466:[[12465,12441]],12467:[,,{12441:12468}],12468:[[12467,12441]],12469:[,,{12441:12470}],12470:[[12469,12441]],12471:[,,{12441:12472}],12472:[[12471,12441]],12473:[,,{12441:12474}],12474:[[12473,12441]],12475:[,,{12441:12476}],12476:[[12475,12441]],12477:[,,{12441:12478}],12478:[[12477,12441]],12479:[,,{12441:12480}],12480:[[12479,12441]],12481:[,,{12441:12482}],12482:[[12481,12441]],12484:[,,{12441:12485}],12485:[[12484,12441]],12486:[,,{12441:12487}],12487:[[12486,12441]],12488:[,,{12441:12489}],12489:[[12488,12441]],12495:[,,{12441:12496,12442:12497}],12496:[[12495,12441]],12497:[[12495,12442]],12498:[,,{12441:12499,12442:12500}],12499:[[12498,12441]],12500:[[12498,12442]],12501:[,,{12441:12502,12442:12503}],12502:[[12501,12441]],12503:[[12501,12442]],12504:[,,{12441:12505,12442:12506}],12505:[[12504,12441]],12506:[[12504,12442]],12507:[,,{12441:12508,12442:12509}],12508:[[12507,12441]],12509:[[12507,12442]],12527:[,,{12441:12535}],12528:[,,{12441:12536}],12529:[,,{12441:12537}],12530:[,,{12441:12538}],12532:[[12454,12441]],12535:[[12527,12441]],12536:[[12528,12441]],12537:[[12529,12441]],12538:[[12530,12441]],12541:[,,{12441:12542}],12542:[[12541,12441]],12543:[[12467,12488],256]},\n12544:{12593:[[4352],256],12594:[[4353],256],12595:[[4522],256],12596:[[4354],256],12597:[[4524],256],12598:[[4525],256],12599:[[4355],256],12600:[[4356],256],12601:[[4357],256],12602:[[4528],256],12603:[[4529],256],12604:[[4530],256],12605:[[4531],256],12606:[[4532],256],12607:[[4533],256],12608:[[4378],256],12609:[[4358],256],12610:[[4359],256],12611:[[4360],256],12612:[[4385],256],12613:[[4361],256],12614:[[4362],256],12615:[[4363],256],12616:[[4364],256],12617:[[4365],256],12618:[[4366],256],12619:[[4367],256],12620:[[4368],256],12621:[[4369],256],12622:[[4370],256],12623:[[4449],256],12624:[[4450],256],12625:[[4451],256],12626:[[4452],256],12627:[[4453],256],12628:[[4454],256],12629:[[4455],256],12630:[[4456],256],12631:[[4457],256],12632:[[4458],256],12633:[[4459],256],12634:[[4460],256],12635:[[4461],256],12636:[[4462],256],12637:[[4463],256],12638:[[4464],256],12639:[[4465],256],12640:[[4466],256],12641:[[4467],256],12642:[[4468],256],12643:[[4469],256],12644:[[4448],256],12645:[[4372],256],12646:[[4373],256],12647:[[4551],256],12648:[[4552],256],12649:[[4556],256],12650:[[4558],256],12651:[[4563],256],12652:[[4567],256],12653:[[4569],256],12654:[[4380],256],12655:[[4573],256],12656:[[4575],256],12657:[[4381],256],12658:[[4382],256],12659:[[4384],256],12660:[[4386],256],12661:[[4387],256],12662:[[4391],256],12663:[[4393],256],12664:[[4395],256],12665:[[4396],256],12666:[[4397],256],12667:[[4398],256],12668:[[4399],256],12669:[[4402],256],12670:[[4406],256],12671:[[4416],256],12672:[[4423],256],12673:[[4428],256],12674:[[4593],256],12675:[[4594],256],12676:[[4439],256],12677:[[4440],256],12678:[[4441],256],12679:[[4484],256],12680:[[4485],256],12681:[[4488],256],12682:[[4497],256],12683:[[4498],256],12684:[[4500],256],12685:[[4510],256],12686:[[4513],256],12690:[[19968],256],12691:[[20108],256],12692:[[19977],256],12693:[[22235],256],12694:[[19978],256],12695:[[20013],256],12696:[[19979],256],12697:[[30002],256],12698:[[20057],256],12699:[[19993],256],12700:[[19969],256],12701:[[22825],256],12702:[[22320],256],12703:[[20154],256]},\n12800:{12800:[[40,4352,41],256],12801:[[40,4354,41],256],12802:[[40,4355,41],256],12803:[[40,4357,41],256],12804:[[40,4358,41],256],12805:[[40,4359,41],256],12806:[[40,4361,41],256],12807:[[40,4363,41],256],12808:[[40,4364,41],256],12809:[[40,4366,41],256],12810:[[40,4367,41],256],12811:[[40,4368,41],256],12812:[[40,4369,41],256],12813:[[40,4370,41],256],12814:[[40,4352,4449,41],256],12815:[[40,4354,4449,41],256],12816:[[40,4355,4449,41],256],12817:[[40,4357,4449,41],256],12818:[[40,4358,4449,41],256],12819:[[40,4359,4449,41],256],12820:[[40,4361,4449,41],256],12821:[[40,4363,4449,41],256],12822:[[40,4364,4449,41],256],12823:[[40,4366,4449,41],256],12824:[[40,4367,4449,41],256],12825:[[40,4368,4449,41],256],12826:[[40,4369,4449,41],256],12827:[[40,4370,4449,41],256],12828:[[40,4364,4462,41],256],12829:[[40,4363,4457,4364,4453,4523,41],256],12830:[[40,4363,4457,4370,4462,41],256],12832:[[40,19968,41],256],12833:[[40,20108,41],256],12834:[[40,19977,41],256],12835:[[40,22235,41],256],12836:[[40,20116,41],256],12837:[[40,20845,41],256],12838:[[40,19971,41],256],12839:[[40,20843,41],256],12840:[[40,20061,41],256],12841:[[40,21313,41],256],12842:[[40,26376,41],256],12843:[[40,28779,41],256],12844:[[40,27700,41],256],12845:[[40,26408,41],256],12846:[[40,37329,41],256],12847:[[40,22303,41],256],12848:[[40,26085,41],256],12849:[[40,26666,41],256],12850:[[40,26377,41],256],12851:[[40,31038,41],256],12852:[[40,21517,41],256],12853:[[40,29305,41],256],12854:[[40,36001,41],256],12855:[[40,31069,41],256],12856:[[40,21172,41],256],12857:[[40,20195,41],256],12858:[[40,21628,41],256],12859:[[40,23398,41],256],12860:[[40,30435,41],256],12861:[[40,20225,41],256],12862:[[40,36039,41],256],12863:[[40,21332,41],256],12864:[[40,31085,41],256],12865:[[40,20241,41],256],12866:[[40,33258,41],256],12867:[[40,33267,41],256],12868:[[21839],256],12869:[[24188],256],12870:[[25991],256],12871:[[31631],256],12880:[[80,84,69],256],12881:[[50,49],256],12882:[[50,50],256],12883:[[50,51],256],12884:[[50,52],256],12885:[[50,53],256],12886:[[50,54],256],12887:[[50,55],256],12888:[[50,56],256],12889:[[50,57],256],12890:[[51,48],256],12891:[[51,49],256],12892:[[51,50],256],12893:[[51,51],256],12894:[[51,52],256],12895:[[51,53],256],12896:[[4352],256],12897:[[4354],256],12898:[[4355],256],12899:[[4357],256],12900:[[4358],256],12901:[[4359],256],12902:[[4361],256],12903:[[4363],256],12904:[[4364],256],12905:[[4366],256],12906:[[4367],256],12907:[[4368],256],12908:[[4369],256],12909:[[4370],256],12910:[[4352,4449],256],12911:[[4354,4449],256],12912:[[4355,4449],256],12913:[[4357,4449],256],12914:[[4358,4449],256],12915:[[4359,4449],256],12916:[[4361,4449],256],12917:[[4363,4449],256],12918:[[4364,4449],256],12919:[[4366,4449],256],12920:[[4367,4449],256],12921:[[4368,4449],256],12922:[[4369,4449],256],12923:[[4370,4449],256],12924:[[4366,4449,4535,4352,4457],256],12925:[[4364,4462,4363,4468],256],12926:[[4363,4462],256],12928:[[19968],256],12929:[[20108],256],12930:[[19977],256],12931:[[22235],256],12932:[[20116],256],12933:[[20845],256],12934:[[19971],256],12935:[[20843],256],12936:[[20061],256],12937:[[21313],256],12938:[[26376],256],12939:[[28779],256],12940:[[27700],256],12941:[[26408],256],12942:[[37329],256],12943:[[22303],256],12944:[[26085],256],12945:[[26666],256],12946:[[26377],256],12947:[[31038],256],12948:[[21517],256],12949:[[29305],256],12950:[[36001],256],12951:[[31069],256],12952:[[21172],256],12953:[[31192],256],12954:[[30007],256],12955:[[22899],256],12956:[[36969],256],12957:[[20778],256],12958:[[21360],256],12959:[[27880],256],12960:[[38917],256],12961:[[20241],256],12962:[[20889],256],12963:[[27491],256],12964:[[19978],256],12965:[[20013],256],12966:[[19979],256],12967:[[24038],256],12968:[[21491],256],12969:[[21307],256],12970:[[23447],256],12971:[[23398],256],12972:[[30435],256],12973:[[20225],256],12974:[[36039],256],12975:[[21332],256],12976:[[22812],256],12977:[[51,54],256],12978:[[51,55],256],12979:[[51,56],256],12980:[[51,57],256],12981:[[52,48],256],12982:[[52,49],256],12983:[[52,50],256],12984:[[52,51],256],12985:[[52,52],256],12986:[[52,53],256],12987:[[52,54],256],12988:[[52,55],256],12989:[[52,56],256],12990:[[52,57],256],12991:[[53,48],256],12992:[[49,26376],256],12993:[[50,26376],256],12994:[[51,26376],256],12995:[[52,26376],256],12996:[[53,26376],256],12997:[[54,26376],256],12998:[[55,26376],256],12999:[[56,26376],256],13000:[[57,26376],256],13001:[[49,48,26376],256],13002:[[49,49,26376],256],13003:[[49,50,26376],256],13004:[[72,103],256],13005:[[101,114,103],256],13006:[[101,86],256],13007:[[76,84,68],256],13008:[[12450],256],13009:[[12452],256],13010:[[12454],256],13011:[[12456],256],13012:[[12458],256],13013:[[12459],256],13014:[[12461],256],13015:[[12463],256],13016:[[12465],256],13017:[[12467],256],13018:[[12469],256],13019:[[12471],256],13020:[[12473],256],13021:[[12475],256],13022:[[12477],256],13023:[[12479],256],13024:[[12481],256],13025:[[12484],256],13026:[[12486],256],13027:[[12488],256],13028:[[12490],256],13029:[[12491],256],13030:[[12492],256],13031:[[12493],256],13032:[[12494],256],13033:[[12495],256],13034:[[12498],256],13035:[[12501],256],13036:[[12504],256],13037:[[12507],256],13038:[[12510],256],13039:[[12511],256],13040:[[12512],256],13041:[[12513],256],13042:[[12514],256],13043:[[12516],256],13044:[[12518],256],13045:[[12520],256],13046:[[12521],256],13047:[[12522],256],13048:[[12523],256],13049:[[12524],256],13050:[[12525],256],13051:[[12527],256],13052:[[12528],256],13053:[[12529],256],13054:[[12530],256]},\n13056:{13056:[[12450,12497,12540,12488],256],13057:[[12450,12523,12501,12449],256],13058:[[12450,12531,12506,12450],256],13059:[[12450,12540,12523],256],13060:[[12452,12491,12531,12464],256],13061:[[12452,12531,12481],256],13062:[[12454,12457,12531],256],13063:[[12456,12473,12463,12540,12489],256],13064:[[12456,12540,12459,12540],256],13065:[[12458,12531,12473],256],13066:[[12458,12540,12512],256],13067:[[12459,12452,12522],256],13068:[[12459,12521,12483,12488],256],13069:[[12459,12525,12522,12540],256],13070:[[12460,12525,12531],256],13071:[[12460,12531,12510],256],13072:[[12462,12460],256],13073:[[12462,12491,12540],256],13074:[[12461,12517,12522,12540],256],13075:[[12462,12523,12480,12540],256],13076:[[12461,12525],256],13077:[[12461,12525,12464,12521,12512],256],13078:[[12461,12525,12513,12540,12488,12523],256],13079:[[12461,12525,12527,12483,12488],256],13080:[[12464,12521,12512],256],13081:[[12464,12521,12512,12488,12531],256],13082:[[12463,12523,12476,12452,12525],256],13083:[[12463,12525,12540,12493],256],13084:[[12465,12540,12473],256],13085:[[12467,12523,12490],256],13086:[[12467,12540,12509],256],13087:[[12469,12452,12463,12523],256],13088:[[12469,12531,12481,12540,12512],256],13089:[[12471,12522,12531,12464],256],13090:[[12475,12531,12481],256],13091:[[12475,12531,12488],256],13092:[[12480,12540,12473],256],13093:[[12487,12471],256],13094:[[12489,12523],256],13095:[[12488,12531],256],13096:[[12490,12494],256],13097:[[12494,12483,12488],256],13098:[[12495,12452,12484],256],13099:[[12497,12540,12475,12531,12488],256],13100:[[12497,12540,12484],256],13101:[[12496,12540,12524,12523],256],13102:[[12500,12450,12473,12488,12523],256],13103:[[12500,12463,12523],256],13104:[[12500,12467],256],13105:[[12499,12523],256],13106:[[12501,12449,12521,12483,12489],256],13107:[[12501,12451,12540,12488],256],13108:[[12502,12483,12471,12455,12523],256],13109:[[12501,12521,12531],256],13110:[[12504,12463,12479,12540,12523],256],13111:[[12506,12477],256],13112:[[12506,12491,12498],256],13113:[[12504,12523,12484],256],13114:[[12506,12531,12473],256],13115:[[12506,12540,12472],256],13116:[[12505,12540,12479],256],13117:[[12509,12452,12531,12488],256],13118:[[12508,12523,12488],256],13119:[[12507,12531],256],13120:[[12509,12531,12489],256],13121:[[12507,12540,12523],256],13122:[[12507,12540,12531],256],13123:[[12510,12452,12463,12525],256],13124:[[12510,12452,12523],256],13125:[[12510,12483,12495],256],13126:[[12510,12523,12463],256],13127:[[12510,12531,12471,12519,12531],256],13128:[[12511,12463,12525,12531],256],13129:[[12511,12522],256],13130:[[12511,12522,12496,12540,12523],256],13131:[[12513,12460],256],13132:[[12513,12460,12488,12531],256],13133:[[12513,12540,12488,12523],256],13134:[[12516,12540,12489],256],13135:[[12516,12540,12523],256],13136:[[12518,12450,12531],256],13137:[[12522,12483,12488,12523],256],13138:[[12522,12521],256],13139:[[12523,12500,12540],256],13140:[[12523,12540,12502,12523],256],13141:[[12524,12512],256],13142:[[12524,12531,12488,12466,12531],256],13143:[[12527,12483,12488],256],13144:[[48,28857],256],13145:[[49,28857],256],13146:[[50,28857],256],13147:[[51,28857],256],13148:[[52,28857],256],13149:[[53,28857],256],13150:[[54,28857],256],13151:[[55,28857],256],13152:[[56,28857],256],13153:[[57,28857],256],13154:[[49,48,28857],256],13155:[[49,49,28857],256],13156:[[49,50,28857],256],13157:[[49,51,28857],256],13158:[[49,52,28857],256],13159:[[49,53,28857],256],13160:[[49,54,28857],256],13161:[[49,55,28857],256],13162:[[49,56,28857],256],13163:[[49,57,28857],256],13164:[[50,48,28857],256],13165:[[50,49,28857],256],13166:[[50,50,28857],256],13167:[[50,51,28857],256],13168:[[50,52,28857],256],13169:[[104,80,97],256],13170:[[100,97],256],13171:[[65,85],256],13172:[[98,97,114],256],13173:[[111,86],256],13174:[[112,99],256],13175:[[100,109],256],13176:[[100,109,178],256],13177:[[100,109,179],256],13178:[[73,85],256],13179:[[24179,25104],256],13180:[[26157,21644],256],13181:[[22823,27491],256],13182:[[26126,27835],256],13183:[[26666,24335,20250,31038],256],13184:[[112,65],256],13185:[[110,65],256],13186:[[956,65],256],13187:[[109,65],256],13188:[[107,65],256],13189:[[75,66],256],13190:[[77,66],256],13191:[[71,66],256],13192:[[99,97,108],256],13193:[[107,99,97,108],256],13194:[[112,70],256],13195:[[110,70],256],13196:[[956,70],256],13197:[[956,103],256],13198:[[109,103],256],13199:[[107,103],256],13200:[[72,122],256],13201:[[107,72,122],256],13202:[[77,72,122],256],13203:[[71,72,122],256],13204:[[84,72,122],256],13205:[[956,8467],256],13206:[[109,8467],256],13207:[[100,8467],256],13208:[[107,8467],256],13209:[[102,109],256],13210:[[110,109],256],13211:[[956,109],256],13212:[[109,109],256],13213:[[99,109],256],13214:[[107,109],256],13215:[[109,109,178],256],13216:[[99,109,178],256],13217:[[109,178],256],13218:[[107,109,178],256],13219:[[109,109,179],256],13220:[[99,109,179],256],13221:[[109,179],256],13222:[[107,109,179],256],13223:[[109,8725,115],256],13224:[[109,8725,115,178],256],13225:[[80,97],256],13226:[[107,80,97],256],13227:[[77,80,97],256],13228:[[71,80,97],256],13229:[[114,97,100],256],13230:[[114,97,100,8725,115],256],13231:[[114,97,100,8725,115,178],256],13232:[[112,115],256],13233:[[110,115],256],13234:[[956,115],256],13235:[[109,115],256],13236:[[112,86],256],13237:[[110,86],256],13238:[[956,86],256],13239:[[109,86],256],13240:[[107,86],256],13241:[[77,86],256],13242:[[112,87],256],13243:[[110,87],256],13244:[[956,87],256],13245:[[109,87],256],13246:[[107,87],256],13247:[[77,87],256],13248:[[107,937],256],13249:[[77,937],256],13250:[[97,46,109,46],256],13251:[[66,113],256],13252:[[99,99],256],13253:[[99,100],256],13254:[[67,8725,107,103],256],13255:[[67,111,46],256],13256:[[100,66],256],13257:[[71,121],256],13258:[[104,97],256],13259:[[72,80],256],13260:[[105,110],256],13261:[[75,75],256],13262:[[75,77],256],13263:[[107,116],256],13264:[[108,109],256],13265:[[108,110],256],13266:[[108,111,103],256],13267:[[108,120],256],13268:[[109,98],256],13269:[[109,105,108],256],13270:[[109,111,108],256],13271:[[80,72],256],13272:[[112,46,109,46],256],13273:[[80,80,77],256],13274:[[80,82],256],13275:[[115,114],256],13276:[[83,118],256],13277:[[87,98],256],13278:[[86,8725,109],256],13279:[[65,8725,109],256],13280:[[49,26085],256],13281:[[50,26085],256],13282:[[51,26085],256],13283:[[52,26085],256],13284:[[53,26085],256],13285:[[54,26085],256],13286:[[55,26085],256],13287:[[56,26085],256],13288:[[57,26085],256],13289:[[49,48,26085],256],13290:[[49,49,26085],256],13291:[[49,50,26085],256],13292:[[49,51,26085],256],13293:[[49,52,26085],256],13294:[[49,53,26085],256],13295:[[49,54,26085],256],13296:[[49,55,26085],256],13297:[[49,56,26085],256],13298:[[49,57,26085],256],13299:[[50,48,26085],256],13300:[[50,49,26085],256],13301:[[50,50,26085],256],13302:[[50,51,26085],256],13303:[[50,52,26085],256],13304:[[50,53,26085],256],13305:[[50,54,26085],256],13306:[[50,55,26085],256],13307:[[50,56,26085],256],13308:[[50,57,26085],256],13309:[[51,48,26085],256],13310:[[51,49,26085],256],13311:[[103,97,108],256]},\n27136:{92912:[,1],92913:[,1],92914:[,1],92915:[,1],92916:[,1]},\n27392:{92976:[,230],92977:[,230],92978:[,230],92979:[,230],92980:[,230],92981:[,230],92982:[,230]},\n42496:{42607:[,230],42612:[,230],42613:[,230],42614:[,230],42615:[,230],42616:[,230],42617:[,230],42618:[,230],42619:[,230],42620:[,230],42621:[,230],42652:[[1098],256],42653:[[1100],256],42655:[,230],42736:[,230],42737:[,230]},\n42752:{42864:[[42863],256],43000:[[294],256],43001:[[339],256]},\n43008:{43014:[,9],43204:[,9],43232:[,230],43233:[,230],43234:[,230],43235:[,230],43236:[,230],43237:[,230],43238:[,230],43239:[,230],43240:[,230],43241:[,230],43242:[,230],43243:[,230],43244:[,230],43245:[,230],43246:[,230],43247:[,230],43248:[,230],43249:[,230]},\n43264:{43307:[,220],43308:[,220],43309:[,220],43347:[,9],43443:[,7],43456:[,9]},\n43520:{43696:[,230],43698:[,230],43699:[,230],43700:[,220],43703:[,230],43704:[,230],43710:[,230],43711:[,230],43713:[,230],43766:[,9]},\n43776:{43868:[[42791],256],43869:[[43831],256],43870:[[619],256],43871:[[43858],256],44013:[,9]},\n48128:{113822:[,1]},\n53504:{119134:[[119127,119141],512],119135:[[119128,119141],512],119136:[[119135,119150],512],119137:[[119135,119151],512],119138:[[119135,119152],512],119139:[[119135,119153],512],119140:[[119135,119154],512],119141:[,216],119142:[,216],119143:[,1],119144:[,1],119145:[,1],119149:[,226],119150:[,216],119151:[,216],119152:[,216],119153:[,216],119154:[,216],119163:[,220],119164:[,220],119165:[,220],119166:[,220],119167:[,220],119168:[,220],119169:[,220],119170:[,220],119173:[,230],119174:[,230],119175:[,230],119176:[,230],119177:[,230],119178:[,220],119179:[,220],119210:[,230],119211:[,230],119212:[,230],119213:[,230],119227:[[119225,119141],512],119228:[[119226,119141],512],119229:[[119227,119150],512],119230:[[119228,119150],512],119231:[[119227,119151],512],119232:[[119228,119151],512]},\n53760:{119362:[,230],119363:[,230],119364:[,230]},\n54272:{119808:[[65],256],119809:[[66],256],119810:[[67],256],119811:[[68],256],119812:[[69],256],119813:[[70],256],119814:[[71],256],119815:[[72],256],119816:[[73],256],119817:[[74],256],119818:[[75],256],119819:[[76],256],119820:[[77],256],119821:[[78],256],119822:[[79],256],119823:[[80],256],119824:[[81],256],119825:[[82],256],119826:[[83],256],119827:[[84],256],119828:[[85],256],119829:[[86],256],119830:[[87],256],119831:[[88],256],119832:[[89],256],119833:[[90],256],119834:[[97],256],119835:[[98],256],119836:[[99],256],119837:[[100],256],119838:[[101],256],119839:[[102],256],119840:[[103],256],119841:[[104],256],119842:[[105],256],119843:[[106],256],119844:[[107],256],119845:[[108],256],119846:[[109],256],119847:[[110],256],119848:[[111],256],119849:[[112],256],119850:[[113],256],119851:[[114],256],119852:[[115],256],119853:[[116],256],119854:[[117],256],119855:[[118],256],119856:[[119],256],119857:[[120],256],119858:[[121],256],119859:[[122],256],119860:[[65],256],119861:[[66],256],119862:[[67],256],119863:[[68],256],119864:[[69],256],119865:[[70],256],119866:[[71],256],119867:[[72],256],119868:[[73],256],119869:[[74],256],119870:[[75],256],119871:[[76],256],119872:[[77],256],119873:[[78],256],119874:[[79],256],119875:[[80],256],119876:[[81],256],119877:[[82],256],119878:[[83],256],119879:[[84],256],119880:[[85],256],119881:[[86],256],119882:[[87],256],119883:[[88],256],119884:[[89],256],119885:[[90],256],119886:[[97],256],119887:[[98],256],119888:[[99],256],119889:[[100],256],119890:[[101],256],119891:[[102],256],119892:[[103],256],119894:[[105],256],119895:[[106],256],119896:[[107],256],119897:[[108],256],119898:[[109],256],119899:[[110],256],119900:[[111],256],119901:[[112],256],119902:[[113],256],119903:[[114],256],119904:[[115],256],119905:[[116],256],119906:[[117],256],119907:[[118],256],119908:[[119],256],119909:[[120],256],119910:[[121],256],119911:[[122],256],119912:[[65],256],119913:[[66],256],119914:[[67],256],119915:[[68],256],119916:[[69],256],119917:[[70],256],119918:[[71],256],119919:[[72],256],119920:[[73],256],119921:[[74],256],119922:[[75],256],119923:[[76],256],119924:[[77],256],119925:[[78],256],119926:[[79],256],119927:[[80],256],119928:[[81],256],119929:[[82],256],119930:[[83],256],119931:[[84],256],119932:[[85],256],119933:[[86],256],119934:[[87],256],119935:[[88],256],119936:[[89],256],119937:[[90],256],119938:[[97],256],119939:[[98],256],119940:[[99],256],119941:[[100],256],119942:[[101],256],119943:[[102],256],119944:[[103],256],119945:[[104],256],119946:[[105],256],119947:[[106],256],119948:[[107],256],119949:[[108],256],119950:[[109],256],119951:[[110],256],119952:[[111],256],119953:[[112],256],119954:[[113],256],119955:[[114],256],119956:[[115],256],119957:[[116],256],119958:[[117],256],119959:[[118],256],119960:[[119],256],119961:[[120],256],119962:[[121],256],119963:[[122],256],119964:[[65],256],119966:[[67],256],119967:[[68],256],119970:[[71],256],119973:[[74],256],119974:[[75],256],119977:[[78],256],119978:[[79],256],119979:[[80],256],119980:[[81],256],119982:[[83],256],119983:[[84],256],119984:[[85],256],119985:[[86],256],119986:[[87],256],119987:[[88],256],119988:[[89],256],119989:[[90],256],119990:[[97],256],119991:[[98],256],119992:[[99],256],119993:[[100],256],119995:[[102],256],119997:[[104],256],119998:[[105],256],119999:[[106],256],120000:[[107],256],120001:[[108],256],120002:[[109],256],120003:[[110],256],120005:[[112],256],120006:[[113],256],120007:[[114],256],120008:[[115],256],120009:[[116],256],120010:[[117],256],120011:[[118],256],120012:[[119],256],120013:[[120],256],120014:[[121],256],120015:[[122],256],120016:[[65],256],120017:[[66],256],120018:[[67],256],120019:[[68],256],120020:[[69],256],120021:[[70],256],120022:[[71],256],120023:[[72],256],120024:[[73],256],120025:[[74],256],120026:[[75],256],120027:[[76],256],120028:[[77],256],120029:[[78],256],120030:[[79],256],120031:[[80],256],120032:[[81],256],120033:[[82],256],120034:[[83],256],120035:[[84],256],120036:[[85],256],120037:[[86],256],120038:[[87],256],120039:[[88],256],120040:[[89],256],120041:[[90],256],120042:[[97],256],120043:[[98],256],120044:[[99],256],120045:[[100],256],120046:[[101],256],120047:[[102],256],120048:[[103],256],120049:[[104],256],120050:[[105],256],120051:[[106],256],120052:[[107],256],120053:[[108],256],120054:[[109],256],120055:[[110],256],120056:[[111],256],120057:[[112],256],120058:[[113],256],120059:[[114],256],120060:[[115],256],120061:[[116],256],120062:[[117],256],120063:[[118],256]},\n54528:{120064:[[119],256],120065:[[120],256],120066:[[121],256],120067:[[122],256],120068:[[65],256],120069:[[66],256],120071:[[68],256],120072:[[69],256],120073:[[70],256],120074:[[71],256],120077:[[74],256],120078:[[75],256],120079:[[76],256],120080:[[77],256],120081:[[78],256],120082:[[79],256],120083:[[80],256],120084:[[81],256],120086:[[83],256],120087:[[84],256],120088:[[85],256],120089:[[86],256],120090:[[87],256],120091:[[88],256],120092:[[89],256],120094:[[97],256],120095:[[98],256],120096:[[99],256],120097:[[100],256],120098:[[101],256],120099:[[102],256],120100:[[103],256],120101:[[104],256],120102:[[105],256],120103:[[106],256],120104:[[107],256],120105:[[108],256],120106:[[109],256],120107:[[110],256],120108:[[111],256],120109:[[112],256],120110:[[113],256],120111:[[114],256],120112:[[115],256],120113:[[116],256],120114:[[117],256],120115:[[118],256],120116:[[119],256],120117:[[120],256],120118:[[121],256],120119:[[122],256],120120:[[65],256],120121:[[66],256],120123:[[68],256],120124:[[69],256],120125:[[70],256],120126:[[71],256],120128:[[73],256],120129:[[74],256],120130:[[75],256],120131:[[76],256],120132:[[77],256],120134:[[79],256],120138:[[83],256],120139:[[84],256],120140:[[85],256],120141:[[86],256],120142:[[87],256],120143:[[88],256],120144:[[89],256],120146:[[97],256],120147:[[98],256],120148:[[99],256],120149:[[100],256],120150:[[101],256],120151:[[102],256],120152:[[103],256],120153:[[104],256],120154:[[105],256],120155:[[106],256],120156:[[107],256],120157:[[108],256],120158:[[109],256],120159:[[110],256],120160:[[111],256],120161:[[112],256],120162:[[113],256],120163:[[114],256],120164:[[115],256],120165:[[116],256],120166:[[117],256],120167:[[118],256],120168:[[119],256],120169:[[120],256],120170:[[121],256],120171:[[122],256],120172:[[65],256],120173:[[66],256],120174:[[67],256],120175:[[68],256],120176:[[69],256],120177:[[70],256],120178:[[71],256],120179:[[72],256],120180:[[73],256],120181:[[74],256],120182:[[75],256],120183:[[76],256],120184:[[77],256],120185:[[78],256],120186:[[79],256],120187:[[80],256],120188:[[81],256],120189:[[82],256],120190:[[83],256],120191:[[84],256],120192:[[85],256],120193:[[86],256],120194:[[87],256],120195:[[88],256],120196:[[89],256],120197:[[90],256],120198:[[97],256],120199:[[98],256],120200:[[99],256],120201:[[100],256],120202:[[101],256],120203:[[102],256],120204:[[103],256],120205:[[104],256],120206:[[105],256],120207:[[106],256],120208:[[107],256],120209:[[108],256],120210:[[109],256],120211:[[110],256],120212:[[111],256],120213:[[112],256],120214:[[113],256],120215:[[114],256],120216:[[115],256],120217:[[116],256],120218:[[117],256],120219:[[118],256],120220:[[119],256],120221:[[120],256],120222:[[121],256],120223:[[122],256],120224:[[65],256],120225:[[66],256],120226:[[67],256],120227:[[68],256],120228:[[69],256],120229:[[70],256],120230:[[71],256],120231:[[72],256],120232:[[73],256],120233:[[74],256],120234:[[75],256],120235:[[76],256],120236:[[77],256],120237:[[78],256],120238:[[79],256],120239:[[80],256],120240:[[81],256],120241:[[82],256],120242:[[83],256],120243:[[84],256],120244:[[85],256],120245:[[86],256],120246:[[87],256],120247:[[88],256],120248:[[89],256],120249:[[90],256],120250:[[97],256],120251:[[98],256],120252:[[99],256],120253:[[100],256],120254:[[101],256],120255:[[102],256],120256:[[103],256],120257:[[104],256],120258:[[105],256],120259:[[106],256],120260:[[107],256],120261:[[108],256],120262:[[109],256],120263:[[110],256],120264:[[111],256],120265:[[112],256],120266:[[113],256],120267:[[114],256],120268:[[115],256],120269:[[116],256],120270:[[117],256],120271:[[118],256],120272:[[119],256],120273:[[120],256],120274:[[121],256],120275:[[122],256],120276:[[65],256],120277:[[66],256],120278:[[67],256],120279:[[68],256],120280:[[69],256],120281:[[70],256],120282:[[71],256],120283:[[72],256],120284:[[73],256],120285:[[74],256],120286:[[75],256],120287:[[76],256],120288:[[77],256],120289:[[78],256],120290:[[79],256],120291:[[80],256],120292:[[81],256],120293:[[82],256],120294:[[83],256],120295:[[84],256],120296:[[85],256],120297:[[86],256],120298:[[87],256],120299:[[88],256],120300:[[89],256],120301:[[90],256],120302:[[97],256],120303:[[98],256],120304:[[99],256],120305:[[100],256],120306:[[101],256],120307:[[102],256],120308:[[103],256],120309:[[104],256],120310:[[105],256],120311:[[106],256],120312:[[107],256],120313:[[108],256],120314:[[109],256],120315:[[110],256],120316:[[111],256],120317:[[112],256],120318:[[113],256],120319:[[114],256]},\n54784:{120320:[[115],256],120321:[[116],256],120322:[[117],256],120323:[[118],256],120324:[[119],256],120325:[[120],256],120326:[[121],256],120327:[[122],256],120328:[[65],256],120329:[[66],256],120330:[[67],256],120331:[[68],256],120332:[[69],256],120333:[[70],256],120334:[[71],256],120335:[[72],256],120336:[[73],256],120337:[[74],256],120338:[[75],256],120339:[[76],256],120340:[[77],256],120341:[[78],256],120342:[[79],256],120343:[[80],256],120344:[[81],256],120345:[[82],256],120346:[[83],256],120347:[[84],256],120348:[[85],256],120349:[[86],256],120350:[[87],256],120351:[[88],256],120352:[[89],256],120353:[[90],256],120354:[[97],256],120355:[[98],256],120356:[[99],256],120357:[[100],256],120358:[[101],256],120359:[[102],256],120360:[[103],256],120361:[[104],256],120362:[[105],256],120363:[[106],256],120364:[[107],256],120365:[[108],256],120366:[[109],256],120367:[[110],256],120368:[[111],256],120369:[[112],256],120370:[[113],256],120371:[[114],256],120372:[[115],256],120373:[[116],256],120374:[[117],256],120375:[[118],256],120376:[[119],256],120377:[[120],256],120378:[[121],256],120379:[[122],256],120380:[[65],256],120381:[[66],256],120382:[[67],256],120383:[[68],256],120384:[[69],256],120385:[[70],256],120386:[[71],256],120387:[[72],256],120388:[[73],256],120389:[[74],256],120390:[[75],256],120391:[[76],256],120392:[[77],256],120393:[[78],256],120394:[[79],256],120395:[[80],256],120396:[[81],256],120397:[[82],256],120398:[[83],256],120399:[[84],256],120400:[[85],256],120401:[[86],256],120402:[[87],256],120403:[[88],256],120404:[[89],256],120405:[[90],256],120406:[[97],256],120407:[[98],256],120408:[[99],256],120409:[[100],256],120410:[[101],256],120411:[[102],256],120412:[[103],256],120413:[[104],256],120414:[[105],256],120415:[[106],256],120416:[[107],256],120417:[[108],256],120418:[[109],256],120419:[[110],256],120420:[[111],256],120421:[[112],256],120422:[[113],256],120423:[[114],256],120424:[[115],256],120425:[[116],256],120426:[[117],256],120427:[[118],256],120428:[[119],256],120429:[[120],256],120430:[[121],256],120431:[[122],256],120432:[[65],256],120433:[[66],256],120434:[[67],256],120435:[[68],256],120436:[[69],256],120437:[[70],256],120438:[[71],256],120439:[[72],256],120440:[[73],256],120441:[[74],256],120442:[[75],256],120443:[[76],256],120444:[[77],256],120445:[[78],256],120446:[[79],256],120447:[[80],256],120448:[[81],256],120449:[[82],256],120450:[[83],256],120451:[[84],256],120452:[[85],256],120453:[[86],256],120454:[[87],256],120455:[[88],256],120456:[[89],256],120457:[[90],256],120458:[[97],256],120459:[[98],256],120460:[[99],256],120461:[[100],256],120462:[[101],256],120463:[[102],256],120464:[[103],256],120465:[[104],256],120466:[[105],256],120467:[[106],256],120468:[[107],256],120469:[[108],256],120470:[[109],256],120471:[[110],256],120472:[[111],256],120473:[[112],256],120474:[[113],256],120475:[[114],256],120476:[[115],256],120477:[[116],256],120478:[[117],256],120479:[[118],256],120480:[[119],256],120481:[[120],256],120482:[[121],256],120483:[[122],256],120484:[[305],256],120485:[[567],256],120488:[[913],256],120489:[[914],256],120490:[[915],256],120491:[[916],256],120492:[[917],256],120493:[[918],256],120494:[[919],256],120495:[[920],256],120496:[[921],256],120497:[[922],256],120498:[[923],256],120499:[[924],256],120500:[[925],256],120501:[[926],256],120502:[[927],256],120503:[[928],256],120504:[[929],256],120505:[[1012],256],120506:[[931],256],120507:[[932],256],120508:[[933],256],120509:[[934],256],120510:[[935],256],120511:[[936],256],120512:[[937],256],120513:[[8711],256],120514:[[945],256],120515:[[946],256],120516:[[947],256],120517:[[948],256],120518:[[949],256],120519:[[950],256],120520:[[951],256],120521:[[952],256],120522:[[953],256],120523:[[954],256],120524:[[955],256],120525:[[956],256],120526:[[957],256],120527:[[958],256],120528:[[959],256],120529:[[960],256],120530:[[961],256],120531:[[962],256],120532:[[963],256],120533:[[964],256],120534:[[965],256],120535:[[966],256],120536:[[967],256],120537:[[968],256],120538:[[969],256],120539:[[8706],256],120540:[[1013],256],120541:[[977],256],120542:[[1008],256],120543:[[981],256],120544:[[1009],256],120545:[[982],256],120546:[[913],256],120547:[[914],256],120548:[[915],256],120549:[[916],256],120550:[[917],256],120551:[[918],256],120552:[[919],256],120553:[[920],256],120554:[[921],256],120555:[[922],256],120556:[[923],256],120557:[[924],256],120558:[[925],256],120559:[[926],256],120560:[[927],256],120561:[[928],256],120562:[[929],256],120563:[[1012],256],120564:[[931],256],120565:[[932],256],120566:[[933],256],120567:[[934],256],120568:[[935],256],120569:[[936],256],120570:[[937],256],120571:[[8711],256],120572:[[945],256],120573:[[946],256],120574:[[947],256],120575:[[948],256]},\n55040:{120576:[[949],256],120577:[[950],256],120578:[[951],256],120579:[[952],256],120580:[[953],256],120581:[[954],256],120582:[[955],256],120583:[[956],256],120584:[[957],256],120585:[[958],256],120586:[[959],256],120587:[[960],256],120588:[[961],256],120589:[[962],256],120590:[[963],256],120591:[[964],256],120592:[[965],256],120593:[[966],256],120594:[[967],256],120595:[[968],256],120596:[[969],256],120597:[[8706],256],120598:[[1013],256],120599:[[977],256],120600:[[1008],256],120601:[[981],256],120602:[[1009],256],120603:[[982],256],120604:[[913],256],120605:[[914],256],120606:[[915],256],120607:[[916],256],120608:[[917],256],120609:[[918],256],120610:[[919],256],120611:[[920],256],120612:[[921],256],120613:[[922],256],120614:[[923],256],120615:[[924],256],120616:[[925],256],120617:[[926],256],120618:[[927],256],120619:[[928],256],120620:[[929],256],120621:[[1012],256],120622:[[931],256],120623:[[932],256],120624:[[933],256],120625:[[934],256],120626:[[935],256],120627:[[936],256],120628:[[937],256],120629:[[8711],256],120630:[[945],256],120631:[[946],256],120632:[[947],256],120633:[[948],256],120634:[[949],256],120635:[[950],256],120636:[[951],256],120637:[[952],256],120638:[[953],256],120639:[[954],256],120640:[[955],256],120641:[[956],256],120642:[[957],256],120643:[[958],256],120644:[[959],256],120645:[[960],256],120646:[[961],256],120647:[[962],256],120648:[[963],256],120649:[[964],256],120650:[[965],256],120651:[[966],256],120652:[[967],256],120653:[[968],256],120654:[[969],256],120655:[[8706],256],120656:[[1013],256],120657:[[977],256],120658:[[1008],256],120659:[[981],256],120660:[[1009],256],120661:[[982],256],120662:[[913],256],120663:[[914],256],120664:[[915],256],120665:[[916],256],120666:[[917],256],120667:[[918],256],120668:[[919],256],120669:[[920],256],120670:[[921],256],120671:[[922],256],120672:[[923],256],120673:[[924],256],120674:[[925],256],120675:[[926],256],120676:[[927],256],120677:[[928],256],120678:[[929],256],120679:[[1012],256],120680:[[931],256],120681:[[932],256],120682:[[933],256],120683:[[934],256],120684:[[935],256],120685:[[936],256],120686:[[937],256],120687:[[8711],256],120688:[[945],256],120689:[[946],256],120690:[[947],256],120691:[[948],256],120692:[[949],256],120693:[[950],256],120694:[[951],256],120695:[[952],256],120696:[[953],256],120697:[[954],256],120698:[[955],256],120699:[[956],256],120700:[[957],256],120701:[[958],256],120702:[[959],256],120703:[[960],256],120704:[[961],256],120705:[[962],256],120706:[[963],256],120707:[[964],256],120708:[[965],256],120709:[[966],256],120710:[[967],256],120711:[[968],256],120712:[[969],256],120713:[[8706],256],120714:[[1013],256],120715:[[977],256],120716:[[1008],256],120717:[[981],256],120718:[[1009],256],120719:[[982],256],120720:[[913],256],120721:[[914],256],120722:[[915],256],120723:[[916],256],120724:[[917],256],120725:[[918],256],120726:[[919],256],120727:[[920],256],120728:[[921],256],120729:[[922],256],120730:[[923],256],120731:[[924],256],120732:[[925],256],120733:[[926],256],120734:[[927],256],120735:[[928],256],120736:[[929],256],120737:[[1012],256],120738:[[931],256],120739:[[932],256],120740:[[933],256],120741:[[934],256],120742:[[935],256],120743:[[936],256],120744:[[937],256],120745:[[8711],256],120746:[[945],256],120747:[[946],256],120748:[[947],256],120749:[[948],256],120750:[[949],256],120751:[[950],256],120752:[[951],256],120753:[[952],256],120754:[[953],256],120755:[[954],256],120756:[[955],256],120757:[[956],256],120758:[[957],256],120759:[[958],256],120760:[[959],256],120761:[[960],256],120762:[[961],256],120763:[[962],256],120764:[[963],256],120765:[[964],256],120766:[[965],256],120767:[[966],256],120768:[[967],256],120769:[[968],256],120770:[[969],256],120771:[[8706],256],120772:[[1013],256],120773:[[977],256],120774:[[1008],256],120775:[[981],256],120776:[[1009],256],120777:[[982],256],120778:[[988],256],120779:[[989],256],120782:[[48],256],120783:[[49],256],120784:[[50],256],120785:[[51],256],120786:[[52],256],120787:[[53],256],120788:[[54],256],120789:[[55],256],120790:[[56],256],120791:[[57],256],120792:[[48],256],120793:[[49],256],120794:[[50],256],120795:[[51],256],120796:[[52],256],120797:[[53],256],120798:[[54],256],120799:[[55],256],120800:[[56],256],120801:[[57],256],120802:[[48],256],120803:[[49],256],120804:[[50],256],120805:[[51],256],120806:[[52],256],120807:[[53],256],120808:[[54],256],120809:[[55],256],120810:[[56],256],120811:[[57],256],120812:[[48],256],120813:[[49],256],120814:[[50],256],120815:[[51],256],120816:[[52],256],120817:[[53],256],120818:[[54],256],120819:[[55],256],120820:[[56],256],120821:[[57],256],120822:[[48],256],120823:[[49],256],120824:[[50],256],120825:[[51],256],120826:[[52],256],120827:[[53],256],120828:[[54],256],120829:[[55],256],120830:[[56],256],120831:[[57],256]},\n59392:{125136:[,220],125137:[,220],125138:[,220],125139:[,220],125140:[,220],125141:[,220],125142:[,220]},\n60928:{126464:[[1575],256],126465:[[1576],256],126466:[[1580],256],126467:[[1583],256],126469:[[1608],256],126470:[[1586],256],126471:[[1581],256],126472:[[1591],256],126473:[[1610],256],126474:[[1603],256],126475:[[1604],256],126476:[[1605],256],126477:[[1606],256],126478:[[1587],256],126479:[[1593],256],126480:[[1601],256],126481:[[1589],256],126482:[[1602],256],126483:[[1585],256],126484:[[1588],256],126485:[[1578],256],126486:[[1579],256],126487:[[1582],256],126488:[[1584],256],126489:[[1590],256],126490:[[1592],256],126491:[[1594],256],126492:[[1646],256],126493:[[1722],256],126494:[[1697],256],126495:[[1647],256],126497:[[1576],256],126498:[[1580],256],126500:[[1607],256],126503:[[1581],256],126505:[[1610],256],126506:[[1603],256],126507:[[1604],256],126508:[[1605],256],126509:[[1606],256],126510:[[1587],256],126511:[[1593],256],126512:[[1601],256],126513:[[1589],256],126514:[[1602],256],126516:[[1588],256],126517:[[1578],256],126518:[[1579],256],126519:[[1582],256],126521:[[1590],256],126523:[[1594],256],126530:[[1580],256],126535:[[1581],256],126537:[[1610],256],126539:[[1604],256],126541:[[1606],256],126542:[[1587],256],126543:[[1593],256],126545:[[1589],256],126546:[[1602],256],126548:[[1588],256],126551:[[1582],256],126553:[[1590],256],126555:[[1594],256],126557:[[1722],256],126559:[[1647],256],126561:[[1576],256],126562:[[1580],256],126564:[[1607],256],126567:[[1581],256],126568:[[1591],256],126569:[[1610],256],126570:[[1603],256],126572:[[1605],256],126573:[[1606],256],126574:[[1587],256],126575:[[1593],256],126576:[[1601],256],126577:[[1589],256],126578:[[1602],256],126580:[[1588],256],126581:[[1578],256],126582:[[1579],256],126583:[[1582],256],126585:[[1590],256],126586:[[1592],256],126587:[[1594],256],126588:[[1646],256],126590:[[1697],256],126592:[[1575],256],126593:[[1576],256],126594:[[1580],256],126595:[[1583],256],126596:[[1607],256],126597:[[1608],256],126598:[[1586],256],126599:[[1581],256],126600:[[1591],256],126601:[[1610],256],126603:[[1604],256],126604:[[1605],256],126605:[[1606],256],126606:[[1587],256],126607:[[1593],256],126608:[[1601],256],126609:[[1589],256],126610:[[1602],256],126611:[[1585],256],126612:[[1588],256],126613:[[1578],256],126614:[[1579],256],126615:[[1582],256],126616:[[1584],256],126617:[[1590],256],126618:[[1592],256],126619:[[1594],256],126625:[[1576],256],126626:[[1580],256],126627:[[1583],256],126629:[[1608],256],126630:[[1586],256],126631:[[1581],256],126632:[[1591],256],126633:[[1610],256],126635:[[1604],256],126636:[[1605],256],126637:[[1606],256],126638:[[1587],256],126639:[[1593],256],126640:[[1601],256],126641:[[1589],256],126642:[[1602],256],126643:[[1585],256],126644:[[1588],256],126645:[[1578],256],126646:[[1579],256],126647:[[1582],256],126648:[[1584],256],126649:[[1590],256],126650:[[1592],256],126651:[[1594],256]},\n61696:{127232:[[48,46],256],127233:[[48,44],256],127234:[[49,44],256],127235:[[50,44],256],127236:[[51,44],256],127237:[[52,44],256],127238:[[53,44],256],127239:[[54,44],256],127240:[[55,44],256],127241:[[56,44],256],127242:[[57,44],256],127248:[[40,65,41],256],127249:[[40,66,41],256],127250:[[40,67,41],256],127251:[[40,68,41],256],127252:[[40,69,41],256],127253:[[40,70,41],256],127254:[[40,71,41],256],127255:[[40,72,41],256],127256:[[40,73,41],256],127257:[[40,74,41],256],127258:[[40,75,41],256],127259:[[40,76,41],256],127260:[[40,77,41],256],127261:[[40,78,41],256],127262:[[40,79,41],256],127263:[[40,80,41],256],127264:[[40,81,41],256],127265:[[40,82,41],256],127266:[[40,83,41],256],127267:[[40,84,41],256],127268:[[40,85,41],256],127269:[[40,86,41],256],127270:[[40,87,41],256],127271:[[40,88,41],256],127272:[[40,89,41],256],127273:[[40,90,41],256],127274:[[12308,83,12309],256],127275:[[67],256],127276:[[82],256],127277:[[67,68],256],127278:[[87,90],256],127280:[[65],256],127281:[[66],256],127282:[[67],256],127283:[[68],256],127284:[[69],256],127285:[[70],256],127286:[[71],256],127287:[[72],256],127288:[[73],256],127289:[[74],256],127290:[[75],256],127291:[[76],256],127292:[[77],256],127293:[[78],256],127294:[[79],256],127295:[[80],256],127296:[[81],256],127297:[[82],256],127298:[[83],256],127299:[[84],256],127300:[[85],256],127301:[[86],256],127302:[[87],256],127303:[[88],256],127304:[[89],256],127305:[[90],256],127306:[[72,86],256],127307:[[77,86],256],127308:[[83,68],256],127309:[[83,83],256],127310:[[80,80,86],256],127311:[[87,67],256],127338:[[77,67],256],127339:[[77,68],256],127376:[[68,74],256]},\n61952:{},\n63488:{194560:[[20029]],194561:[[20024]],194562:[[20033]],194563:[[131362]],194564:[[20320]],194565:[[20398]],194566:[[20411]],194567:[[20482]],194568:[[20602]],194569:[[20633]],194570:[[20711]],194571:[[20687]],194572:[[13470]],194573:[[132666]],194574:[[20813]],194575:[[20820]],194576:[[20836]],194577:[[20855]],194578:[[132380]],194579:[[13497]],194580:[[20839]],194581:[[20877]],194582:[[132427]],194583:[[20887]],194584:[[20900]],194585:[[20172]],194586:[[20908]],194587:[[20917]],194588:[[168415]],194589:[[20981]],194590:[[20995]],194591:[[13535]],194592:[[21051]],194593:[[21062]],194594:[[21106]],194595:[[21111]],194596:[[13589]],194597:[[21191]],194598:[[21193]],194599:[[21220]],194600:[[21242]],194601:[[21253]],194602:[[21254]],194603:[[21271]],194604:[[21321]],194605:[[21329]],194606:[[21338]],194607:[[21363]],194608:[[21373]],194609:[[21375]],194610:[[21375]],194611:[[21375]],194612:[[133676]],194613:[[28784]],194614:[[21450]],194615:[[21471]],194616:[[133987]],194617:[[21483]],194618:[[21489]],194619:[[21510]],194620:[[21662]],194621:[[21560]],194622:[[21576]],194623:[[21608]],194624:[[21666]],194625:[[21750]],194626:[[21776]],194627:[[21843]],194628:[[21859]],194629:[[21892]],194630:[[21892]],194631:[[21913]],194632:[[21931]],194633:[[21939]],194634:[[21954]],194635:[[22294]],194636:[[22022]],194637:[[22295]],194638:[[22097]],194639:[[22132]],194640:[[20999]],194641:[[22766]],194642:[[22478]],194643:[[22516]],194644:[[22541]],194645:[[22411]],194646:[[22578]],194647:[[22577]],194648:[[22700]],194649:[[136420]],194650:[[22770]],194651:[[22775]],194652:[[22790]],194653:[[22810]],194654:[[22818]],194655:[[22882]],194656:[[136872]],194657:[[136938]],194658:[[23020]],194659:[[23067]],194660:[[23079]],194661:[[23000]],194662:[[23142]],194663:[[14062]],194664:[[14076]],194665:[[23304]],194666:[[23358]],194667:[[23358]],194668:[[137672]],194669:[[23491]],194670:[[23512]],194671:[[23527]],194672:[[23539]],194673:[[138008]],194674:[[23551]],194675:[[23558]],194676:[[24403]],194677:[[23586]],194678:[[14209]],194679:[[23648]],194680:[[23662]],194681:[[23744]],194682:[[23693]],194683:[[138724]],194684:[[23875]],194685:[[138726]],194686:[[23918]],194687:[[23915]],194688:[[23932]],194689:[[24033]],194690:[[24034]],194691:[[14383]],194692:[[24061]],194693:[[24104]],194694:[[24125]],194695:[[24169]],194696:[[14434]],194697:[[139651]],194698:[[14460]],194699:[[24240]],194700:[[24243]],194701:[[24246]],194702:[[24266]],194703:[[172946]],194704:[[24318]],194705:[[140081]],194706:[[140081]],194707:[[33281]],194708:[[24354]],194709:[[24354]],194710:[[14535]],194711:[[144056]],194712:[[156122]],194713:[[24418]],194714:[[24427]],194715:[[14563]],194716:[[24474]],194717:[[24525]],194718:[[24535]],194719:[[24569]],194720:[[24705]],194721:[[14650]],194722:[[14620]],194723:[[24724]],194724:[[141012]],194725:[[24775]],194726:[[24904]],194727:[[24908]],194728:[[24910]],194729:[[24908]],194730:[[24954]],194731:[[24974]],194732:[[25010]],194733:[[24996]],194734:[[25007]],194735:[[25054]],194736:[[25074]],194737:[[25078]],194738:[[25104]],194739:[[25115]],194740:[[25181]],194741:[[25265]],194742:[[25300]],194743:[[25424]],194744:[[142092]],194745:[[25405]],194746:[[25340]],194747:[[25448]],194748:[[25475]],194749:[[25572]],194750:[[142321]],194751:[[25634]],194752:[[25541]],194753:[[25513]],194754:[[14894]],194755:[[25705]],194756:[[25726]],194757:[[25757]],194758:[[25719]],194759:[[14956]],194760:[[25935]],194761:[[25964]],194762:[[143370]],194763:[[26083]],194764:[[26360]],194765:[[26185]],194766:[[15129]],194767:[[26257]],194768:[[15112]],194769:[[15076]],194770:[[20882]],194771:[[20885]],194772:[[26368]],194773:[[26268]],194774:[[32941]],194775:[[17369]],194776:[[26391]],194777:[[26395]],194778:[[26401]],194779:[[26462]],194780:[[26451]],194781:[[144323]],194782:[[15177]],194783:[[26618]],194784:[[26501]],194785:[[26706]],194786:[[26757]],194787:[[144493]],194788:[[26766]],194789:[[26655]],194790:[[26900]],194791:[[15261]],194792:[[26946]],194793:[[27043]],194794:[[27114]],194795:[[27304]],194796:[[145059]],194797:[[27355]],194798:[[15384]],194799:[[27425]],194800:[[145575]],194801:[[27476]],194802:[[15438]],194803:[[27506]],194804:[[27551]],194805:[[27578]],194806:[[27579]],194807:[[146061]],194808:[[138507]],194809:[[146170]],194810:[[27726]],194811:[[146620]],194812:[[27839]],194813:[[27853]],194814:[[27751]],194815:[[27926]]},\n63744:{63744:[[35912]],63745:[[26356]],63746:[[36554]],63747:[[36040]],63748:[[28369]],63749:[[20018]],63750:[[21477]],63751:[[40860]],63752:[[40860]],63753:[[22865]],63754:[[37329]],63755:[[21895]],63756:[[22856]],63757:[[25078]],63758:[[30313]],63759:[[32645]],63760:[[34367]],63761:[[34746]],63762:[[35064]],63763:[[37007]],63764:[[27138]],63765:[[27931]],63766:[[28889]],63767:[[29662]],63768:[[33853]],63769:[[37226]],63770:[[39409]],63771:[[20098]],63772:[[21365]],63773:[[27396]],63774:[[29211]],63775:[[34349]],63776:[[40478]],63777:[[23888]],63778:[[28651]],63779:[[34253]],63780:[[35172]],63781:[[25289]],63782:[[33240]],63783:[[34847]],63784:[[24266]],63785:[[26391]],63786:[[28010]],63787:[[29436]],63788:[[37070]],63789:[[20358]],63790:[[20919]],63791:[[21214]],63792:[[25796]],63793:[[27347]],63794:[[29200]],63795:[[30439]],63796:[[32769]],63797:[[34310]],63798:[[34396]],63799:[[36335]],63800:[[38706]],63801:[[39791]],63802:[[40442]],63803:[[30860]],63804:[[31103]],63805:[[32160]],63806:[[33737]],63807:[[37636]],63808:[[40575]],63809:[[35542]],63810:[[22751]],63811:[[24324]],63812:[[31840]],63813:[[32894]],63814:[[29282]],63815:[[30922]],63816:[[36034]],63817:[[38647]],63818:[[22744]],63819:[[23650]],63820:[[27155]],63821:[[28122]],63822:[[28431]],63823:[[32047]],63824:[[32311]],63825:[[38475]],63826:[[21202]],63827:[[32907]],63828:[[20956]],63829:[[20940]],63830:[[31260]],63831:[[32190]],63832:[[33777]],63833:[[38517]],63834:[[35712]],63835:[[25295]],63836:[[27138]],63837:[[35582]],63838:[[20025]],63839:[[23527]],63840:[[24594]],63841:[[29575]],63842:[[30064]],63843:[[21271]],63844:[[30971]],63845:[[20415]],63846:[[24489]],63847:[[19981]],63848:[[27852]],63849:[[25976]],63850:[[32034]],63851:[[21443]],63852:[[22622]],63853:[[30465]],63854:[[33865]],63855:[[35498]],63856:[[27578]],63857:[[36784]],63858:[[27784]],63859:[[25342]],63860:[[33509]],63861:[[25504]],63862:[[30053]],63863:[[20142]],63864:[[20841]],63865:[[20937]],63866:[[26753]],63867:[[31975]],63868:[[33391]],63869:[[35538]],63870:[[37327]],63871:[[21237]],63872:[[21570]],63873:[[22899]],63874:[[24300]],63875:[[26053]],63876:[[28670]],63877:[[31018]],63878:[[38317]],63879:[[39530]],63880:[[40599]],63881:[[40654]],63882:[[21147]],63883:[[26310]],63884:[[27511]],63885:[[36706]],63886:[[24180]],63887:[[24976]],63888:[[25088]],63889:[[25754]],63890:[[28451]],63891:[[29001]],63892:[[29833]],63893:[[31178]],63894:[[32244]],63895:[[32879]],63896:[[36646]],63897:[[34030]],63898:[[36899]],63899:[[37706]],63900:[[21015]],63901:[[21155]],63902:[[21693]],63903:[[28872]],63904:[[35010]],63905:[[35498]],63906:[[24265]],63907:[[24565]],63908:[[25467]],63909:[[27566]],63910:[[31806]],63911:[[29557]],63912:[[20196]],63913:[[22265]],63914:[[23527]],63915:[[23994]],63916:[[24604]],63917:[[29618]],63918:[[29801]],63919:[[32666]],63920:[[32838]],63921:[[37428]],63922:[[38646]],63923:[[38728]],63924:[[38936]],63925:[[20363]],63926:[[31150]],63927:[[37300]],63928:[[38584]],63929:[[24801]],63930:[[20102]],63931:[[20698]],63932:[[23534]],63933:[[23615]],63934:[[26009]],63935:[[27138]],63936:[[29134]],63937:[[30274]],63938:[[34044]],63939:[[36988]],63940:[[40845]],63941:[[26248]],63942:[[38446]],63943:[[21129]],63944:[[26491]],63945:[[26611]],63946:[[27969]],63947:[[28316]],63948:[[29705]],63949:[[30041]],63950:[[30827]],63951:[[32016]],63952:[[39006]],63953:[[20845]],63954:[[25134]],63955:[[38520]],63956:[[20523]],63957:[[23833]],63958:[[28138]],63959:[[36650]],63960:[[24459]],63961:[[24900]],63962:[[26647]],63963:[[29575]],63964:[[38534]],63965:[[21033]],63966:[[21519]],63967:[[23653]],63968:[[26131]],63969:[[26446]],63970:[[26792]],63971:[[27877]],63972:[[29702]],63973:[[30178]],63974:[[32633]],63975:[[35023]],63976:[[35041]],63977:[[37324]],63978:[[38626]],63979:[[21311]],63980:[[28346]],63981:[[21533]],63982:[[29136]],63983:[[29848]],63984:[[34298]],63985:[[38563]],63986:[[40023]],63987:[[40607]],63988:[[26519]],63989:[[28107]],63990:[[33256]],63991:[[31435]],63992:[[31520]],63993:[[31890]],63994:[[29376]],63995:[[28825]],63996:[[35672]],63997:[[20160]],63998:[[33590]],63999:[[21050]],194816:[[27966]],194817:[[28023]],194818:[[27969]],194819:[[28009]],194820:[[28024]],194821:[[28037]],194822:[[146718]],194823:[[27956]],194824:[[28207]],194825:[[28270]],194826:[[15667]],194827:[[28363]],194828:[[28359]],194829:[[147153]],194830:[[28153]],194831:[[28526]],194832:[[147294]],194833:[[147342]],194834:[[28614]],194835:[[28729]],194836:[[28702]],194837:[[28699]],194838:[[15766]],194839:[[28746]],194840:[[28797]],194841:[[28791]],194842:[[28845]],194843:[[132389]],194844:[[28997]],194845:[[148067]],194846:[[29084]],194847:[[148395]],194848:[[29224]],194849:[[29237]],194850:[[29264]],194851:[[149000]],194852:[[29312]],194853:[[29333]],194854:[[149301]],194855:[[149524]],194856:[[29562]],194857:[[29579]],194858:[[16044]],194859:[[29605]],194860:[[16056]],194861:[[16056]],194862:[[29767]],194863:[[29788]],194864:[[29809]],194865:[[29829]],194866:[[29898]],194867:[[16155]],194868:[[29988]],194869:[[150582]],194870:[[30014]],194871:[[150674]],194872:[[30064]],194873:[[139679]],194874:[[30224]],194875:[[151457]],194876:[[151480]],194877:[[151620]],194878:[[16380]],194879:[[16392]],194880:[[30452]],194881:[[151795]],194882:[[151794]],194883:[[151833]],194884:[[151859]],194885:[[30494]],194886:[[30495]],194887:[[30495]],194888:[[30538]],194889:[[16441]],194890:[[30603]],194891:[[16454]],194892:[[16534]],194893:[[152605]],194894:[[30798]],194895:[[30860]],194896:[[30924]],194897:[[16611]],194898:[[153126]],194899:[[31062]],194900:[[153242]],194901:[[153285]],194902:[[31119]],194903:[[31211]],194904:[[16687]],194905:[[31296]],194906:[[31306]],194907:[[31311]],194908:[[153980]],194909:[[154279]],194910:[[154279]],194911:[[31470]],194912:[[16898]],194913:[[154539]],194914:[[31686]],194915:[[31689]],194916:[[16935]],194917:[[154752]],194918:[[31954]],194919:[[17056]],194920:[[31976]],194921:[[31971]],194922:[[32000]],194923:[[155526]],194924:[[32099]],194925:[[17153]],194926:[[32199]],194927:[[32258]],194928:[[32325]],194929:[[17204]],194930:[[156200]],194931:[[156231]],194932:[[17241]],194933:[[156377]],194934:[[32634]],194935:[[156478]],194936:[[32661]],194937:[[32762]],194938:[[32773]],194939:[[156890]],194940:[[156963]],194941:[[32864]],194942:[[157096]],194943:[[32880]],194944:[[144223]],194945:[[17365]],194946:[[32946]],194947:[[33027]],194948:[[17419]],194949:[[33086]],194950:[[23221]],194951:[[157607]],194952:[[157621]],194953:[[144275]],194954:[[144284]],194955:[[33281]],194956:[[33284]],194957:[[36766]],194958:[[17515]],194959:[[33425]],194960:[[33419]],194961:[[33437]],194962:[[21171]],194963:[[33457]],194964:[[33459]],194965:[[33469]],194966:[[33510]],194967:[[158524]],194968:[[33509]],194969:[[33565]],194970:[[33635]],194971:[[33709]],194972:[[33571]],194973:[[33725]],194974:[[33767]],194975:[[33879]],194976:[[33619]],194977:[[33738]],194978:[[33740]],194979:[[33756]],194980:[[158774]],194981:[[159083]],194982:[[158933]],194983:[[17707]],194984:[[34033]],194985:[[34035]],194986:[[34070]],194987:[[160714]],194988:[[34148]],194989:[[159532]],194990:[[17757]],194991:[[17761]],194992:[[159665]],194993:[[159954]],194994:[[17771]],194995:[[34384]],194996:[[34396]],194997:[[34407]],194998:[[34409]],194999:[[34473]],195000:[[34440]],195001:[[34574]],195002:[[34530]],195003:[[34681]],195004:[[34600]],195005:[[34667]],195006:[[34694]],195007:[[17879]],195008:[[34785]],195009:[[34817]],195010:[[17913]],195011:[[34912]],195012:[[34915]],195013:[[161383]],195014:[[35031]],195015:[[35038]],195016:[[17973]],195017:[[35066]],195018:[[13499]],195019:[[161966]],195020:[[162150]],195021:[[18110]],195022:[[18119]],195023:[[35488]],195024:[[35565]],195025:[[35722]],195026:[[35925]],195027:[[162984]],195028:[[36011]],195029:[[36033]],195030:[[36123]],195031:[[36215]],195032:[[163631]],195033:[[133124]],195034:[[36299]],195035:[[36284]],195036:[[36336]],195037:[[133342]],195038:[[36564]],195039:[[36664]],195040:[[165330]],195041:[[165357]],195042:[[37012]],195043:[[37105]],195044:[[37137]],195045:[[165678]],195046:[[37147]],195047:[[37432]],195048:[[37591]],195049:[[37592]],195050:[[37500]],195051:[[37881]],195052:[[37909]],195053:[[166906]],195054:[[38283]],195055:[[18837]],195056:[[38327]],195057:[[167287]],195058:[[18918]],195059:[[38595]],195060:[[23986]],195061:[[38691]],195062:[[168261]],195063:[[168474]],195064:[[19054]],195065:[[19062]],195066:[[38880]],195067:[[168970]],195068:[[19122]],195069:[[169110]],195070:[[38923]],195071:[[38923]]},\n64000:{64000:[[20999]],64001:[[24230]],64002:[[25299]],64003:[[31958]],64004:[[23429]],64005:[[27934]],64006:[[26292]],64007:[[36667]],64008:[[34892]],64009:[[38477]],64010:[[35211]],64011:[[24275]],64012:[[20800]],64013:[[21952]],64016:[[22618]],64018:[[26228]],64021:[[20958]],64022:[[29482]],64023:[[30410]],64024:[[31036]],64025:[[31070]],64026:[[31077]],64027:[[31119]],64028:[[38742]],64029:[[31934]],64030:[[32701]],64032:[[34322]],64034:[[35576]],64037:[[36920]],64038:[[37117]],64042:[[39151]],64043:[[39164]],64044:[[39208]],64045:[[40372]],64046:[[37086]],64047:[[38583]],64048:[[20398]],64049:[[20711]],64050:[[20813]],64051:[[21193]],64052:[[21220]],64053:[[21329]],64054:[[21917]],64055:[[22022]],64056:[[22120]],64057:[[22592]],64058:[[22696]],64059:[[23652]],64060:[[23662]],64061:[[24724]],64062:[[24936]],64063:[[24974]],64064:[[25074]],64065:[[25935]],64066:[[26082]],64067:[[26257]],64068:[[26757]],64069:[[28023]],64070:[[28186]],64071:[[28450]],64072:[[29038]],64073:[[29227]],64074:[[29730]],64075:[[30865]],64076:[[31038]],64077:[[31049]],64078:[[31048]],64079:[[31056]],64080:[[31062]],64081:[[31069]],64082:[[31117]],64083:[[31118]],64084:[[31296]],64085:[[31361]],64086:[[31680]],64087:[[32244]],64088:[[32265]],64089:[[32321]],64090:[[32626]],64091:[[32773]],64092:[[33261]],64093:[[33401]],64094:[[33401]],64095:[[33879]],64096:[[35088]],64097:[[35222]],64098:[[35585]],64099:[[35641]],64100:[[36051]],64101:[[36104]],64102:[[36790]],64103:[[36920]],64104:[[38627]],64105:[[38911]],64106:[[38971]],64107:[[24693]],64108:[[148206]],64109:[[33304]],64112:[[20006]],64113:[[20917]],64114:[[20840]],64115:[[20352]],64116:[[20805]],64117:[[20864]],64118:[[21191]],64119:[[21242]],64120:[[21917]],64121:[[21845]],64122:[[21913]],64123:[[21986]],64124:[[22618]],64125:[[22707]],64126:[[22852]],64127:[[22868]],64128:[[23138]],64129:[[23336]],64130:[[24274]],64131:[[24281]],64132:[[24425]],64133:[[24493]],64134:[[24792]],64135:[[24910]],64136:[[24840]],64137:[[24974]],64138:[[24928]],64139:[[25074]],64140:[[25140]],64141:[[25540]],64142:[[25628]],64143:[[25682]],64144:[[25942]],64145:[[26228]],64146:[[26391]],64147:[[26395]],64148:[[26454]],64149:[[27513]],64150:[[27578]],64151:[[27969]],64152:[[28379]],64153:[[28363]],64154:[[28450]],64155:[[28702]],64156:[[29038]],64157:[[30631]],64158:[[29237]],64159:[[29359]],64160:[[29482]],64161:[[29809]],64162:[[29958]],64163:[[30011]],64164:[[30237]],64165:[[30239]],64166:[[30410]],64167:[[30427]],64168:[[30452]],64169:[[30538]],64170:[[30528]],64171:[[30924]],64172:[[31409]],64173:[[31680]],64174:[[31867]],64175:[[32091]],64176:[[32244]],64177:[[32574]],64178:[[32773]],64179:[[33618]],64180:[[33775]],64181:[[34681]],64182:[[35137]],64183:[[35206]],64184:[[35222]],64185:[[35519]],64186:[[35576]],64187:[[35531]],64188:[[35585]],64189:[[35582]],64190:[[35565]],64191:[[35641]],64192:[[35722]],64193:[[36104]],64194:[[36664]],64195:[[36978]],64196:[[37273]],64197:[[37494]],64198:[[38524]],64199:[[38627]],64200:[[38742]],64201:[[38875]],64202:[[38911]],64203:[[38923]],64204:[[38971]],64205:[[39698]],64206:[[40860]],64207:[[141386]],64208:[[141380]],64209:[[144341]],64210:[[15261]],64211:[[16408]],64212:[[16441]],64213:[[152137]],64214:[[154832]],64215:[[163539]],64216:[[40771]],64217:[[40846]],195072:[[38953]],195073:[[169398]],195074:[[39138]],195075:[[19251]],195076:[[39209]],195077:[[39335]],195078:[[39362]],195079:[[39422]],195080:[[19406]],195081:[[170800]],195082:[[39698]],195083:[[40000]],195084:[[40189]],195085:[[19662]],195086:[[19693]],195087:[[40295]],195088:[[172238]],195089:[[19704]],195090:[[172293]],195091:[[172558]],195092:[[172689]],195093:[[40635]],195094:[[19798]],195095:[[40697]],195096:[[40702]],195097:[[40709]],195098:[[40719]],195099:[[40726]],195100:[[40763]],195101:[[173568]]},\n64256:{64256:[[102,102],256],64257:[[102,105],256],64258:[[102,108],256],64259:[[102,102,105],256],64260:[[102,102,108],256],64261:[[383,116],256],64262:[[115,116],256],64275:[[1396,1398],256],64276:[[1396,1381],256],64277:[[1396,1387],256],64278:[[1406,1398],256],64279:[[1396,1389],256],64285:[[1497,1460],512],64286:[,26],64287:[[1522,1463],512],64288:[[1506],256],64289:[[1488],256],64290:[[1491],256],64291:[[1492],256],64292:[[1499],256],64293:[[1500],256],64294:[[1501],256],64295:[[1512],256],64296:[[1514],256],64297:[[43],256],64298:[[1513,1473],512],64299:[[1513,1474],512],64300:[[64329,1473],512],64301:[[64329,1474],512],64302:[[1488,1463],512],64303:[[1488,1464],512],64304:[[1488,1468],512],64305:[[1489,1468],512],64306:[[1490,1468],512],64307:[[1491,1468],512],64308:[[1492,1468],512],64309:[[1493,1468],512],64310:[[1494,1468],512],64312:[[1496,1468],512],64313:[[1497,1468],512],64314:[[1498,1468],512],64315:[[1499,1468],512],64316:[[1500,1468],512],64318:[[1502,1468],512],64320:[[1504,1468],512],64321:[[1505,1468],512],64323:[[1507,1468],512],64324:[[1508,1468],512],64326:[[1510,1468],512],64327:[[1511,1468],512],64328:[[1512,1468],512],64329:[[1513,1468],512],64330:[[1514,1468],512],64331:[[1493,1465],512],64332:[[1489,1471],512],64333:[[1499,1471],512],64334:[[1508,1471],512],64335:[[1488,1500],256],64336:[[1649],256],64337:[[1649],256],64338:[[1659],256],64339:[[1659],256],64340:[[1659],256],64341:[[1659],256],64342:[[1662],256],64343:[[1662],256],64344:[[1662],256],64345:[[1662],256],64346:[[1664],256],64347:[[1664],256],64348:[[1664],256],64349:[[1664],256],64350:[[1658],256],64351:[[1658],256],64352:[[1658],256],64353:[[1658],256],64354:[[1663],256],64355:[[1663],256],64356:[[1663],256],64357:[[1663],256],64358:[[1657],256],64359:[[1657],256],64360:[[1657],256],64361:[[1657],256],64362:[[1700],256],64363:[[1700],256],64364:[[1700],256],64365:[[1700],256],64366:[[1702],256],64367:[[1702],256],64368:[[1702],256],64369:[[1702],256],64370:[[1668],256],64371:[[1668],256],64372:[[1668],256],64373:[[1668],256],64374:[[1667],256],64375:[[1667],256],64376:[[1667],256],64377:[[1667],256],64378:[[1670],256],64379:[[1670],256],64380:[[1670],256],64381:[[1670],256],64382:[[1671],256],64383:[[1671],256],64384:[[1671],256],64385:[[1671],256],64386:[[1677],256],64387:[[1677],256],64388:[[1676],256],64389:[[1676],256],64390:[[1678],256],64391:[[1678],256],64392:[[1672],256],64393:[[1672],256],64394:[[1688],256],64395:[[1688],256],64396:[[1681],256],64397:[[1681],256],64398:[[1705],256],64399:[[1705],256],64400:[[1705],256],64401:[[1705],256],64402:[[1711],256],64403:[[1711],256],64404:[[1711],256],64405:[[1711],256],64406:[[1715],256],64407:[[1715],256],64408:[[1715],256],64409:[[1715],256],64410:[[1713],256],64411:[[1713],256],64412:[[1713],256],64413:[[1713],256],64414:[[1722],256],64415:[[1722],256],64416:[[1723],256],64417:[[1723],256],64418:[[1723],256],64419:[[1723],256],64420:[[1728],256],64421:[[1728],256],64422:[[1729],256],64423:[[1729],256],64424:[[1729],256],64425:[[1729],256],64426:[[1726],256],64427:[[1726],256],64428:[[1726],256],64429:[[1726],256],64430:[[1746],256],64431:[[1746],256],64432:[[1747],256],64433:[[1747],256],64467:[[1709],256],64468:[[1709],256],64469:[[1709],256],64470:[[1709],256],64471:[[1735],256],64472:[[1735],256],64473:[[1734],256],64474:[[1734],256],64475:[[1736],256],64476:[[1736],256],64477:[[1655],256],64478:[[1739],256],64479:[[1739],256],64480:[[1733],256],64481:[[1733],256],64482:[[1737],256],64483:[[1737],256],64484:[[1744],256],64485:[[1744],256],64486:[[1744],256],64487:[[1744],256],64488:[[1609],256],64489:[[1609],256],64490:[[1574,1575],256],64491:[[1574,1575],256],64492:[[1574,1749],256],64493:[[1574,1749],256],64494:[[1574,1608],256],64495:[[1574,1608],256],64496:[[1574,1735],256],64497:[[1574,1735],256],64498:[[1574,1734],256],64499:[[1574,1734],256],64500:[[1574,1736],256],64501:[[1574,1736],256],64502:[[1574,1744],256],64503:[[1574,1744],256],64504:[[1574,1744],256],64505:[[1574,1609],256],64506:[[1574,1609],256],64507:[[1574,1609],256],64508:[[1740],256],64509:[[1740],256],64510:[[1740],256],64511:[[1740],256]},\n64512:{64512:[[1574,1580],256],64513:[[1574,1581],256],64514:[[1574,1605],256],64515:[[1574,1609],256],64516:[[1574,1610],256],64517:[[1576,1580],256],64518:[[1576,1581],256],64519:[[1576,1582],256],64520:[[1576,1605],256],64521:[[1576,1609],256],64522:[[1576,1610],256],64523:[[1578,1580],256],64524:[[1578,1581],256],64525:[[1578,1582],256],64526:[[1578,1605],256],64527:[[1578,1609],256],64528:[[1578,1610],256],64529:[[1579,1580],256],64530:[[1579,1605],256],64531:[[1579,1609],256],64532:[[1579,1610],256],64533:[[1580,1581],256],64534:[[1580,1605],256],64535:[[1581,1580],256],64536:[[1581,1605],256],64537:[[1582,1580],256],64538:[[1582,1581],256],64539:[[1582,1605],256],64540:[[1587,1580],256],64541:[[1587,1581],256],64542:[[1587,1582],256],64543:[[1587,1605],256],64544:[[1589,1581],256],64545:[[1589,1605],256],64546:[[1590,1580],256],64547:[[1590,1581],256],64548:[[1590,1582],256],64549:[[1590,1605],256],64550:[[1591,1581],256],64551:[[1591,1605],256],64552:[[1592,1605],256],64553:[[1593,1580],256],64554:[[1593,1605],256],64555:[[1594,1580],256],64556:[[1594,1605],256],64557:[[1601,1580],256],64558:[[1601,1581],256],64559:[[1601,1582],256],64560:[[1601,1605],256],64561:[[1601,1609],256],64562:[[1601,1610],256],64563:[[1602,1581],256],64564:[[1602,1605],256],64565:[[1602,1609],256],64566:[[1602,1610],256],64567:[[1603,1575],256],64568:[[1603,1580],256],64569:[[1603,1581],256],64570:[[1603,1582],256],64571:[[1603,1604],256],64572:[[1603,1605],256],64573:[[1603,1609],256],64574:[[1603,1610],256],64575:[[1604,1580],256],64576:[[1604,1581],256],64577:[[1604,1582],256],64578:[[1604,1605],256],64579:[[1604,1609],256],64580:[[1604,1610],256],64581:[[1605,1580],256],64582:[[1605,1581],256],64583:[[1605,1582],256],64584:[[1605,1605],256],64585:[[1605,1609],256],64586:[[1605,1610],256],64587:[[1606,1580],256],64588:[[1606,1581],256],64589:[[1606,1582],256],64590:[[1606,1605],256],64591:[[1606,1609],256],64592:[[1606,1610],256],64593:[[1607,1580],256],64594:[[1607,1605],256],64595:[[1607,1609],256],64596:[[1607,1610],256],64597:[[1610,1580],256],64598:[[1610,1581],256],64599:[[1610,1582],256],64600:[[1610,1605],256],64601:[[1610,1609],256],64602:[[1610,1610],256],64603:[[1584,1648],256],64604:[[1585,1648],256],64605:[[1609,1648],256],64606:[[32,1612,1617],256],64607:[[32,1613,1617],256],64608:[[32,1614,1617],256],64609:[[32,1615,1617],256],64610:[[32,1616,1617],256],64611:[[32,1617,1648],256],64612:[[1574,1585],256],64613:[[1574,1586],256],64614:[[1574,1605],256],64615:[[1574,1606],256],64616:[[1574,1609],256],64617:[[1574,1610],256],64618:[[1576,1585],256],64619:[[1576,1586],256],64620:[[1576,1605],256],64621:[[1576,1606],256],64622:[[1576,1609],256],64623:[[1576,1610],256],64624:[[1578,1585],256],64625:[[1578,1586],256],64626:[[1578,1605],256],64627:[[1578,1606],256],64628:[[1578,1609],256],64629:[[1578,1610],256],64630:[[1579,1585],256],64631:[[1579,1586],256],64632:[[1579,1605],256],64633:[[1579,1606],256],64634:[[1579,1609],256],64635:[[1579,1610],256],64636:[[1601,1609],256],64637:[[1601,1610],256],64638:[[1602,1609],256],64639:[[1602,1610],256],64640:[[1603,1575],256],64641:[[1603,1604],256],64642:[[1603,1605],256],64643:[[1603,1609],256],64644:[[1603,1610],256],64645:[[1604,1605],256],64646:[[1604,1609],256],64647:[[1604,1610],256],64648:[[1605,1575],256],64649:[[1605,1605],256],64650:[[1606,1585],256],64651:[[1606,1586],256],64652:[[1606,1605],256],64653:[[1606,1606],256],64654:[[1606,1609],256],64655:[[1606,1610],256],64656:[[1609,1648],256],64657:[[1610,1585],256],64658:[[1610,1586],256],64659:[[1610,1605],256],64660:[[1610,1606],256],64661:[[1610,1609],256],64662:[[1610,1610],256],64663:[[1574,1580],256],64664:[[1574,1581],256],64665:[[1574,1582],256],64666:[[1574,1605],256],64667:[[1574,1607],256],64668:[[1576,1580],256],64669:[[1576,1581],256],64670:[[1576,1582],256],64671:[[1576,1605],256],64672:[[1576,1607],256],64673:[[1578,1580],256],64674:[[1578,1581],256],64675:[[1578,1582],256],64676:[[1578,1605],256],64677:[[1578,1607],256],64678:[[1579,1605],256],64679:[[1580,1581],256],64680:[[1580,1605],256],64681:[[1581,1580],256],64682:[[1581,1605],256],64683:[[1582,1580],256],64684:[[1582,1605],256],64685:[[1587,1580],256],64686:[[1587,1581],256],64687:[[1587,1582],256],64688:[[1587,1605],256],64689:[[1589,1581],256],64690:[[1589,1582],256],64691:[[1589,1605],256],64692:[[1590,1580],256],64693:[[1590,1581],256],64694:[[1590,1582],256],64695:[[1590,1605],256],64696:[[1591,1581],256],64697:[[1592,1605],256],64698:[[1593,1580],256],64699:[[1593,1605],256],64700:[[1594,1580],256],64701:[[1594,1605],256],64702:[[1601,1580],256],64703:[[1601,1581],256],64704:[[1601,1582],256],64705:[[1601,1605],256],64706:[[1602,1581],256],64707:[[1602,1605],256],64708:[[1603,1580],256],64709:[[1603,1581],256],64710:[[1603,1582],256],64711:[[1603,1604],256],64712:[[1603,1605],256],64713:[[1604,1580],256],64714:[[1604,1581],256],64715:[[1604,1582],256],64716:[[1604,1605],256],64717:[[1604,1607],256],64718:[[1605,1580],256],64719:[[1605,1581],256],64720:[[1605,1582],256],64721:[[1605,1605],256],64722:[[1606,1580],256],64723:[[1606,1581],256],64724:[[1606,1582],256],64725:[[1606,1605],256],64726:[[1606,1607],256],64727:[[1607,1580],256],64728:[[1607,1605],256],64729:[[1607,1648],256],64730:[[1610,1580],256],64731:[[1610,1581],256],64732:[[1610,1582],256],64733:[[1610,1605],256],64734:[[1610,1607],256],64735:[[1574,1605],256],64736:[[1574,1607],256],64737:[[1576,1605],256],64738:[[1576,1607],256],64739:[[1578,1605],256],64740:[[1578,1607],256],64741:[[1579,1605],256],64742:[[1579,1607],256],64743:[[1587,1605],256],64744:[[1587,1607],256],64745:[[1588,1605],256],64746:[[1588,1607],256],64747:[[1603,1604],256],64748:[[1603,1605],256],64749:[[1604,1605],256],64750:[[1606,1605],256],64751:[[1606,1607],256],64752:[[1610,1605],256],64753:[[1610,1607],256],64754:[[1600,1614,1617],256],64755:[[1600,1615,1617],256],64756:[[1600,1616,1617],256],64757:[[1591,1609],256],64758:[[1591,1610],256],64759:[[1593,1609],256],64760:[[1593,1610],256],64761:[[1594,1609],256],64762:[[1594,1610],256],64763:[[1587,1609],256],64764:[[1587,1610],256],64765:[[1588,1609],256],64766:[[1588,1610],256],64767:[[1581,1609],256]},\n64768:{64768:[[1581,1610],256],64769:[[1580,1609],256],64770:[[1580,1610],256],64771:[[1582,1609],256],64772:[[1582,1610],256],64773:[[1589,1609],256],64774:[[1589,1610],256],64775:[[1590,1609],256],64776:[[1590,1610],256],64777:[[1588,1580],256],64778:[[1588,1581],256],64779:[[1588,1582],256],64780:[[1588,1605],256],64781:[[1588,1585],256],64782:[[1587,1585],256],64783:[[1589,1585],256],64784:[[1590,1585],256],64785:[[1591,1609],256],64786:[[1591,1610],256],64787:[[1593,1609],256],64788:[[1593,1610],256],64789:[[1594,1609],256],64790:[[1594,1610],256],64791:[[1587,1609],256],64792:[[1587,1610],256],64793:[[1588,1609],256],64794:[[1588,1610],256],64795:[[1581,1609],256],64796:[[1581,1610],256],64797:[[1580,1609],256],64798:[[1580,1610],256],64799:[[1582,1609],256],64800:[[1582,1610],256],64801:[[1589,1609],256],64802:[[1589,1610],256],64803:[[1590,1609],256],64804:[[1590,1610],256],64805:[[1588,1580],256],64806:[[1588,1581],256],64807:[[1588,1582],256],64808:[[1588,1605],256],64809:[[1588,1585],256],64810:[[1587,1585],256],64811:[[1589,1585],256],64812:[[1590,1585],256],64813:[[1588,1580],256],64814:[[1588,1581],256],64815:[[1588,1582],256],64816:[[1588,1605],256],64817:[[1587,1607],256],64818:[[1588,1607],256],64819:[[1591,1605],256],64820:[[1587,1580],256],64821:[[1587,1581],256],64822:[[1587,1582],256],64823:[[1588,1580],256],64824:[[1588,1581],256],64825:[[1588,1582],256],64826:[[1591,1605],256],64827:[[1592,1605],256],64828:[[1575,1611],256],64829:[[1575,1611],256],64848:[[1578,1580,1605],256],64849:[[1578,1581,1580],256],64850:[[1578,1581,1580],256],64851:[[1578,1581,1605],256],64852:[[1578,1582,1605],256],64853:[[1578,1605,1580],256],64854:[[1578,1605,1581],256],64855:[[1578,1605,1582],256],64856:[[1580,1605,1581],256],64857:[[1580,1605,1581],256],64858:[[1581,1605,1610],256],64859:[[1581,1605,1609],256],64860:[[1587,1581,1580],256],64861:[[1587,1580,1581],256],64862:[[1587,1580,1609],256],64863:[[1587,1605,1581],256],64864:[[1587,1605,1581],256],64865:[[1587,1605,1580],256],64866:[[1587,1605,1605],256],64867:[[1587,1605,1605],256],64868:[[1589,1581,1581],256],64869:[[1589,1581,1581],256],64870:[[1589,1605,1605],256],64871:[[1588,1581,1605],256],64872:[[1588,1581,1605],256],64873:[[1588,1580,1610],256],64874:[[1588,1605,1582],256],64875:[[1588,1605,1582],256],64876:[[1588,1605,1605],256],64877:[[1588,1605,1605],256],64878:[[1590,1581,1609],256],64879:[[1590,1582,1605],256],64880:[[1590,1582,1605],256],64881:[[1591,1605,1581],256],64882:[[1591,1605,1581],256],64883:[[1591,1605,1605],256],64884:[[1591,1605,1610],256],64885:[[1593,1580,1605],256],64886:[[1593,1605,1605],256],64887:[[1593,1605,1605],256],64888:[[1593,1605,1609],256],64889:[[1594,1605,1605],256],64890:[[1594,1605,1610],256],64891:[[1594,1605,1609],256],64892:[[1601,1582,1605],256],64893:[[1601,1582,1605],256],64894:[[1602,1605,1581],256],64895:[[1602,1605,1605],256],64896:[[1604,1581,1605],256],64897:[[1604,1581,1610],256],64898:[[1604,1581,1609],256],64899:[[1604,1580,1580],256],64900:[[1604,1580,1580],256],64901:[[1604,1582,1605],256],64902:[[1604,1582,1605],256],64903:[[1604,1605,1581],256],64904:[[1604,1605,1581],256],64905:[[1605,1581,1580],256],64906:[[1605,1581,1605],256],64907:[[1605,1581,1610],256],64908:[[1605,1580,1581],256],64909:[[1605,1580,1605],256],64910:[[1605,1582,1580],256],64911:[[1605,1582,1605],256],64914:[[1605,1580,1582],256],64915:[[1607,1605,1580],256],64916:[[1607,1605,1605],256],64917:[[1606,1581,1605],256],64918:[[1606,1581,1609],256],64919:[[1606,1580,1605],256],64920:[[1606,1580,1605],256],64921:[[1606,1580,1609],256],64922:[[1606,1605,1610],256],64923:[[1606,1605,1609],256],64924:[[1610,1605,1605],256],64925:[[1610,1605,1605],256],64926:[[1576,1582,1610],256],64927:[[1578,1580,1610],256],64928:[[1578,1580,1609],256],64929:[[1578,1582,1610],256],64930:[[1578,1582,1609],256],64931:[[1578,1605,1610],256],64932:[[1578,1605,1609],256],64933:[[1580,1605,1610],256],64934:[[1580,1581,1609],256],64935:[[1580,1605,1609],256],64936:[[1587,1582,1609],256],64937:[[1589,1581,1610],256],64938:[[1588,1581,1610],256],64939:[[1590,1581,1610],256],64940:[[1604,1580,1610],256],64941:[[1604,1605,1610],256],64942:[[1610,1581,1610],256],64943:[[1610,1580,1610],256],64944:[[1610,1605,1610],256],64945:[[1605,1605,1610],256],64946:[[1602,1605,1610],256],64947:[[1606,1581,1610],256],64948:[[1602,1605,1581],256],64949:[[1604,1581,1605],256],64950:[[1593,1605,1610],256],64951:[[1603,1605,1610],256],64952:[[1606,1580,1581],256],64953:[[1605,1582,1610],256],64954:[[1604,1580,1605],256],64955:[[1603,1605,1605],256],64956:[[1604,1580,1605],256],64957:[[1606,1580,1581],256],64958:[[1580,1581,1610],256],64959:[[1581,1580,1610],256],64960:[[1605,1580,1610],256],64961:[[1601,1605,1610],256],64962:[[1576,1581,1610],256],64963:[[1603,1605,1605],256],64964:[[1593,1580,1605],256],64965:[[1589,1605,1605],256],64966:[[1587,1582,1610],256],64967:[[1606,1580,1610],256],65008:[[1589,1604,1746],256],65009:[[1602,1604,1746],256],65010:[[1575,1604,1604,1607],256],65011:[[1575,1603,1576,1585],256],65012:[[1605,1581,1605,1583],256],65013:[[1589,1604,1593,1605],256],65014:[[1585,1587,1608,1604],256],65015:[[1593,1604,1610,1607],256],65016:[[1608,1587,1604,1605],256],65017:[[1589,1604,1609],256],65018:[[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605],256],65019:[[1580,1604,32,1580,1604,1575,1604,1607],256],65020:[[1585,1740,1575,1604],256]},\n65024:{65040:[[44],256],65041:[[12289],256],65042:[[12290],256],65043:[[58],256],65044:[[59],256],65045:[[33],256],65046:[[63],256],65047:[[12310],256],65048:[[12311],256],65049:[[8230],256],65056:[,230],65057:[,230],65058:[,230],65059:[,230],65060:[,230],65061:[,230],65062:[,230],65063:[,220],65064:[,220],65065:[,220],65066:[,220],65067:[,220],65068:[,220],65069:[,220],65072:[[8229],256],65073:[[8212],256],65074:[[8211],256],65075:[[95],256],65076:[[95],256],65077:[[40],256],65078:[[41],256],65079:[[123],256],65080:[[125],256],65081:[[12308],256],65082:[[12309],256],65083:[[12304],256],65084:[[12305],256],65085:[[12298],256],65086:[[12299],256],65087:[[12296],256],65088:[[12297],256],65089:[[12300],256],65090:[[12301],256],65091:[[12302],256],65092:[[12303],256],65095:[[91],256],65096:[[93],256],65097:[[8254],256],65098:[[8254],256],65099:[[8254],256],65100:[[8254],256],65101:[[95],256],65102:[[95],256],65103:[[95],256],65104:[[44],256],65105:[[12289],256],65106:[[46],256],65108:[[59],256],65109:[[58],256],65110:[[63],256],65111:[[33],256],65112:[[8212],256],65113:[[40],256],65114:[[41],256],65115:[[123],256],65116:[[125],256],65117:[[12308],256],65118:[[12309],256],65119:[[35],256],65120:[[38],256],65121:[[42],256],65122:[[43],256],65123:[[45],256],65124:[[60],256],65125:[[62],256],65126:[[61],256],65128:[[92],256],65129:[[36],256],65130:[[37],256],65131:[[64],256],65136:[[32,1611],256],65137:[[1600,1611],256],65138:[[32,1612],256],65140:[[32,1613],256],65142:[[32,1614],256],65143:[[1600,1614],256],65144:[[32,1615],256],65145:[[1600,1615],256],65146:[[32,1616],256],65147:[[1600,1616],256],65148:[[32,1617],256],65149:[[1600,1617],256],65150:[[32,1618],256],65151:[[1600,1618],256],65152:[[1569],256],65153:[[1570],256],65154:[[1570],256],65155:[[1571],256],65156:[[1571],256],65157:[[1572],256],65158:[[1572],256],65159:[[1573],256],65160:[[1573],256],65161:[[1574],256],65162:[[1574],256],65163:[[1574],256],65164:[[1574],256],65165:[[1575],256],65166:[[1575],256],65167:[[1576],256],65168:[[1576],256],65169:[[1576],256],65170:[[1576],256],65171:[[1577],256],65172:[[1577],256],65173:[[1578],256],65174:[[1578],256],65175:[[1578],256],65176:[[1578],256],65177:[[1579],256],65178:[[1579],256],65179:[[1579],256],65180:[[1579],256],65181:[[1580],256],65182:[[1580],256],65183:[[1580],256],65184:[[1580],256],65185:[[1581],256],65186:[[1581],256],65187:[[1581],256],65188:[[1581],256],65189:[[1582],256],65190:[[1582],256],65191:[[1582],256],65192:[[1582],256],65193:[[1583],256],65194:[[1583],256],65195:[[1584],256],65196:[[1584],256],65197:[[1585],256],65198:[[1585],256],65199:[[1586],256],65200:[[1586],256],65201:[[1587],256],65202:[[1587],256],65203:[[1587],256],65204:[[1587],256],65205:[[1588],256],65206:[[1588],256],65207:[[1588],256],65208:[[1588],256],65209:[[1589],256],65210:[[1589],256],65211:[[1589],256],65212:[[1589],256],65213:[[1590],256],65214:[[1590],256],65215:[[1590],256],65216:[[1590],256],65217:[[1591],256],65218:[[1591],256],65219:[[1591],256],65220:[[1591],256],65221:[[1592],256],65222:[[1592],256],65223:[[1592],256],65224:[[1592],256],65225:[[1593],256],65226:[[1593],256],65227:[[1593],256],65228:[[1593],256],65229:[[1594],256],65230:[[1594],256],65231:[[1594],256],65232:[[1594],256],65233:[[1601],256],65234:[[1601],256],65235:[[1601],256],65236:[[1601],256],65237:[[1602],256],65238:[[1602],256],65239:[[1602],256],65240:[[1602],256],65241:[[1603],256],65242:[[1603],256],65243:[[1603],256],65244:[[1603],256],65245:[[1604],256],65246:[[1604],256],65247:[[1604],256],65248:[[1604],256],65249:[[1605],256],65250:[[1605],256],65251:[[1605],256],65252:[[1605],256],65253:[[1606],256],65254:[[1606],256],65255:[[1606],256],65256:[[1606],256],65257:[[1607],256],65258:[[1607],256],65259:[[1607],256],65260:[[1607],256],65261:[[1608],256],65262:[[1608],256],65263:[[1609],256],65264:[[1609],256],65265:[[1610],256],65266:[[1610],256],65267:[[1610],256],65268:[[1610],256],65269:[[1604,1570],256],65270:[[1604,1570],256],65271:[[1604,1571],256],65272:[[1604,1571],256],65273:[[1604,1573],256],65274:[[1604,1573],256],65275:[[1604,1575],256],65276:[[1604,1575],256]},\n65280:{65281:[[33],256],65282:[[34],256],65283:[[35],256],65284:[[36],256],65285:[[37],256],65286:[[38],256],65287:[[39],256],65288:[[40],256],65289:[[41],256],65290:[[42],256],65291:[[43],256],65292:[[44],256],65293:[[45],256],65294:[[46],256],65295:[[47],256],65296:[[48],256],65297:[[49],256],65298:[[50],256],65299:[[51],256],65300:[[52],256],65301:[[53],256],65302:[[54],256],65303:[[55],256],65304:[[56],256],65305:[[57],256],65306:[[58],256],65307:[[59],256],65308:[[60],256],65309:[[61],256],65310:[[62],256],65311:[[63],256],65312:[[64],256],65313:[[65],256],65314:[[66],256],65315:[[67],256],65316:[[68],256],65317:[[69],256],65318:[[70],256],65319:[[71],256],65320:[[72],256],65321:[[73],256],65322:[[74],256],65323:[[75],256],65324:[[76],256],65325:[[77],256],65326:[[78],256],65327:[[79],256],65328:[[80],256],65329:[[81],256],65330:[[82],256],65331:[[83],256],65332:[[84],256],65333:[[85],256],65334:[[86],256],65335:[[87],256],65336:[[88],256],65337:[[89],256],65338:[[90],256],65339:[[91],256],65340:[[92],256],65341:[[93],256],65342:[[94],256],65343:[[95],256],65344:[[96],256],65345:[[97],256],65346:[[98],256],65347:[[99],256],65348:[[100],256],65349:[[101],256],65350:[[102],256],65351:[[103],256],65352:[[104],256],65353:[[105],256],65354:[[106],256],65355:[[107],256],65356:[[108],256],65357:[[109],256],65358:[[110],256],65359:[[111],256],65360:[[112],256],65361:[[113],256],65362:[[114],256],65363:[[115],256],65364:[[116],256],65365:[[117],256],65366:[[118],256],65367:[[119],256],65368:[[120],256],65369:[[121],256],65370:[[122],256],65371:[[123],256],65372:[[124],256],65373:[[125],256],65374:[[126],256],65375:[[10629],256],65376:[[10630],256],65377:[[12290],256],65378:[[12300],256],65379:[[12301],256],65380:[[12289],256],65381:[[12539],256],65382:[[12530],256],65383:[[12449],256],65384:[[12451],256],65385:[[12453],256],65386:[[12455],256],65387:[[12457],256],65388:[[12515],256],65389:[[12517],256],65390:[[12519],256],65391:[[12483],256],65392:[[12540],256],65393:[[12450],256],65394:[[12452],256],65395:[[12454],256],65396:[[12456],256],65397:[[12458],256],65398:[[12459],256],65399:[[12461],256],65400:[[12463],256],65401:[[12465],256],65402:[[12467],256],65403:[[12469],256],65404:[[12471],256],65405:[[12473],256],65406:[[12475],256],65407:[[12477],256],65408:[[12479],256],65409:[[12481],256],65410:[[12484],256],65411:[[12486],256],65412:[[12488],256],65413:[[12490],256],65414:[[12491],256],65415:[[12492],256],65416:[[12493],256],65417:[[12494],256],65418:[[12495],256],65419:[[12498],256],65420:[[12501],256],65421:[[12504],256],65422:[[12507],256],65423:[[12510],256],65424:[[12511],256],65425:[[12512],256],65426:[[12513],256],65427:[[12514],256],65428:[[12516],256],65429:[[12518],256],65430:[[12520],256],65431:[[12521],256],65432:[[12522],256],65433:[[12523],256],65434:[[12524],256],65435:[[12525],256],65436:[[12527],256],65437:[[12531],256],65438:[[12441],256],65439:[[12442],256],65440:[[12644],256],65441:[[12593],256],65442:[[12594],256],65443:[[12595],256],65444:[[12596],256],65445:[[12597],256],65446:[[12598],256],65447:[[12599],256],65448:[[12600],256],65449:[[12601],256],65450:[[12602],256],65451:[[12603],256],65452:[[12604],256],65453:[[12605],256],65454:[[12606],256],65455:[[12607],256],65456:[[12608],256],65457:[[12609],256],65458:[[12610],256],65459:[[12611],256],65460:[[12612],256],65461:[[12613],256],65462:[[12614],256],65463:[[12615],256],65464:[[12616],256],65465:[[12617],256],65466:[[12618],256],65467:[[12619],256],65468:[[12620],256],65469:[[12621],256],65470:[[12622],256],65474:[[12623],256],65475:[[12624],256],65476:[[12625],256],65477:[[12626],256],65478:[[12627],256],65479:[[12628],256],65482:[[12629],256],65483:[[12630],256],65484:[[12631],256],65485:[[12632],256],65486:[[12633],256],65487:[[12634],256],65490:[[12635],256],65491:[[12636],256],65492:[[12637],256],65493:[[12638],256],65494:[[12639],256],65495:[[12640],256],65498:[[12641],256],65499:[[12642],256],65500:[[12643],256],65504:[[162],256],65505:[[163],256],65506:[[172],256],65507:[[175],256],65508:[[166],256],65509:[[165],256],65510:[[8361],256],65512:[[9474],256],65513:[[8592],256],65514:[[8593],256],65515:[[8594],256],65516:[[8595],256],65517:[[9632],256],65518:[[9675],256]}\n\n};\n\n   /***** Module to export */\n   var unorm = {\n      nfc: nfc,\n      nfd: nfd,\n      nfkc: nfkc,\n      nfkd: nfkd\n   };\n\n   /*globals module:true,define:true*/\n\n   // CommonJS\n   if (typeof module === \"object\") {\n      module.exports = unorm;\n\n   // AMD\n   } else if (typeof define === \"function\" && define.amd) {\n      define(\"unorm\", function () {\n         return unorm;\n      });\n\n   // Global\n   } else {\n      root.unorm = unorm;\n   }\n\n   /***** Export as shim for String::normalize method *****/\n   /*\n      http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts#november_8_2013_draft_rev_21\n\n      21.1.3.12 String.prototype.normalize(form=\"NFC\")\n      When the normalize method is called with one argument form, the following steps are taken:\n\n      1. Let O be CheckObjectCoercible(this value).\n      2. Let S be ToString(O).\n      3. ReturnIfAbrupt(S).\n      4. If form is not provided or undefined let form be \"NFC\".\n      5. Let f be ToString(form).\n      6. ReturnIfAbrupt(f).\n      7. If f is not one of \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", then throw a RangeError Exception.\n      8. Let ns be the String value is the result of normalizing S into the normalization form named by f as specified in Unicode Standard Annex #15, UnicodeNormalizatoin Forms.\n      9. Return ns.\n\n      The length property of the normalize method is 0.\n\n      *NOTE* The normalize function is intentionally generic; it does not require that its this value be a String object. Therefore it can be transferred to other kinds of objects for use as a method.\n   */\n    unorm.shimApplied = false;\n\n   if (!String.prototype.normalize) {\n      String.prototype.normalize = function(form) {\n         var str = \"\" + this;\n         form =  form === undefined ? \"NFC\" : form;\n\n         if (form === \"NFC\") {\n            return unorm.nfc(str);\n         } else if (form === \"NFD\") {\n            return unorm.nfd(str);\n         } else if (form === \"NFKC\") {\n            return unorm.nfkc(str);\n         } else if (form === \"NFKD\") {\n            return unorm.nfkd(str);\n         } else {\n            throw new RangeError(\"Invalid normalization form: \" + form);\n         }\n      };\n\n      unorm.shimApplied = true;\n   }\n}(this));\n","(function (root, factory) {\n    // Hack to make all exports of this module sha256 function object properties.\n    var exports = {};\n    factory(exports);\n    var sha256 = exports[\"default\"];\n    for (var k in exports) {\n        sha256[k] = exports[k];\n    }\n        \n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        module.exports = sha256;\n    } else if (typeof define === 'function' && define.amd) {\n        define(function() { return sha256; }); \n    } else {\n        root.sha256 = sha256;\n    }\n})(this, function(exports) {\n\"use strict\";\nexports.__esModule = true;\n// SHA-256 (+ HMAC and PBKDF2) for JavaScript.\n//\n// Written in 2014-2016 by Dmitry Chestnykh.\n// Public domain, no warranty.\n//\n// Functions (accept and return Uint8Arrays):\n//\n//   sha256(message) -> hash\n//   sha256.hmac(key, message) -> mac\n//   sha256.pbkdf2(password, salt, rounds, dkLen) -> dk\n//\n//  Classes:\n//\n//   new sha256.Hash()\n//   new sha256.HMAC(key)\n//\nexports.digestLength = 32;\nexports.blockSize = 64;\n// SHA-256 constants\nvar K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n    0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n    0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n    0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n    0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n    0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n    0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n    0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n    0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\nfunction hashBlocks(w, v, p, pos, len) {\n    var a, b, c, d, e, f, g, h, u, i, j, t1, t2;\n    while (len >= 64) {\n        a = v[0];\n        b = v[1];\n        c = v[2];\n        d = v[3];\n        e = v[4];\n        f = v[5];\n        g = v[6];\n        h = v[7];\n        for (i = 0; i < 16; i++) {\n            j = pos + i * 4;\n            w[i] = (((p[j] & 0xff) << 24) | ((p[j + 1] & 0xff) << 16) |\n                ((p[j + 2] & 0xff) << 8) | (p[j + 3] & 0xff));\n        }\n        for (i = 16; i < 64; i++) {\n            u = w[i - 2];\n            t1 = (u >>> 17 | u << (32 - 17)) ^ (u >>> 19 | u << (32 - 19)) ^ (u >>> 10);\n            u = w[i - 15];\n            t2 = (u >>> 7 | u << (32 - 7)) ^ (u >>> 18 | u << (32 - 18)) ^ (u >>> 3);\n            w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\n        }\n        for (i = 0; i < 64; i++) {\n            t1 = (((((e >>> 6 | e << (32 - 6)) ^ (e >>> 11 | e << (32 - 11)) ^\n                (e >>> 25 | e << (32 - 25))) + ((e & f) ^ (~e & g))) | 0) +\n                ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n            t2 = (((a >>> 2 | a << (32 - 2)) ^ (a >>> 13 | a << (32 - 13)) ^\n                (a >>> 22 | a << (32 - 22))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n            h = g;\n            g = f;\n            f = e;\n            e = (d + t1) | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = (t1 + t2) | 0;\n        }\n        v[0] += a;\n        v[1] += b;\n        v[2] += c;\n        v[3] += d;\n        v[4] += e;\n        v[5] += f;\n        v[6] += g;\n        v[7] += h;\n        pos += 64;\n        len -= 64;\n    }\n    return pos;\n}\n// Hash implements SHA256 hash algorithm.\nvar Hash = /** @class */ (function () {\n    function Hash() {\n        this.digestLength = exports.digestLength;\n        this.blockSize = exports.blockSize;\n        // Note: Int32Array is used instead of Uint32Array for performance reasons.\n        this.state = new Int32Array(8); // hash state\n        this.temp = new Int32Array(64); // temporary state\n        this.buffer = new Uint8Array(128); // buffer for data to hash\n        this.bufferLength = 0; // number of bytes in buffer\n        this.bytesHashed = 0; // number of total bytes hashed\n        this.finished = false; // indicates whether the hash was finalized\n        this.reset();\n    }\n    // Resets hash state making it possible\n    // to re-use this instance to hash other data.\n    Hash.prototype.reset = function () {\n        this.state[0] = 0x6a09e667;\n        this.state[1] = 0xbb67ae85;\n        this.state[2] = 0x3c6ef372;\n        this.state[3] = 0xa54ff53a;\n        this.state[4] = 0x510e527f;\n        this.state[5] = 0x9b05688c;\n        this.state[6] = 0x1f83d9ab;\n        this.state[7] = 0x5be0cd19;\n        this.bufferLength = 0;\n        this.bytesHashed = 0;\n        this.finished = false;\n        return this;\n    };\n    // Cleans internal buffers and re-initializes hash state.\n    Hash.prototype.clean = function () {\n        for (var i = 0; i < this.buffer.length; i++) {\n            this.buffer[i] = 0;\n        }\n        for (var i = 0; i < this.temp.length; i++) {\n            this.temp[i] = 0;\n        }\n        this.reset();\n    };\n    // Updates hash state with the given data.\n    //\n    // Optionally, length of the data can be specified to hash\n    // fewer bytes than data.length.\n    //\n    // Throws error when trying to update already finalized hash:\n    // instance must be reset to use it again.\n    Hash.prototype.update = function (data, dataLength) {\n        if (dataLength === void 0) { dataLength = data.length; }\n        if (this.finished) {\n            throw new Error(\"SHA256: can't update because hash was finished.\");\n        }\n        var dataPos = 0;\n        this.bytesHashed += dataLength;\n        if (this.bufferLength > 0) {\n            while (this.bufferLength < 64 && dataLength > 0) {\n                this.buffer[this.bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this.bufferLength === 64) {\n                hashBlocks(this.temp, this.state, this.buffer, 0, 64);\n                this.bufferLength = 0;\n            }\n        }\n        if (dataLength >= 64) {\n            dataPos = hashBlocks(this.temp, this.state, data, dataPos, dataLength);\n            dataLength %= 64;\n        }\n        while (dataLength > 0) {\n            this.buffer[this.bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    };\n    // Finalizes hash state and puts hash into out.\n    //\n    // If hash was already finalized, puts the same value.\n    Hash.prototype.finish = function (out) {\n        if (!this.finished) {\n            var bytesHashed = this.bytesHashed;\n            var left = this.bufferLength;\n            var bitLenHi = (bytesHashed / 0x20000000) | 0;\n            var bitLenLo = bytesHashed << 3;\n            var padLength = (bytesHashed % 64 < 56) ? 64 : 128;\n            this.buffer[left] = 0x80;\n            for (var i = left + 1; i < padLength - 8; i++) {\n                this.buffer[i] = 0;\n            }\n            this.buffer[padLength - 8] = (bitLenHi >>> 24) & 0xff;\n            this.buffer[padLength - 7] = (bitLenHi >>> 16) & 0xff;\n            this.buffer[padLength - 6] = (bitLenHi >>> 8) & 0xff;\n            this.buffer[padLength - 5] = (bitLenHi >>> 0) & 0xff;\n            this.buffer[padLength - 4] = (bitLenLo >>> 24) & 0xff;\n            this.buffer[padLength - 3] = (bitLenLo >>> 16) & 0xff;\n            this.buffer[padLength - 2] = (bitLenLo >>> 8) & 0xff;\n            this.buffer[padLength - 1] = (bitLenLo >>> 0) & 0xff;\n            hashBlocks(this.temp, this.state, this.buffer, 0, padLength);\n            this.finished = true;\n        }\n        for (var i = 0; i < 8; i++) {\n            out[i * 4 + 0] = (this.state[i] >>> 24) & 0xff;\n            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n        }\n        return this;\n    };\n    // Returns the final hash digest.\n    Hash.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    // Internal function for use in HMAC for optimization.\n    Hash.prototype._saveState = function (out) {\n        for (var i = 0; i < this.state.length; i++) {\n            out[i] = this.state[i];\n        }\n    };\n    // Internal function for use in HMAC for optimization.\n    Hash.prototype._restoreState = function (from, bytesHashed) {\n        for (var i = 0; i < this.state.length; i++) {\n            this.state[i] = from[i];\n        }\n        this.bytesHashed = bytesHashed;\n        this.finished = false;\n        this.bufferLength = 0;\n    };\n    return Hash;\n}());\nexports.Hash = Hash;\n// HMAC implements HMAC-SHA256 message authentication algorithm.\nvar HMAC = /** @class */ (function () {\n    function HMAC(key) {\n        this.inner = new Hash();\n        this.outer = new Hash();\n        this.blockSize = this.inner.blockSize;\n        this.digestLength = this.inner.digestLength;\n        var pad = new Uint8Array(this.blockSize);\n        if (key.length > this.blockSize) {\n            (new Hash()).update(key).finish(pad).clean();\n        }\n        else {\n            for (var i = 0; i < key.length; i++) {\n                pad[i] = key[i];\n            }\n        }\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36;\n        }\n        this.inner.update(pad);\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36 ^ 0x5c;\n        }\n        this.outer.update(pad);\n        this.istate = new Uint32Array(8);\n        this.ostate = new Uint32Array(8);\n        this.inner._saveState(this.istate);\n        this.outer._saveState(this.ostate);\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] = 0;\n        }\n    }\n    // Returns HMAC state to the state initialized with key\n    // to make it possible to run HMAC over the other data with the same\n    // key without creating a new instance.\n    HMAC.prototype.reset = function () {\n        this.inner._restoreState(this.istate, this.inner.blockSize);\n        this.outer._restoreState(this.ostate, this.outer.blockSize);\n        return this;\n    };\n    // Cleans HMAC state.\n    HMAC.prototype.clean = function () {\n        for (var i = 0; i < this.istate.length; i++) {\n            this.ostate[i] = this.istate[i] = 0;\n        }\n        this.inner.clean();\n        this.outer.clean();\n    };\n    // Updates state with provided data.\n    HMAC.prototype.update = function (data) {\n        this.inner.update(data);\n        return this;\n    };\n    // Finalizes HMAC and puts the result in out.\n    HMAC.prototype.finish = function (out) {\n        if (this.outer.finished) {\n            this.outer.finish(out);\n        }\n        else {\n            this.inner.finish(out);\n            this.outer.update(out, this.digestLength).finish(out);\n        }\n        return this;\n    };\n    // Returns message authentication code.\n    HMAC.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    return HMAC;\n}());\nexports.HMAC = HMAC;\n// Returns SHA256 hash of data.\nfunction hash(data) {\n    var h = (new Hash()).update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hash = hash;\n// Function hash is both available as module.hash and as default export.\nexports[\"default\"] = hash;\n// Returns HMAC-SHA256 of data under the key.\nfunction hmac(key, data) {\n    var h = (new HMAC(key)).update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hmac = hmac;\n// Derives a key from password and salt using PBKDF2-HMAC-SHA256\n// with the given number of iterations.\n//\n// The number of bytes returned is equal to dkLen.\n//\n// (For better security, avoid dkLen greater than hash length - 32 bytes).\nfunction pbkdf2(password, salt, iterations, dkLen) {\n    var prf = new HMAC(password);\n    var len = prf.digestLength;\n    var ctr = new Uint8Array(4);\n    var t = new Uint8Array(len);\n    var u = new Uint8Array(len);\n    var dk = new Uint8Array(dkLen);\n    for (var i = 0; i * len < dkLen; i++) {\n        var c = i + 1;\n        ctr[0] = (c >>> 24) & 0xff;\n        ctr[1] = (c >>> 16) & 0xff;\n        ctr[2] = (c >>> 8) & 0xff;\n        ctr[3] = (c >>> 0) & 0xff;\n        prf.reset();\n        prf.update(salt);\n        prf.update(ctr);\n        prf.finish(u);\n        for (var j = 0; j < len; j++) {\n            t[j] = u[j];\n        }\n        for (var j = 2; j <= iterations; j++) {\n            prf.reset();\n            prf.update(u).finish(u);\n            for (var k = 0; k < len; k++) {\n                t[k] ^= u[k];\n            }\n        }\n        for (var j = 0; j < len && i * len + j < dkLen; j++) {\n            dk[i * len + j] = t[j];\n        }\n    }\n    for (var i = 0; i < len; i++) {\n        t[i] = u[i] = 0;\n    }\n    for (var i = 0; i < 4; i++) {\n        ctr[i] = 0;\n    }\n    prf.clean();\n    return dk;\n}\nexports.pbkdf2 = pbkdf2;\n});\n","'use strict'\nvar Buffer = require('buffer').Buffer\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar inherits = require('inherits')\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = (x[j] + 128) >> 8;\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i, mlen;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  mlen = -1;\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  mlen = n;\n  return mlen;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","/*\r\n Copyright 2013-2014 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license bytebuffer.js (c) 2015 Daniel Wirtz <dcode@dcode.io>\r\n * Backing buffer / Accessor: node Buffer\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/bytebuffer.js for details\r\n */\r\nmodule.exports = (function() {\r\n    \"use strict\";\r\n\r\n    var buffer = require(\"buffer\"),\r\n        Buffer = buffer[\"Buffer\"],\r\n        Long = require(\"long\"),\r\n        memcpy = null; try { memcpy = require(\"memcpy\"); } catch (e) {}\r\n\r\n    /**\r\n     * Constructs a new ByteBuffer.\r\n     * @class The swiss army knife for binary data in JavaScript.\r\n     * @exports ByteBuffer\r\n     * @constructor\r\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @expose\r\n     */\r\n    var ByteBuffer = function(capacity, littleEndian, noAssert) {\r\n        if (typeof capacity === 'undefined')\r\n            capacity = ByteBuffer.DEFAULT_CAPACITY;\r\n        if (typeof littleEndian === 'undefined')\r\n            littleEndian = ByteBuffer.DEFAULT_ENDIAN;\r\n        if (typeof noAssert === 'undefined')\r\n            noAssert = ByteBuffer.DEFAULT_NOASSERT;\r\n        if (!noAssert) {\r\n            capacity = capacity | 0;\r\n            if (capacity < 0)\r\n                throw RangeError(\"Illegal capacity\");\r\n            littleEndian = !!littleEndian;\r\n            noAssert = !!noAssert;\r\n        }\r\n\r\n        /**\r\n         * Backing node Buffer.\r\n         * @type {!Buffer}\r\n         * @expose\r\n         */\r\n        this.buffer = capacity === 0 ? EMPTY_BUFFER : new Buffer(capacity);\r\n\r\n        /**\r\n         * Absolute read/write offset.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#flip\r\n         * @see ByteBuffer#clear\r\n         */\r\n        this.offset = 0;\r\n\r\n        /**\r\n         * Marked offset.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#mark\r\n         * @see ByteBuffer#reset\r\n         */\r\n        this.markedOffset = -1;\r\n\r\n        /**\r\n         * Absolute limit of the contained data. Set to the backing buffer's capacity upon allocation.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#flip\r\n         * @see ByteBuffer#clear\r\n         */\r\n        this.limit = capacity;\r\n\r\n        /**\r\n         * Whether to use little endian byte order, defaults to `false` for big endian.\r\n         * @type {boolean}\r\n         * @expose\r\n         */\r\n        this.littleEndian = littleEndian;\r\n\r\n        /**\r\n         * Whether to skip assertions of offsets and values, defaults to `false`.\r\n         * @type {boolean}\r\n         * @expose\r\n         */\r\n        this.noAssert = noAssert;\r\n    };\r\n\r\n    /**\r\n     * ByteBuffer version.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.VERSION = \"5.0.1\";\r\n\r\n    /**\r\n     * Little endian constant that can be used instead of its boolean value. Evaluates to `true`.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.LITTLE_ENDIAN = true;\r\n\r\n    /**\r\n     * Big endian constant that can be used instead of its boolean value. Evaluates to `false`.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.BIG_ENDIAN = false;\r\n\r\n    /**\r\n     * Default initial capacity of `16`.\r\n     * @type {number}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_CAPACITY = 16;\r\n\r\n    /**\r\n     * Default endianess of `false` for big endian.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_ENDIAN = ByteBuffer.BIG_ENDIAN;\r\n\r\n    /**\r\n     * Default no assertions flag of `false`.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_NOASSERT = false;\r\n\r\n    /**\r\n     * A `Long` class for representing a 64-bit two's-complement integer value.\r\n     * @type {!Long}\r\n     * @const\r\n     * @see https://npmjs.org/package/long\r\n     * @expose\r\n     */\r\n    ByteBuffer.Long = Long;\r\n\r\n    /**\r\n     * @alias ByteBuffer.prototype\r\n     * @inner\r\n     */\r\n    var ByteBufferPrototype = ByteBuffer.prototype;\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a ByteBuffer or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     * @private\r\n     */\r\n    ByteBufferPrototype.__isByteBuffer__;\r\n\r\n    Object.defineProperty(ByteBufferPrototype, \"__isByteBuffer__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    // helpers\r\n\r\n    /**\r\n     * @type {!Buffer}\r\n     * @inner\r\n     */\r\n    var EMPTY_BUFFER = new Buffer(0);\r\n\r\n    /**\r\n     * String.fromCharCode reference for compile-time renaming.\r\n     * @type {function(...number):string}\r\n     * @inner\r\n     */\r\n    var stringFromCharCode = String.fromCharCode;\r\n\r\n    /**\r\n     * Creates a source function for a string.\r\n     * @param {string} s String to read from\r\n     * @returns {function():number|null} Source function returning the next char code respectively `null` if there are\r\n     *  no more characters left.\r\n     * @throws {TypeError} If the argument is invalid\r\n     * @inner\r\n     */\r\n    function stringSource(s) {\r\n        var i=0; return function() {\r\n            return i < s.length ? s.charCodeAt(i++) : null;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Creates a destination function for a string.\r\n     * @returns {function(number=):undefined|string} Destination function successively called with the next char code.\r\n     *  Returns the final string when called without arguments.\r\n     * @inner\r\n     */\r\n    function stringDestination() {\r\n        var cs = [], ps = []; return function() {\r\n            if (arguments.length === 0)\r\n                return ps.join('')+stringFromCharCode.apply(String, cs);\r\n            if (cs.length + arguments.length > 1024)\r\n                ps.push(stringFromCharCode.apply(String, cs)),\r\n                    cs.length = 0;\r\n            Array.prototype.push.apply(cs, arguments);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gets the accessor type.\r\n     * @returns {Function} `Buffer` under node.js, `Uint8Array` respectively `DataView` in the browser (classes)\r\n     * @expose\r\n     */\r\n    ByteBuffer.accessor = function() {\r\n        return Buffer;\r\n    };\r\n    /**\r\n     * Allocates a new ByteBuffer backed by a buffer of the specified capacity.\r\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBuffer.allocate = function(capacity, littleEndian, noAssert) {\r\n        return new ByteBuffer(capacity, littleEndian, noAssert);\r\n    };\r\n\r\n    /**\r\n     * Concatenates multiple ByteBuffers into one.\r\n     * @param {!Array.<!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string>} buffers Buffers to concatenate\r\n     * @param {(string|boolean)=} encoding String encoding if `buffers` contains a string (\"base64\", \"hex\", \"binary\",\r\n     *  defaults to \"utf8\")\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order for the resulting ByteBuffer. Defaults\r\n     *  to {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values for the resulting ByteBuffer. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} Concatenated ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.concat = function(buffers, encoding, littleEndian, noAssert) {\r\n        if (typeof encoding === 'boolean' || typeof encoding !== 'string') {\r\n            noAssert = littleEndian;\r\n            littleEndian = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var capacity = 0;\r\n        for (var i=0, k=buffers.length, length; i<k; ++i) {\r\n            if (!ByteBuffer.isByteBuffer(buffers[i]))\r\n                buffers[i] = ByteBuffer.wrap(buffers[i], encoding);\r\n            length = buffers[i].limit - buffers[i].offset;\r\n            if (length > 0) capacity += length;\r\n        }\r\n        if (capacity === 0)\r\n            return new ByteBuffer(0, littleEndian, noAssert);\r\n        var bb = new ByteBuffer(capacity, littleEndian, noAssert),\r\n            bi;\r\n        i=0; while (i<k) {\r\n            bi = buffers[i++];\r\n            length = bi.limit - bi.offset;\r\n            if (length <= 0) continue;\r\n            bi.buffer.copy(bb.buffer, bb.offset, bi.offset, bi.limit);\r\n            bb.offset += length;\r\n        }\r\n        bb.limit = bb.offset;\r\n        bb.offset = 0;\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Tests if the specified type is a ByteBuffer.\r\n     * @param {*} bb ByteBuffer to test\r\n     * @returns {boolean} `true` if it is a ByteBuffer, otherwise `false`\r\n     * @expose\r\n     */\r\n    ByteBuffer.isByteBuffer = function(bb) {\r\n        return (bb && bb[\"__isByteBuffer__\"]) === true;\r\n    };\r\n    /**\r\n     * Gets the backing buffer type.\r\n     * @returns {Function} `Buffer` under node.js, `ArrayBuffer` in the browser (classes)\r\n     * @expose\r\n     */\r\n    ByteBuffer.type = function() {\r\n        return Buffer;\r\n    };\r\n    /**\r\n     * Wraps a buffer or a string. Sets the allocated ByteBuffer's {@link ByteBuffer#offset} to `0` and its\r\n     *  {@link ByteBuffer#limit} to the length of the wrapped data.\r\n     * @param {!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string|!Array.<number>} buffer Anything that can be wrapped\r\n     * @param {(string|boolean)=} encoding String encoding if `buffer` is a string (\"base64\", \"hex\", \"binary\", defaults to\r\n     *  \"utf8\")\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} A ByteBuffer wrapping `buffer`\r\n     * @expose\r\n     */\r\n    ByteBuffer.wrap = function(buffer, encoding, littleEndian, noAssert) {\r\n        if (typeof encoding !== 'string') {\r\n            noAssert = littleEndian;\r\n            littleEndian = encoding;\r\n            encoding = undefined;\r\n        }\r\n        if (typeof buffer === 'string') {\r\n            if (typeof encoding === 'undefined')\r\n                encoding = \"utf8\";\r\n            switch (encoding) {\r\n                case \"base64\":\r\n                    return ByteBuffer.fromBase64(buffer, littleEndian);\r\n                case \"hex\":\r\n                    return ByteBuffer.fromHex(buffer, littleEndian);\r\n                case \"binary\":\r\n                    return ByteBuffer.fromBinary(buffer, littleEndian);\r\n                case \"utf8\":\r\n                    return ByteBuffer.fromUTF8(buffer, littleEndian);\r\n                case \"debug\":\r\n                    return ByteBuffer.fromDebug(buffer, littleEndian);\r\n                default:\r\n                    throw Error(\"Unsupported encoding: \"+encoding);\r\n            }\r\n        }\r\n        if (buffer === null || typeof buffer !== 'object')\r\n            throw TypeError(\"Illegal buffer\");\r\n        var bb;\r\n        if (ByteBuffer.isByteBuffer(buffer)) {\r\n            bb = ByteBufferPrototype.clone.call(buffer);\r\n            bb.markedOffset = -1;\r\n            return bb;\r\n        }\r\n        var i = 0,\r\n            k = 0,\r\n            b;\r\n        if (buffer instanceof Uint8Array) { // Extract bytes from Uint8Array\r\n            b = new Buffer(buffer.length);\r\n            if (memcpy) { // Fast\r\n                memcpy(b, 0, buffer.buffer, buffer.byteOffset, buffer.byteOffset + buffer.length);\r\n            } else { // Slow\r\n                for (i=0, k=buffer.length; i<k; ++i)\r\n                    b[i] = buffer[i];\r\n            }\r\n            buffer = b;\r\n        } else if (buffer instanceof ArrayBuffer) { // Convert ArrayBuffer to Buffer\r\n            b = new Buffer(buffer.byteLength);\r\n            if (memcpy) { // Fast\r\n                memcpy(b, 0, buffer, 0, buffer.byteLength);\r\n            } else { // Slow\r\n                buffer = new Uint8Array(buffer);\r\n                for (i=0, k=buffer.length; i<k; ++i) {\r\n                    b[i] = buffer[i];\r\n                }\r\n            }\r\n            buffer = b;\r\n        } else if (!(buffer instanceof Buffer)) { // Create from octets if it is an error, otherwise fail\r\n            if (Object.prototype.toString.call(buffer) !== \"[object Array]\")\r\n                throw TypeError(\"Illegal buffer\");\r\n            buffer = new Buffer(buffer);\r\n        }\r\n        bb = new ByteBuffer(0, littleEndian, noAssert);\r\n        if (buffer.length > 0) { // Avoid references to more than one EMPTY_BUFFER\r\n            bb.buffer = buffer;\r\n            bb.limit = buffer.length;\r\n        }\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Writes the array as a bitset.\r\n     * @param {Array<boolean>} value Array of booleans to write\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeBitSet = function(value, offset) {\r\n      var relative = typeof offset === 'undefined';\n      if (relative) offset = this.offset;\n      if (!this.noAssert) {\r\n        if (!(value instanceof Array))\r\n          throw TypeError(\"Illegal BitSet: Not an array\");\r\n        if (typeof offset !== 'number' || offset % 1 !== 0)\n            throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n        offset >>>= 0;\n        if (offset < 0 || offset + 0 > this.buffer.length)\n            throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n      }\r\n\r\n      var start = offset,\r\n          bits = value.length,\r\n          bytes = (bits >> 3),\r\n          bit = 0,\r\n          k;\r\n\r\n      offset += this.writeVarint32(bits,offset);\r\n\r\n      while(bytes--) {\r\n        k = (!!value[bit++] & 1) |\r\n            ((!!value[bit++] & 1) << 1) |\r\n            ((!!value[bit++] & 1) << 2) |\r\n            ((!!value[bit++] & 1) << 3) |\r\n            ((!!value[bit++] & 1) << 4) |\r\n            ((!!value[bit++] & 1) << 5) |\r\n            ((!!value[bit++] & 1) << 6) |\r\n            ((!!value[bit++] & 1) << 7);\r\n        this.writeByte(k,offset++);\r\n      }\r\n\r\n      if(bit < bits) {\r\n        var m = 0; k = 0;\r\n        while(bit < bits) k = k | ((!!value[bit++] & 1) << (m++));\r\n        this.writeByte(k,offset++);\r\n      }\r\n\r\n      if (relative) {\r\n        this.offset = offset;\r\n        return this;\r\n      }\r\n      return offset - start;\r\n    }\r\n\r\n    /**\r\n     * Reads a BitSet as an array of booleans.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {Array<boolean>\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readBitSet = function(offset) {\r\n      var relative = typeof offset === 'undefined';\n      if (relative) offset = this.offset;\n\r\n      var ret = this.readVarint32(offset),\r\n          bits = ret.value,\r\n          bytes = (bits >> 3),\r\n          bit = 0,\r\n          value = [],\r\n          k;\r\n\r\n      offset += ret.length;\r\n\r\n      while(bytes--) {\r\n        k = this.readByte(offset++);\r\n        value[bit++] = !!(k & 0x01);\r\n        value[bit++] = !!(k & 0x02);\r\n        value[bit++] = !!(k & 0x04);\r\n        value[bit++] = !!(k & 0x08);\r\n        value[bit++] = !!(k & 0x10);\r\n        value[bit++] = !!(k & 0x20);\r\n        value[bit++] = !!(k & 0x40);\r\n        value[bit++] = !!(k & 0x80);\r\n      }\r\n\r\n      if(bit < bits) {\r\n        var m = 0;\r\n        k = this.readByte(offset++);\r\n        while(bit < bits) value[bit++] = !!((k >> (m++)) & 1);\r\n      }\r\n\r\n      if (relative) {\r\n        this.offset = offset;\r\n      }\r\n      return value;\r\n    }\r\n    /**\r\n     * Reads the specified number of bytes.\r\n     * @param {number} length Number of bytes to read\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readBytes = function(length, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + length > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.length);\n        }\r\n        var slice = this.slice(offset, offset + length);\r\n        if (relative) this.offset += length;\n        return slice;\r\n    };\r\n\r\n    /**\r\n     * Writes a payload of bytes. This is an alias of {@link ByteBuffer#append}.\r\n     * @function\r\n     * @param {!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string} source Data to write. If `source` is a ByteBuffer, its\r\n     * offsets will be modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeBytes = ByteBufferPrototype.append;\r\n\r\n    // types/ints/int8\r\n\r\n    /**\r\n     * Writes an 8bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt8 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 1;\n        var capacity0 = this.buffer.length;\n        if (offset > capacity0)\n            this.resize((capacity0 *= 2) > offset ? capacity0 : offset);\n        offset -= 1;\n        this.buffer[offset] = value;\r\n        if (relative) this.offset += 1;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes an 8bit signed integer. This is an alias of {@link ByteBuffer#writeInt8}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeByte = ByteBufferPrototype.writeInt8;\r\n\r\n    /**\r\n     * Reads an 8bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt8 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\r\n        var value = this.buffer[offset];\r\n        if ((value & 0x80) === 0x80) value = -(0xFF - value + 1); // Cast to signed\r\n        if (relative) this.offset += 1;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads an 8bit signed integer. This is an alias of {@link ByteBuffer#readInt8}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readByte = ByteBufferPrototype.readInt8;\r\n\r\n    /**\r\n     * Writes an 8bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint8 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 1;\n        var capacity1 = this.buffer.length;\n        if (offset > capacity1)\n            this.resize((capacity1 *= 2) > offset ? capacity1 : offset);\n        offset -= 1;\n        this.buffer[offset] = value;\r\n        if (relative) this.offset += 1;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes an 8bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint8}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt8 = ByteBufferPrototype.writeUint8;\r\n\r\n    /**\r\n     * Reads an 8bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint8 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\r\n        var value = this.buffer[offset];\r\n        if (relative) this.offset += 1;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads an 8bit unsigned integer. This is an alias of {@link ByteBuffer#readUint8}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt8 = ByteBufferPrototype.readUint8;\r\n\r\n    // types/ints/int16\r\n\r\n    /**\r\n     * Writes a 16bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt16 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 2;\n        var capacity2 = this.buffer.length;\n        if (offset > capacity2)\n            this.resize((capacity2 *= 2) > offset ? capacity2 : offset);\n        offset -= 2;\n        if (this.littleEndian) {\r\n            this.buffer[offset+1] = (value & 0xFF00) >>> 8;\r\n            this.buffer[offset  ] =  value & 0x00FF;\r\n        } else {\r\n            this.buffer[offset]   = (value & 0xFF00) >>> 8;\r\n            this.buffer[offset+1] =  value & 0x00FF;\r\n        }\r\n        if (relative) this.offset += 2;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 16bit signed integer. This is an alias of {@link ByteBuffer#writeInt16}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeShort = ByteBufferPrototype.writeInt16;\r\n\r\n    /**\r\n     * Reads a 16bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt16 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 2 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.length);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\r\n            value  = this.buffer[offset  ];\r\n            value |= this.buffer[offset+1] << 8;\r\n        } else {\r\n            value  = this.buffer[offset  ] << 8;\r\n            value |= this.buffer[offset+1];\r\n        }\r\n        if ((value & 0x8000) === 0x8000) value = -(0xFFFF - value + 1); // Cast to signed\r\n        if (relative) this.offset += 2;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 16bit signed integer. This is an alias of {@link ByteBuffer#readInt16}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readShort = ByteBufferPrototype.readInt16;\r\n\r\n    /**\r\n     * Writes a 16bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint16 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 2;\n        var capacity3 = this.buffer.length;\n        if (offset > capacity3)\n            this.resize((capacity3 *= 2) > offset ? capacity3 : offset);\n        offset -= 2;\n        if (this.littleEndian) {\r\n            this.buffer[offset+1] = (value & 0xFF00) >>> 8;\r\n            this.buffer[offset  ] =  value & 0x00FF;\r\n        } else {\r\n            this.buffer[offset]   = (value & 0xFF00) >>> 8;\r\n            this.buffer[offset+1] =  value & 0x00FF;\r\n        }\r\n        if (relative) this.offset += 2;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 16bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint16}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt16 = ByteBufferPrototype.writeUint16;\r\n\r\n    /**\r\n     * Reads a 16bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint16 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 2 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.length);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\r\n            value  = this.buffer[offset  ];\r\n            value |= this.buffer[offset+1] << 8;\r\n        } else {\r\n            value  = this.buffer[offset  ] << 8;\r\n            value |= this.buffer[offset+1];\r\n        }\r\n        if (relative) this.offset += 2;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 16bit unsigned integer. This is an alias of {@link ByteBuffer#readUint16}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt16 = ByteBufferPrototype.readUint16;\r\n\r\n    // types/ints/int32\r\n\r\n    /**\r\n     * Writes a 32bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 4;\n        var capacity4 = this.buffer.length;\n        if (offset > capacity4)\n            this.resize((capacity4 *= 2) > offset ? capacity4 : offset);\n        offset -= 4;\n        if (this.littleEndian) {\n            this.buffer[offset+3] = (value >>> 24) & 0xFF;\n            this.buffer[offset+2] = (value >>> 16) & 0xFF;\n            this.buffer[offset+1] = (value >>>  8) & 0xFF;\n            this.buffer[offset  ] =  value         & 0xFF;\n        } else {\n            this.buffer[offset  ] = (value >>> 24) & 0xFF;\n            this.buffer[offset+1] = (value >>> 16) & 0xFF;\n            this.buffer[offset+2] = (value >>>  8) & 0xFF;\n            this.buffer[offset+3] =  value         & 0xFF;\n        }\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit signed integer. This is an alias of {@link ByteBuffer#writeInt32}.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt = ByteBufferPrototype.writeInt32;\r\n\r\n    /**\r\n     * Reads a 32bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\n            value  = this.buffer[offset+2] << 16;\n            value |= this.buffer[offset+1] <<  8;\n            value |= this.buffer[offset  ];\n            value += this.buffer[offset+3] << 24 >>> 0;\n        } else {\n            value  = this.buffer[offset+1] << 16;\n            value |= this.buffer[offset+2] <<  8;\n            value |= this.buffer[offset+3];\n            value += this.buffer[offset  ] << 24 >>> 0;\n        }\n        value |= 0; // Cast to signed\r\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit signed integer. This is an alias of {@link ByteBuffer#readInt32}.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt = ByteBufferPrototype.readInt32;\r\n\r\n    /**\r\n     * Writes a 32bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 4;\n        var capacity5 = this.buffer.length;\n        if (offset > capacity5)\n            this.resize((capacity5 *= 2) > offset ? capacity5 : offset);\n        offset -= 4;\n        if (this.littleEndian) {\n            this.buffer[offset+3] = (value >>> 24) & 0xFF;\n            this.buffer[offset+2] = (value >>> 16) & 0xFF;\n            this.buffer[offset+1] = (value >>>  8) & 0xFF;\n            this.buffer[offset  ] =  value         & 0xFF;\n        } else {\n            this.buffer[offset  ] = (value >>> 24) & 0xFF;\n            this.buffer[offset+1] = (value >>> 16) & 0xFF;\n            this.buffer[offset+2] = (value >>>  8) & 0xFF;\n            this.buffer[offset+3] =  value         & 0xFF;\n        }\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint32}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt32 = ByteBufferPrototype.writeUint32;\r\n\r\n    /**\r\n     * Reads a 32bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\n            value  = this.buffer[offset+2] << 16;\n            value |= this.buffer[offset+1] <<  8;\n            value |= this.buffer[offset  ];\n            value += this.buffer[offset+3] << 24 >>> 0;\n        } else {\n            value  = this.buffer[offset+1] << 16;\n            value |= this.buffer[offset+2] <<  8;\n            value |= this.buffer[offset+3];\n            value += this.buffer[offset  ] << 24 >>> 0;\n        }\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit unsigned integer. This is an alias of {@link ByteBuffer#readUint32}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt32 = ByteBufferPrototype.readUint32;\r\n\r\n    // types/ints/int64\r\n\r\n    if (Long) {\r\n\r\n        /**\r\n         * Writes a 64bit signed integer.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeInt64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            offset += 8;\n            var capacity6 = this.buffer.length;\n            if (offset > capacity6)\n                this.resize((capacity6 *= 2) > offset ? capacity6 : offset);\n            offset -= 8;\n            var lo = value.low,\r\n                hi = value.high;\r\n            if (this.littleEndian) {\r\n                this.buffer[offset+3] = (lo >>> 24) & 0xFF;\n                this.buffer[offset+2] = (lo >>> 16) & 0xFF;\n                this.buffer[offset+1] = (lo >>>  8) & 0xFF;\n                this.buffer[offset  ] =  lo         & 0xFF;\n                offset += 4;\r\n                this.buffer[offset+3] = (hi >>> 24) & 0xFF;\n                this.buffer[offset+2] = (hi >>> 16) & 0xFF;\n                this.buffer[offset+1] = (hi >>>  8) & 0xFF;\n                this.buffer[offset  ] =  hi         & 0xFF;\n            } else {\r\n                this.buffer[offset  ] = (hi >>> 24) & 0xFF;\n                this.buffer[offset+1] = (hi >>> 16) & 0xFF;\n                this.buffer[offset+2] = (hi >>>  8) & 0xFF;\n                this.buffer[offset+3] =  hi         & 0xFF;\n                offset += 4;\r\n                this.buffer[offset  ] = (lo >>> 24) & 0xFF;\n                this.buffer[offset+1] = (lo >>> 16) & 0xFF;\n                this.buffer[offset+2] = (lo >>>  8) & 0xFF;\n                this.buffer[offset+3] =  lo         & 0xFF;\n            }\r\n            if (relative) this.offset += 8;\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit signed integer. This is an alias of {@link ByteBuffer#writeInt64}.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeLong = ByteBufferPrototype.writeInt64;\r\n\r\n        /**\r\n         * Reads a 64bit signed integer.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readInt64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 8 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.length);\n            }\r\n            var lo = 0,\r\n                hi = 0;\r\n            if (this.littleEndian) {\r\n                lo  = this.buffer[offset+2] << 16;\n                lo |= this.buffer[offset+1] <<  8;\n                lo |= this.buffer[offset  ];\n                lo += this.buffer[offset+3] << 24 >>> 0;\n                offset += 4;\r\n                hi  = this.buffer[offset+2] << 16;\n                hi |= this.buffer[offset+1] <<  8;\n                hi |= this.buffer[offset  ];\n                hi += this.buffer[offset+3] << 24 >>> 0;\n            } else {\r\n                hi  = this.buffer[offset+1] << 16;\n                hi |= this.buffer[offset+2] <<  8;\n                hi |= this.buffer[offset+3];\n                hi += this.buffer[offset  ] << 24 >>> 0;\n                offset += 4;\r\n                lo  = this.buffer[offset+1] << 16;\n                lo |= this.buffer[offset+2] <<  8;\n                lo |= this.buffer[offset+3];\n                lo += this.buffer[offset  ] << 24 >>> 0;\n            }\r\n            var value = new Long(lo, hi, false);\r\n            if (relative) this.offset += 8;\n            return value;\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit signed integer. This is an alias of {@link ByteBuffer#readInt64}.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readLong = ByteBufferPrototype.readInt64;\r\n\r\n        /**\r\n         * Writes a 64bit unsigned integer.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeUint64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            offset += 8;\n            var capacity7 = this.buffer.length;\n            if (offset > capacity7)\n                this.resize((capacity7 *= 2) > offset ? capacity7 : offset);\n            offset -= 8;\n            var lo = value.low,\r\n                hi = value.high;\r\n            if (this.littleEndian) {\r\n                this.buffer[offset+3] = (lo >>> 24) & 0xFF;\n                this.buffer[offset+2] = (lo >>> 16) & 0xFF;\n                this.buffer[offset+1] = (lo >>>  8) & 0xFF;\n                this.buffer[offset  ] =  lo         & 0xFF;\n                offset += 4;\r\n                this.buffer[offset+3] = (hi >>> 24) & 0xFF;\n                this.buffer[offset+2] = (hi >>> 16) & 0xFF;\n                this.buffer[offset+1] = (hi >>>  8) & 0xFF;\n                this.buffer[offset  ] =  hi         & 0xFF;\n            } else {\r\n                this.buffer[offset  ] = (hi >>> 24) & 0xFF;\n                this.buffer[offset+1] = (hi >>> 16) & 0xFF;\n                this.buffer[offset+2] = (hi >>>  8) & 0xFF;\n                this.buffer[offset+3] =  hi         & 0xFF;\n                offset += 4;\r\n                this.buffer[offset  ] = (lo >>> 24) & 0xFF;\n                this.buffer[offset+1] = (lo >>> 16) & 0xFF;\n                this.buffer[offset+2] = (lo >>>  8) & 0xFF;\n                this.buffer[offset+3] =  lo         & 0xFF;\n            }\r\n            if (relative) this.offset += 8;\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint64}.\r\n         * @function\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeUInt64 = ByteBufferPrototype.writeUint64;\r\n\r\n        /**\r\n         * Reads a 64bit unsigned integer.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readUint64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 8 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.length);\n            }\r\n            var lo = 0,\r\n                hi = 0;\r\n            if (this.littleEndian) {\r\n                lo  = this.buffer[offset+2] << 16;\n                lo |= this.buffer[offset+1] <<  8;\n                lo |= this.buffer[offset  ];\n                lo += this.buffer[offset+3] << 24 >>> 0;\n                offset += 4;\r\n                hi  = this.buffer[offset+2] << 16;\n                hi |= this.buffer[offset+1] <<  8;\n                hi |= this.buffer[offset  ];\n                hi += this.buffer[offset+3] << 24 >>> 0;\n            } else {\r\n                hi  = this.buffer[offset+1] << 16;\n                hi |= this.buffer[offset+2] <<  8;\n                hi |= this.buffer[offset+3];\n                hi += this.buffer[offset  ] << 24 >>> 0;\n                offset += 4;\r\n                lo  = this.buffer[offset+1] << 16;\n                lo |= this.buffer[offset+2] <<  8;\n                lo |= this.buffer[offset+3];\n                lo += this.buffer[offset  ] << 24 >>> 0;\n            }\r\n            var value = new Long(lo, hi, true);\r\n            if (relative) this.offset += 8;\n            return value;\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit unsigned integer. This is an alias of {@link ByteBuffer#readUint64}.\r\n         * @function\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readUInt64 = ByteBufferPrototype.readUint64;\r\n\r\n    } // Long\r\n\r\n\r\n    // types/floats/float32\r\n\r\n    /**\r\n     * Writes a 32bit float.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number')\r\n                throw TypeError(\"Illegal value: \"+value+\" (not a number)\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 4;\n        var capacity8 = this.buffer.length;\n        if (offset > capacity8)\n            this.resize((capacity8 *= 2) > offset ? capacity8 : offset);\n        offset -= 4;\n        this.littleEndian\r\n            ? this.buffer.writeFloatLE(value, offset, true)\r\n            : this.buffer.writeFloatBE(value, offset, true);\r\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit float. This is an alias of {@link ByteBuffer#writeFloat32}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat = ByteBufferPrototype.writeFloat32;\r\n\r\n    /**\r\n     * Reads a 32bit float.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);\n        }\r\n        var value = this.littleEndian\r\n            ? this.buffer.readFloatLE(offset, true)\r\n            : this.buffer.readFloatBE(offset, true);\r\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit float. This is an alias of {@link ByteBuffer#readFloat32}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat = ByteBufferPrototype.readFloat32;\r\n\r\n    // types/floats/float64\r\n\r\n    /**\r\n     * Writes a 64bit float.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat64 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number')\r\n                throw TypeError(\"Illegal value: \"+value+\" (not a number)\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 8;\n        var capacity9 = this.buffer.length;\n        if (offset > capacity9)\n            this.resize((capacity9 *= 2) > offset ? capacity9 : offset);\n        offset -= 8;\n        this.littleEndian\r\n            ? this.buffer.writeDoubleLE(value, offset, true)\r\n            : this.buffer.writeDoubleBE(value, offset, true);\r\n        if (relative) this.offset += 8;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 64bit float. This is an alias of {@link ByteBuffer#writeFloat64}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeDouble = ByteBufferPrototype.writeFloat64;\r\n\r\n    /**\r\n     * Reads a 64bit float.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat64 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 8 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.length);\n        }\r\n        var value = this.littleEndian\r\n            ? this.buffer.readDoubleLE(offset, true)\r\n            : this.buffer.readDoubleBE(offset, true);\r\n        if (relative) this.offset += 8;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 64bit float. This is an alias of {@link ByteBuffer#readFloat64}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readDouble = ByteBufferPrototype.readFloat64;\r\n\r\n\r\n    // types/varints/varint32\r\n\r\n    /**\r\n     * Maximum number of bytes required to store a 32bit base 128 variable-length integer.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.MAX_VARINT32_BYTES = 5;\r\n\r\n    /**\r\n     * Calculates the actual number of bytes required to store a 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to encode\r\n     * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT32_BYTES}\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateVarint32 = function(value) {\r\n        // ref: src/google/protobuf/io/coded_stream.cc\r\n        value = value >>> 0;\r\n             if (value < 1 << 7 ) return 1;\r\n        else if (value < 1 << 14) return 2;\r\n        else if (value < 1 << 21) return 3;\r\n        else if (value < 1 << 28) return 4;\r\n        else                      return 5;\r\n    };\r\n\r\n    /**\r\n     * Zigzag encodes a signed 32bit integer so that it can be effectively used with varint encoding.\r\n     * @param {number} n Signed 32bit integer\r\n     * @returns {number} Unsigned zigzag encoded 32bit integer\r\n     * @expose\r\n     */\r\n    ByteBuffer.zigZagEncode32 = function(n) {\r\n        return (((n |= 0) << 1) ^ (n >> 31)) >>> 0; // ref: src/google/protobuf/wire_format_lite.h\r\n    };\r\n\r\n    /**\r\n     * Decodes a zigzag encoded signed 32bit integer.\r\n     * @param {number} n Unsigned zigzag encoded 32bit integer\r\n     * @returns {number} Signed 32bit integer\r\n     * @expose\r\n     */\r\n    ByteBuffer.zigZagDecode32 = function(n) {\r\n        return ((n >>> 1) ^ -(n & 1)) | 0; // // ref: src/google/protobuf/wire_format_lite.h\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeVarint32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        var size = ByteBuffer.calculateVarint32(value),\r\n            b;\r\n        offset += size;\n        var capacity10 = this.buffer.length;\n        if (offset > capacity10)\n            this.resize((capacity10 *= 2) > offset ? capacity10 : offset);\n        offset -= size;\n        value >>>= 0;\r\n        while (value >= 0x80) {\r\n            b = (value & 0x7f) | 0x80;\r\n            this.buffer[offset++] = b;\r\n            value >>>= 7;\r\n        }\r\n        this.buffer[offset++] = value;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return size;\r\n    };\r\n\r\n    /**\r\n     * Writes a zig-zag encoded (signed) 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeVarint32ZigZag = function(value, offset) {\r\n        return this.writeVarint32(ByteBuffer.zigZagEncode32(value), offset);\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit base 128 variable-length integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read\r\n     *  and the actual number of bytes read.\r\n     * @throws {Error} If it's not a valid varint. Has a property `truncated = true` if there is not enough data available\r\n     *  to fully decode the varint.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readVarint32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\r\n        var c = 0,\r\n            value = 0 >>> 0,\r\n            b;\r\n        do {\r\n            if (!this.noAssert && offset > this.limit) {\r\n                var err = Error(\"Truncated\");\r\n                err['truncated'] = true;\r\n                throw err;\r\n            }\r\n            b = this.buffer[offset++];\r\n            if (c < 5)\r\n                value |= (b & 0x7f) << (7*c);\r\n            ++c;\r\n        } while ((b & 0x80) !== 0);\r\n        value |= 0;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return value;\r\n        }\r\n        return {\r\n            \"value\": value,\r\n            \"length\": c\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Reads a zig-zag encoded (signed) 32bit base 128 variable-length integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read\r\n     *  and the actual number of bytes read.\r\n     * @throws {Error} If it's not a valid varint\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readVarint32ZigZag = function(offset) {\r\n        var val = this.readVarint32(offset);\r\n        if (typeof val === 'object')\r\n            val[\"value\"] = ByteBuffer.zigZagDecode32(val[\"value\"]);\r\n        else\r\n            val = ByteBuffer.zigZagDecode32(val);\r\n        return val;\r\n    };\r\n\r\n    // types/varints/varint64\r\n\r\n    if (Long) {\r\n\r\n        /**\r\n         * Maximum number of bytes required to store a 64bit base 128 variable-length integer.\r\n         * @type {number}\r\n         * @const\r\n         * @expose\r\n         */\r\n        ByteBuffer.MAX_VARINT64_BYTES = 10;\r\n\r\n        /**\r\n         * Calculates the actual number of bytes required to store a 64bit base 128 variable-length integer.\r\n         * @param {number|!Long} value Value to encode\r\n         * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT64_BYTES}\r\n         * @expose\r\n         */\r\n        ByteBuffer.calculateVarint64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            // ref: src/google/protobuf/io/coded_stream.cc\r\n            var part0 = value.toInt() >>> 0,\r\n                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,\r\n                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;\r\n            if (part2 == 0) {\r\n                if (part1 == 0) {\r\n                    if (part0 < 1 << 14)\r\n                        return part0 < 1 << 7 ? 1 : 2;\r\n                    else\r\n                        return part0 < 1 << 21 ? 3 : 4;\r\n                } else {\r\n                    if (part1 < 1 << 14)\r\n                        return part1 < 1 << 7 ? 5 : 6;\r\n                    else\r\n                        return part1 < 1 << 21 ? 7 : 8;\r\n                }\r\n            } else\r\n                return part2 < 1 << 7 ? 9 : 10;\r\n        };\r\n\r\n        /**\r\n         * Zigzag encodes a signed 64bit integer so that it can be effectively used with varint encoding.\r\n         * @param {number|!Long} value Signed long\r\n         * @returns {!Long} Unsigned zigzag encoded long\r\n         * @expose\r\n         */\r\n        ByteBuffer.zigZagEncode64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            // ref: src/google/protobuf/wire_format_lite.h\r\n            return value.shiftLeft(1).xor(value.shiftRight(63)).toUnsigned();\r\n        };\r\n\r\n        /**\r\n         * Decodes a zigzag encoded signed 64bit integer.\r\n         * @param {!Long|number} value Unsigned zigzag encoded long or JavaScript number\r\n         * @returns {!Long} Signed long\r\n         * @expose\r\n         */\r\n        ByteBuffer.zigZagDecode64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            // ref: src/google/protobuf/wire_format_lite.h\r\n            return value.shiftRightUnsigned(1).xor(value.and(Long.ONE).toSigned().negate()).toSigned();\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit base 128 variable-length integer.\r\n         * @param {number|Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  written if omitted.\r\n         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeVarint64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            var size = ByteBuffer.calculateVarint64(value),\r\n                part0 = value.toInt() >>> 0,\r\n                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,\r\n                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;\r\n            offset += size;\n            var capacity11 = this.buffer.length;\n            if (offset > capacity11)\n                this.resize((capacity11 *= 2) > offset ? capacity11 : offset);\n            offset -= size;\n            switch (size) {\r\n                case 10: this.buffer[offset+9] = (part2 >>>  7) & 0x01;\r\n                case 9 : this.buffer[offset+8] = size !== 9 ? (part2       ) | 0x80 : (part2       ) & 0x7F;\r\n                case 8 : this.buffer[offset+7] = size !== 8 ? (part1 >>> 21) | 0x80 : (part1 >>> 21) & 0x7F;\r\n                case 7 : this.buffer[offset+6] = size !== 7 ? (part1 >>> 14) | 0x80 : (part1 >>> 14) & 0x7F;\r\n                case 6 : this.buffer[offset+5] = size !== 6 ? (part1 >>>  7) | 0x80 : (part1 >>>  7) & 0x7F;\r\n                case 5 : this.buffer[offset+4] = size !== 5 ? (part1       ) | 0x80 : (part1       ) & 0x7F;\r\n                case 4 : this.buffer[offset+3] = size !== 4 ? (part0 >>> 21) | 0x80 : (part0 >>> 21) & 0x7F;\r\n                case 3 : this.buffer[offset+2] = size !== 3 ? (part0 >>> 14) | 0x80 : (part0 >>> 14) & 0x7F;\r\n                case 2 : this.buffer[offset+1] = size !== 2 ? (part0 >>>  7) | 0x80 : (part0 >>>  7) & 0x7F;\r\n                case 1 : this.buffer[offset  ] = size !== 1 ? (part0       ) | 0x80 : (part0       ) & 0x7F;\r\n            }\r\n            if (relative) {\r\n                this.offset += size;\r\n                return this;\r\n            } else {\r\n                return size;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Writes a zig-zag encoded 64bit base 128 variable-length integer.\r\n         * @param {number|Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  written if omitted.\r\n         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeVarint64ZigZag = function(value, offset) {\r\n            return this.writeVarint64(ByteBuffer.zigZagEncode64(value), offset);\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit base 128 variable-length integer. Requires Long.js.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  read if omitted.\r\n         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and\r\n         *  the actual number of bytes read.\r\n         * @throws {Error} If it's not a valid varint\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readVarint64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 1 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n            }\r\n            // ref: src/google/protobuf/io/coded_stream.cc\r\n            var start = offset,\r\n                part0 = 0,\r\n                part1 = 0,\r\n                part2 = 0,\r\n                b  = 0;\r\n            b = this.buffer[offset++]; part0  = (b & 0x7F)      ; if ( b & 0x80                                                   ) {\r\n            b = this.buffer[offset++]; part0 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part0 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part0 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part1  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part1 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part1 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part1 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part2  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part2 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            throw Error(\"Buffer overrun\"); }}}}}}}}}}\r\n            var value = Long.fromBits(part0 | (part1 << 28), (part1 >>> 4) | (part2) << 24, false);\r\n            if (relative) {\r\n                this.offset = offset;\r\n                return value;\r\n            } else {\r\n                return {\r\n                    'value': value,\r\n                    'length': offset-start\r\n                };\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Reads a zig-zag encoded 64bit base 128 variable-length integer. Requires Long.js.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  read if omitted.\r\n         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and\r\n         *  the actual number of bytes read.\r\n         * @throws {Error} If it's not a valid varint\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readVarint64ZigZag = function(offset) {\r\n            var val = this.readVarint64(offset);\r\n            if (val && val['value'] instanceof Long)\r\n                val[\"value\"] = ByteBuffer.zigZagDecode64(val[\"value\"]);\r\n            else\r\n                val = ByteBuffer.zigZagDecode64(val);\r\n            return val;\r\n        };\r\n\r\n    } // Long\r\n\r\n\r\n    // types/strings/cstring\r\n\r\n    /**\r\n     * Writes a NULL-terminated UTF8 encoded string. For this to work the specified string must not contain any NULL\r\n     *  characters itself.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  contained in `str` + 1 if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeCString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        var i,\r\n            k = str.length;\r\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            for (i=0; i<k; ++i) {\r\n                if (str.charCodeAt(i) === 0)\r\n                    throw RangeError(\"Illegal str: Contains NULL-characters\");\r\n            }\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        // UTF8 strings do not contain zero bytes in between except for the zero character, so:\r\n        k = Buffer.byteLength(str, \"utf8\");\r\n        offset += k+1;\n        var capacity12 = this.buffer.length;\n        if (offset > capacity12)\n            this.resize((capacity12 *= 2) > offset ? capacity12 : offset);\n        offset -= k+1;\n        offset += this.buffer.write(str, offset, k, \"utf8\");\r\n        this.buffer[offset++] = 0;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return k;\r\n    };\r\n\r\n    /**\r\n     * Reads a NULL-terminated UTF8 encoded string. For this to work the string read must not contain any NULL characters\r\n     *  itself.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readCString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\r\n        var start = offset,\r\n            temp;\r\n        // UTF8 strings do not contain zero bytes in between except for the zero character itself, so:\r\n        do {\r\n            if (offset >= this.buffer.length)\r\n                throw RangeError(\"Index out of range: \"+offset+\" <= \"+this.buffer.length);\r\n            temp = this.buffer[offset++];\r\n        } while (temp !== 0);\r\n        var str = this.buffer.toString(\"utf8\", start, offset-1);\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return str;\r\n        } else {\r\n            return {\r\n                \"string\": str,\r\n                \"length\": offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n    // types/strings/istring\r\n\r\n    /**\r\n     * Writes a length as uint32 prefixed UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     * @see ByteBuffer#writeVarint32\r\n     */\r\n    ByteBufferPrototype.writeIString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        var start = offset,\r\n            k;\r\n        k = Buffer.byteLength(str, \"utf8\");\r\n        offset += 4+k;\n        var capacity13 = this.buffer.length;\n        if (offset > capacity13)\n            this.resize((capacity13 *= 2) > offset ? capacity13 : offset);\n        offset -= 4+k;\n        if (this.littleEndian) {\n            this.buffer[offset+3] = (k >>> 24) & 0xFF;\n            this.buffer[offset+2] = (k >>> 16) & 0xFF;\n            this.buffer[offset+1] = (k >>>  8) & 0xFF;\n            this.buffer[offset  ] =  k         & 0xFF;\n        } else {\n            this.buffer[offset  ] = (k >>> 24) & 0xFF;\n            this.buffer[offset+1] = (k >>> 16) & 0xFF;\n            this.buffer[offset+2] = (k >>>  8) & 0xFF;\n            this.buffer[offset+3] =  k         & 0xFF;\n        }\n        offset += 4;\r\n        offset += this.buffer.write(str, offset, k, \"utf8\");\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return offset - start;\r\n    };\r\n\r\n    /**\r\n     * Reads a length as uint32 prefixed UTF8 encoded string.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     * @see ByteBuffer#readVarint32\r\n     */\r\n    ByteBufferPrototype.readIString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);\n        }\r\n        var start = offset;\r\n        var len = this.readUint32(offset);\r\n        var str = this.readUTF8String(len, ByteBuffer.METRICS_BYTES, offset += 4);\r\n        offset += str['length'];\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return str['string'];\r\n        } else {\r\n            return {\r\n                'string': str['string'],\r\n                'length': offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n    // types/strings/utf8string\r\n\r\n    /**\r\n     * Metrics representing number of UTF8 characters. Evaluates to `c`.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.METRICS_CHARS = 'c';\r\n\r\n    /**\r\n     * Metrics representing number of bytes. Evaluates to `b`.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.METRICS_BYTES = 'b';\r\n\r\n    /**\r\n     * Writes an UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUTF8String = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        var k;\r\n        k = Buffer.byteLength(str, \"utf8\");\r\n        offset += k;\n        var capacity14 = this.buffer.length;\n        if (offset > capacity14)\n            this.resize((capacity14 *= 2) > offset ? capacity14 : offset);\n        offset -= k;\n        offset += this.buffer.write(str, offset, k, \"utf8\");\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return k;\r\n    };\r\n\r\n    /**\r\n     * Writes an UTF8 encoded string. This is an alias of {@link ByteBuffer#writeUTF8String}.\r\n     * @function\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeString = ByteBufferPrototype.writeUTF8String;\r\n\r\n    /**\r\n     * Calculates the number of UTF8 characters of a string. JavaScript itself uses UTF-16, so that a string's\r\n     *  `length` property does not reflect its actual UTF8 size if it contains code points larger than 0xFFFF.\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 characters\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateUTF8Chars = function(str) {\r\n        return utfx.calculateUTF16asUTF8(stringSource(str))[0];\r\n    };\r\n\r\n    /**\r\n     * Calculates the number of UTF8 bytes of a string.\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 bytes\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateUTF8Bytes = function(str) {\r\n        if (typeof str !== 'string')\r\n            throw TypeError(\"Illegal argument: \"+(typeof str));\r\n        return Buffer.byteLength(str, \"utf8\");\r\n    };\r\n\r\n    /**\r\n     * Calculates the number of UTF8 bytes of a string. This is an alias of {@link ByteBuffer.calculateUTF8Bytes}.\r\n     * @function\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 bytes\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateString = ByteBuffer.calculateUTF8Bytes;\r\n\r\n    /**\r\n     * Reads an UTF8 encoded string.\r\n     * @param {number} length Number of characters or bytes to read.\r\n     * @param {string=} metrics Metrics specifying what `length` is meant to count. Defaults to\r\n     *  {@link ByteBuffer.METRICS_CHARS}.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUTF8String = function(length, metrics, offset) {\r\n        if (typeof metrics === 'number') {\r\n            offset = metrics;\r\n            metrics = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (typeof metrics === 'undefined') metrics = ByteBuffer.METRICS_CHARS;\r\n        if (!this.noAssert) {\r\n            if (typeof length !== 'number' || length % 1 !== 0)\n                throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");\n            length |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        var i = 0,\r\n            start = offset,\r\n            temp,\r\n            sd;\r\n        if (metrics === ByteBuffer.METRICS_CHARS) { // The same for node and the browser\r\n            sd = stringDestination();\r\n            utfx.decodeUTF8(function() {\r\n                return i < length && offset < this.limit ? this.buffer[offset++] : null;\r\n            }.bind(this), function(cp) {\r\n                ++i; utfx.UTF8toUTF16(cp, sd);\r\n            });\r\n            if (i !== length)\r\n                throw RangeError(\"Illegal range: Truncated data, \"+i+\" == \"+length);\r\n            if (relative) {\r\n                this.offset = offset;\r\n                return sd();\r\n            } else {\r\n                return {\r\n                    \"string\": sd(),\r\n                    \"length\": offset - start\r\n                };\r\n            }\r\n        } else if (metrics === ByteBuffer.METRICS_BYTES) {\r\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + length > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.length);\n            }\r\n            temp = this.buffer.toString(\"utf8\", offset, offset+length);\r\n            if (relative) {\r\n                this.offset += length;\r\n                return temp;\r\n            } else {\r\n                return {\r\n                    'string': temp,\r\n                    'length': length\r\n                };\r\n            }\r\n        } else\r\n            throw TypeError(\"Unsupported metrics: \"+metrics);\r\n    };\r\n\r\n    /**\r\n     * Reads an UTF8 encoded string. This is an alias of {@link ByteBuffer#readUTF8String}.\r\n     * @function\r\n     * @param {number} length Number of characters or bytes to read\r\n     * @param {number=} metrics Metrics specifying what `n` is meant to count. Defaults to\r\n     *  {@link ByteBuffer.METRICS_CHARS}.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readString = ByteBufferPrototype.readUTF8String;\r\n\r\n    // types/strings/vstring\r\n\r\n    /**\r\n     * Writes a length as varint32 prefixed UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     * @see ByteBuffer#writeVarint32\r\n     */\r\n    ByteBufferPrototype.writeVString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        var start = offset,\r\n            k, l;\r\n        k = Buffer.byteLength(str, \"utf8\");\r\n        l = ByteBuffer.calculateVarint32(k);\r\n        offset += l+k;\n        var capacity15 = this.buffer.length;\n        if (offset > capacity15)\n            this.resize((capacity15 *= 2) > offset ? capacity15 : offset);\n        offset -= l+k;\n        offset += this.writeVarint32(k, offset);\r\n        offset += this.buffer.write(str, offset, k, \"utf8\");\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return offset - start;\r\n    };\r\n\r\n    /**\r\n     * Reads a length as varint32 prefixed UTF8 encoded string.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     * @see ByteBuffer#readVarint32\r\n     */\r\n    ByteBufferPrototype.readVString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\r\n        var start = offset;\r\n        var len = this.readVarint32(offset);\r\n        var str = this.readUTF8String(len['value'], ByteBuffer.METRICS_BYTES, offset += len['length']);\r\n        offset += str['length'];\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return str['string'];\r\n        } else {\r\n            return {\r\n                'string': str['string'],\r\n                'length': offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Appends some data to this ByteBuffer. This will overwrite any contents behind the specified offset up to the appended\r\n     *  data's length.\r\n     * @param {!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string} source Data to append. If `source` is a ByteBuffer, its\r\n     * offsets will be modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to append at. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example A relative `<01 02>03.append(<04 05>)` will result in `<01 02 04 05>, 04 05|`\r\n     * @example An absolute `<01 02>03.append(04 05>, 1)` will result in `<01 04>05, 04 05|`\r\n     */\r\n    ByteBufferPrototype.append = function(source, encoding, offset) {\r\n        if (typeof encoding === 'number' || typeof encoding !== 'string') {\r\n            offset = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        if (!(source instanceof ByteBuffer))\r\n            source = ByteBuffer.wrap(source, encoding);\r\n        var length = source.limit - source.offset;\r\n        if (length <= 0) return this; // Nothing to append\r\n        offset += length;\n        var capacity16 = this.buffer.length;\n        if (offset > capacity16)\n            this.resize((capacity16 *= 2) > offset ? capacity16 : offset);\n        offset -= length;\n        source.buffer.copy(this.buffer, offset, source.offset, source.limit);\r\n        source.offset += length;\r\n        if (relative) this.offset += length;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Appends this ByteBuffer's contents to another ByteBuffer. This will overwrite any contents at and after the\r\n        specified offset up to the length of this ByteBuffer's data.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} offset Offset to append to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @see ByteBuffer#append\r\n     */\r\n    ByteBufferPrototype.appendTo = function(target, offset) {\r\n        target.append(this, offset);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Enables or disables assertions of argument types and offsets. Assertions are enabled by default but you can opt to\r\n     *  disable them if your code already makes sure that everything is valid.\r\n     * @param {boolean} assert `true` to enable assertions, otherwise `false`\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.assert = function(assert) {\r\n        this.noAssert = !assert;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Gets the capacity of this ByteBuffer's backing buffer.\r\n     * @returns {number} Capacity of the backing buffer\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.capacity = function() {\r\n        return this.buffer.length;\r\n    };\r\n    /**\r\n     * Clears this ByteBuffer's offsets by setting {@link ByteBuffer#offset} to `0` and {@link ByteBuffer#limit} to the\r\n     *  backing buffer's capacity. Discards {@link ByteBuffer#markedOffset}.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.clear = function() {\r\n        this.offset = 0;\r\n        this.limit = this.buffer.length;\r\n        this.markedOffset = -1;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Creates a cloned instance of this ByteBuffer, preset with this ByteBuffer's values for {@link ByteBuffer#offset},\r\n     *  {@link ByteBuffer#markedOffset} and {@link ByteBuffer#limit}.\r\n     * @param {boolean=} copy Whether to copy the backing buffer or to return another view on the same, defaults to `false`\r\n     * @returns {!ByteBuffer} Cloned instance\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.clone = function(copy) {\r\n        var bb = new ByteBuffer(0, this.littleEndian, this.noAssert);\r\n        if (copy) {\r\n            var buffer = new Buffer(this.buffer.length);\r\n            this.buffer.copy(buffer);\r\n            bb.buffer = buffer;\r\n        } else {\r\n            bb.buffer = this.buffer;\r\n        }\r\n        bb.offset = this.offset;\r\n        bb.markedOffset = this.markedOffset;\r\n        bb.limit = this.limit;\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Compacts this ByteBuffer to be backed by a {@link ByteBuffer#buffer} of its contents' length. Contents are the bytes\r\n     *  between {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. Will set `offset = 0` and `limit = capacity` and\r\n     *  adapt {@link ByteBuffer#markedOffset} to the same relative position if set.\r\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.compact = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        if (begin === 0 && end === this.buffer.length)\r\n            return this; // Already compacted\r\n        var len = end - begin;\r\n        if (len === 0) {\r\n            this.buffer = EMPTY_BUFFER;\r\n            if (this.markedOffset >= 0) this.markedOffset -= begin;\r\n            this.offset = 0;\r\n            this.limit = 0;\r\n            return this;\r\n        }\r\n        var buffer = new Buffer(len);\r\n        this.buffer.copy(buffer, 0, begin, end);\r\n        this.buffer = buffer;\r\n        if (this.markedOffset >= 0) this.markedOffset -= begin;\r\n        this.offset = 0;\r\n        this.limit = len;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Creates a copy of this ByteBuffer's contents. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}.\r\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} Copy\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.copy = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        if (begin === end)\r\n            return new ByteBuffer(0, this.littleEndian, this.noAssert);\r\n        var capacity = end - begin,\r\n            bb = new ByteBuffer(capacity, this.littleEndian, this.noAssert);\r\n        bb.offset = 0;\r\n        bb.limit = capacity;\r\n        if (bb.markedOffset >= 0) bb.markedOffset -= begin;\r\n        this.copyTo(bb, 0, begin, end);\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Copies this ByteBuffer's contents to another ByteBuffer. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} targetOffset Offset to copy to. Will use and increase the target's {@link ByteBuffer#offset}\r\n     *  by the number of bytes copied if omitted.\r\n     * @param {number=} sourceOffset Offset to start copying from. Will use and increase {@link ByteBuffer#offset} by the\r\n     *  number of bytes copied if omitted.\r\n     * @param {number=} sourceLimit Offset to end copying from, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.copyTo = function(target, targetOffset, sourceOffset, sourceLimit) {\r\n        var relative,\r\n            targetRelative;\r\n        if (!this.noAssert) {\r\n            if (!ByteBuffer.isByteBuffer(target))\r\n                throw TypeError(\"Illegal target: Not a ByteBuffer\");\r\n        }\r\n        targetOffset = (targetRelative = typeof targetOffset === 'undefined') ? target.offset : targetOffset | 0;\r\n        sourceOffset = (relative = typeof sourceOffset === 'undefined') ? this.offset : sourceOffset | 0;\r\n        sourceLimit = typeof sourceLimit === 'undefined' ? this.limit : sourceLimit | 0;\r\n\r\n        if (targetOffset < 0 || targetOffset > target.buffer.length)\r\n            throw RangeError(\"Illegal target range: 0 <= \"+targetOffset+\" <= \"+target.buffer.length);\r\n        if (sourceOffset < 0 || sourceLimit > this.buffer.length)\r\n            throw RangeError(\"Illegal source range: 0 <= \"+sourceOffset+\" <= \"+this.buffer.length);\r\n\r\n        var len = sourceLimit - sourceOffset;\r\n        if (len === 0)\r\n            return target; // Nothing to copy\r\n\r\n        target.ensureCapacity(targetOffset + len);\r\n\r\n        this.buffer.copy(target.buffer, targetOffset, sourceOffset, sourceLimit);\r\n\r\n        if (relative) this.offset += len;\r\n        if (targetRelative) target.offset += len;\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Makes sure that this ByteBuffer is backed by a {@link ByteBuffer#buffer} of at least the specified capacity. If the\r\n     *  current capacity is exceeded, it will be doubled. If double the current capacity is less than the required capacity,\r\n     *  the required capacity will be used instead.\r\n     * @param {number} capacity Required capacity\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.ensureCapacity = function(capacity) {\r\n        var current = this.buffer.length;\r\n        if (current < capacity)\r\n            return this.resize((current *= 2) > capacity ? current : capacity);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Overwrites this ByteBuffer's contents with the specified value. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\r\n     * @param {number|string} value Byte value to fill with. If given as a string, the first character is used.\r\n     * @param {number=} begin Begin offset. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted. defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example `someByteBuffer.clear().fill(0)` fills the entire backing buffer with zeroes\r\n     */\r\n    ByteBufferPrototype.fill = function(value, begin, end) {\r\n        var relative = typeof begin === 'undefined';\n        if (relative) begin = this.offset;\n        if (typeof value === 'string' && value.length > 0)\r\n            value = value.charCodeAt(0);\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        if (begin >= end)\r\n            return this; // Nothing to fill\r\n        this.buffer.fill(value, begin, end);\r\n        begin = end;\r\n        if (relative) this.offset = begin;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Makes this ByteBuffer ready for a new sequence of write or relative read operations. Sets `limit = offset` and\r\n     *  `offset = 0`. Make sure always to flip a ByteBuffer when all relative read or write operations are complete.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.flip = function() {\r\n        this.limit = this.offset;\r\n        this.offset = 0;\r\n        return this;\r\n    };\r\n    /**\r\n     * Marks an offset on this ByteBuffer to be used later.\r\n     * @param {number=} offset Offset to mark. Defaults to {@link ByteBuffer#offset}.\r\n     * @returns {!ByteBuffer} this\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @see ByteBuffer#reset\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.mark = function(offset) {\r\n        offset = typeof offset === 'undefined' ? this.offset : offset;\r\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        this.markedOffset = offset;\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets the byte order.\r\n     * @param {boolean} littleEndian `true` for little endian byte order, `false` for big endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.order = function(littleEndian) {\r\n        if (!this.noAssert) {\r\n            if (typeof littleEndian !== 'boolean')\r\n                throw TypeError(\"Illegal littleEndian: Not a boolean\");\r\n        }\r\n        this.littleEndian = !!littleEndian;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Switches (to) little endian byte order.\r\n     * @param {boolean=} littleEndian Defaults to `true`, otherwise uses big endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.LE = function(littleEndian) {\r\n        this.littleEndian = typeof littleEndian !== 'undefined' ? !!littleEndian : true;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Switches (to) big endian byte order.\r\n     * @param {boolean=} bigEndian Defaults to `true`, otherwise uses little endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.BE = function(bigEndian) {\r\n        this.littleEndian = typeof bigEndian !== 'undefined' ? !bigEndian : false;\r\n        return this;\r\n    };\r\n    /**\r\n     * Prepends some data to this ByteBuffer. This will overwrite any contents before the specified offset up to the\r\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\r\n     *  will be resized and its contents moved accordingly.\r\n     * @param {!ByteBuffer|string||!Buffer} source Data to prepend. If `source` is a ByteBuffer, its offset will be modified\r\n     *  according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\r\n     *  prepended if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example A relative `00<01 02 03>.prepend(<04 05>)` results in `<04 05 01 02 03>, 04 05|`\r\n     * @example An absolute `00<01 02 03>.prepend(<04 05>, 2)` results in `04<05 02 03>, 04 05|`\r\n     */\r\n    ByteBufferPrototype.prepend = function(source, encoding, offset) {\r\n        if (typeof encoding === 'number' || typeof encoding !== 'string') {\r\n            offset = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        if (!(source instanceof ByteBuffer))\r\n            source = ByteBuffer.wrap(source, encoding);\r\n        var len = source.limit - source.offset;\r\n        if (len <= 0) return this; // Nothing to prepend\r\n        var diff = len - offset;\r\n        if (diff > 0) { // Not enough space before offset, so resize + move\r\n            var buffer = new Buffer(this.buffer.length + diff);\r\n            this.buffer.copy(buffer, len, offset, this.buffer.length);\r\n            this.buffer = buffer;\r\n            this.offset += diff;\r\n            if (this.markedOffset >= 0) this.markedOffset += diff;\r\n            this.limit += diff;\r\n            offset += diff;\r\n        }        source.buffer.copy(this.buffer, offset - len, source.offset, source.limit);\r\n\r\n        source.offset = source.limit;\r\n        if (relative)\r\n            this.offset -= len;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Prepends this ByteBuffer to another ByteBuffer. This will overwrite any contents before the specified offset up to the\r\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\r\n     *  will be resized and its contents moved accordingly.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\r\n     *  prepended if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @see ByteBuffer#prepend\r\n     */\r\n    ByteBufferPrototype.prependTo = function(target, offset) {\r\n        target.prepend(this, offset);\r\n        return this;\r\n    };\r\n    /**\r\n     * Prints debug information about this ByteBuffer's contents.\r\n     * @param {function(string)=} out Output function to call, defaults to console.log\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.printDebug = function(out) {\r\n        if (typeof out !== 'function') out = console.log.bind(console);\r\n        out(\r\n            this.toString()+\"\\n\"+\r\n            \"-------------------------------------------------------------------\\n\"+\r\n            this.toDebug(/* columns */ true)\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Gets the number of remaining readable bytes. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}, so this returns `limit - offset`.\r\n     * @returns {number} Remaining readable bytes. May be negative if `offset > limit`.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.remaining = function() {\r\n        return this.limit - this.offset;\r\n    };\r\n    /**\r\n     * Resets this ByteBuffer's {@link ByteBuffer#offset}. If an offset has been marked through {@link ByteBuffer#mark}\r\n     *  before, `offset` will be set to {@link ByteBuffer#markedOffset}, which will then be discarded. If no offset has been\r\n     *  marked, sets `offset = 0`.\r\n     * @returns {!ByteBuffer} this\r\n     * @see ByteBuffer#mark\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.reset = function() {\r\n        if (this.markedOffset >= 0) {\r\n            this.offset = this.markedOffset;\r\n            this.markedOffset = -1;\r\n        } else {\r\n            this.offset = 0;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Resizes this ByteBuffer to be backed by a buffer of at least the given capacity. Will do nothing if already that\r\n     *  large or larger.\r\n     * @param {number} capacity Capacity required\r\n     * @returns {!ByteBuffer} this\r\n     * @throws {TypeError} If `capacity` is not a number\r\n     * @throws {RangeError} If `capacity < 0`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.resize = function(capacity) {\r\n        if (!this.noAssert) {\r\n            if (typeof capacity !== 'number' || capacity % 1 !== 0)\n                throw TypeError(\"Illegal capacity: \"+capacity+\" (not an integer)\");\n            capacity |= 0;\n            if (capacity < 0)\r\n                throw RangeError(\"Illegal capacity: 0 <= \"+capacity);\r\n        }\r\n        if (this.buffer.length < capacity) {\r\n            var buffer = new Buffer(capacity);\r\n            this.buffer.copy(buffer);\r\n            this.buffer = buffer;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Reverses this ByteBuffer's contents.\r\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.reverse = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        if (begin === end)\r\n            return this; // Nothing to reverse\r\n        Array.prototype.reverse.call(this.buffer.slice(begin, end));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the next `length` bytes. This will just advance\r\n     * @param {number} length Number of bytes to skip. May also be negative to move the offset back.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.skip = function(length) {\r\n        if (!this.noAssert) {\r\n            if (typeof length !== 'number' || length % 1 !== 0)\n                throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");\n            length |= 0;\n        }\r\n        var offset = this.offset + length;\r\n        if (!this.noAssert) {\r\n            if (offset < 0 || offset > this.buffer.length)\r\n                throw RangeError(\"Illegal length: 0 <= \"+this.offset+\" + \"+length+\" <= \"+this.buffer.length);\r\n        }\r\n        this.offset = offset;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Slices this ByteBuffer by creating a cloned instance with `offset = begin` and `limit = end`.\r\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} Clone of this ByteBuffer with slicing applied, backed by the same {@link ByteBuffer#buffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.slice = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        var bb = this.clone();\r\n        bb.offset = begin;\r\n        bb.limit = end;\r\n        return bb;\r\n    };\r\n    /**\r\n     * Returns a copy of the backing buffer that contains this ByteBuffer's contents. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\r\n     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory if\r\n     *  possible. Defaults to `false`\r\n     * @returns {!Buffer} Contents as a Buffer\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBuffer = function(forceCopy) {\r\n        var offset = this.offset,\r\n            limit = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: Not an integer\");\n            offset >>>= 0;\n            if (typeof limit !== 'number' || limit % 1 !== 0)\n                throw TypeError(\"Illegal limit: Not an integer\");\n            limit >>>= 0;\n            if (offset < 0 || offset > limit || limit > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+offset+\" <= \"+limit+\" <= \"+this.buffer.length);\n        }\r\n        if (forceCopy) {\r\n            var buffer = new Buffer(limit - offset);\r\n            this.buffer.copy(buffer, 0, offset, limit);\r\n            return buffer;\r\n        } else {\r\n            if (offset === 0 && limit === this.buffer.length)\r\n                return this.buffer;\r\n            else\r\n                return this.buffer.slice(offset, limit);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns a copy of the backing buffer compacted to contain this ByteBuffer's contents. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\r\n     * @returns {!ArrayBuffer} Contents as an ArrayBuffer\r\n     */\r\n    ByteBufferPrototype.toArrayBuffer = function() {\r\n        var offset = this.offset,\r\n            limit = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: Not an integer\");\n            offset >>>= 0;\n            if (typeof limit !== 'number' || limit % 1 !== 0)\n                throw TypeError(\"Illegal limit: Not an integer\");\n            limit >>>= 0;\n            if (offset < 0 || offset > limit || limit > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+offset+\" <= \"+limit+\" <= \"+this.buffer.length);\n        }\r\n        var ab = new ArrayBuffer(limit - offset);\r\n        if (memcpy) { // Fast\r\n            memcpy(ab, 0, this.buffer, offset, limit);\r\n        } else { // Slow\r\n            var dst = new Uint8Array(ab);\r\n            for (var i=offset; i<limit; ++i)\r\n                dst[i-offset] = this.buffer[i];\r\n        }\r\n        return ab;\r\n    };\r\n\r\n    /**\r\n     * Converts the ByteBuffer's contents to a string.\r\n     * @param {string=} encoding Output encoding. Returns an informative string representation if omitted but also allows\r\n     *  direct conversion to \"utf8\", \"hex\", \"base64\" and \"binary\" encoding. \"debug\" returns a hex representation with\r\n     *  highlighted offsets.\r\n     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {string} String representation\r\n     * @throws {Error} If `encoding` is invalid\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toString = function(encoding, begin, end) {\r\n        if (typeof encoding === 'undefined')\r\n            return \"ByteBufferNB(offset=\"+this.offset+\",markedOffset=\"+this.markedOffset+\",limit=\"+this.limit+\",capacity=\"+this.capacity()+\")\";\r\n        if (typeof encoding === 'number')\r\n            encoding = \"utf8\",\r\n            begin = encoding,\r\n            end = begin;\r\n        switch (encoding) {\r\n            case \"utf8\":\r\n                return this.toUTF8(begin, end);\r\n            case \"base64\":\r\n                return this.toBase64(begin, end);\r\n            case \"hex\":\r\n                return this.toHex(begin, end);\r\n            case \"binary\":\r\n                return this.toBinary(begin, end);\r\n            case \"debug\":\r\n                return this.toDebug();\r\n            case \"columns\":\r\n                return this.toColumns();\r\n            default:\r\n                throw Error(\"Unsupported encoding: \"+encoding);\r\n        }\r\n    };\r\n\r\n    // encodings/base64\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents to a base64 encoded string.\r\n     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Base64 encoded string\r\n     * @throws {RangeError} If `begin` or `end` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBase64 = function(begin, end) {\r\n        if (typeof begin === 'undefined')\r\n            begin = this.offset;\r\n        if (typeof end === 'undefined')\r\n            end = this.limit;\r\n        begin = begin | 0; end = end | 0;\r\n        if (begin < 0 || end > this.capacity || begin > end)\r\n            throw RangeError(\"begin, end\");\r\n        return this.buffer.toString(\"base64\", begin, end);\r\n    };\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromBase64 = function(str, littleEndian) {\r\n        return ByteBuffer.wrap(new Buffer(str, \"base64\"), littleEndian);\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Encodes a binary string to base64 like `window.btoa` does.\r\n     * @param {string} str Binary string\r\n     * @returns {string} Base64 encoded string\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.btoa\r\n     * @expose\r\n     */\r\n    ByteBuffer.btoa = function(str) {\r\n        return ByteBuffer.fromBinary(str).toBase64();\r\n    };\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to binary like `window.atob` does.\r\n     * @param {string} b64 Base64 encoded string\r\n     * @returns {string} Binary string\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.atob\r\n     * @expose\r\n     */\r\n    ByteBuffer.atob = function(b64) {\r\n        return ByteBuffer.fromBase64(b64).toBinary();\r\n    };\r\n\r\n    // encodings/binary\r\n\r\n    /**\r\n     * Encodes this ByteBuffer to a binary encoded string, that is using only characters 0x00-0xFF as bytes.\r\n     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Binary encoded string\r\n     * @throws {RangeError} If `offset > limit`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBinary = function(begin, end) {\r\n        if (typeof begin === 'undefined')\r\n            begin = this.offset;\r\n        if (typeof end === 'undefined')\r\n            end = this.limit;\r\n        begin |= 0; end |= 0;\r\n        if (begin < 0 || end > this.capacity() || begin > end)\r\n            throw RangeError(\"begin, end\");\r\n        return this.buffer.toString(\"binary\", begin, end);\r\n    };\r\n\r\n    /**\r\n     * Decodes a binary encoded string, that is using only characters 0x00-0xFF as bytes, to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromBinary = function(str, littleEndian) {\r\n        return ByteBuffer.wrap(new Buffer(str, \"binary\"), littleEndian);\r\n        return bb;\r\n    };\r\n\r\n    // encodings/debug\r\n\r\n    /**\r\n     * Encodes this ByteBuffer to a hex encoded string with marked offsets. Offset symbols are:\r\n     * * `<` : offset,\r\n     * * `'` : markedOffset,\r\n     * * `>` : limit,\r\n     * * `|` : offset and limit,\r\n     * * `[` : offset and markedOffset,\r\n     * * `]` : markedOffset and limit,\r\n     * * `!` : offset, markedOffset and limit\r\n     * @param {boolean=} columns If `true` returns two columns hex + ascii, defaults to `false`\r\n     * @returns {string|!Array.<string>} Debug string or array of lines if `asArray = true`\r\n     * @expose\r\n     * @example `>00'01 02<03` contains four bytes with `limit=0, markedOffset=1, offset=3`\r\n     * @example `00[01 02 03>` contains four bytes with `offset=markedOffset=1, limit=4`\r\n     * @example `00|01 02 03` contains four bytes with `offset=limit=1, markedOffset=-1`\r\n     * @example `|` contains zero bytes with `offset=limit=0, markedOffset=-1`\r\n     */\r\n    ByteBufferPrototype.toDebug = function(columns) {\r\n        var i = -1,\r\n            k = this.buffer.length,\r\n            b,\r\n            hex = \"\",\r\n            asc = \"\",\r\n            out = \"\";\r\n        while (i<k) {\r\n            if (i !== -1) {\r\n                b = this.buffer[i];\r\n                if (b < 0x10) hex += \"0\"+b.toString(16).toUpperCase();\r\n                else hex += b.toString(16).toUpperCase();\r\n                if (columns)\r\n                    asc += b > 32 && b < 127 ? String.fromCharCode(b) : '.';\r\n            }\r\n            ++i;\r\n            if (columns) {\r\n                if (i > 0 && i % 16 === 0 && i !== k) {\r\n                    while (hex.length < 3*16+3) hex += \" \";\r\n                    out += hex+asc+\"\\n\";\r\n                    hex = asc = \"\";\r\n                }\r\n            }\r\n            if (i === this.offset && i === this.limit)\r\n                hex += i === this.markedOffset ? \"!\" : \"|\";\r\n            else if (i === this.offset)\r\n                hex += i === this.markedOffset ? \"[\" : \"<\";\r\n            else if (i === this.limit)\r\n                hex += i === this.markedOffset ? \"]\" : \">\";\r\n            else\r\n                hex += i === this.markedOffset ? \"'\" : (columns || (i !== 0 && i !== k) ? \" \" : \"\");\r\n        }\r\n        if (columns && hex !== \" \") {\r\n            while (hex.length < 3*16+3)\r\n                hex += \" \";\r\n            out += hex + asc + \"\\n\";\r\n        }\r\n        return columns ? out : hex;\r\n    };\r\n\r\n    /**\r\n     * Decodes a hex encoded string with marked offsets to a ByteBuffer.\r\n     * @param {string} str Debug string to decode (not be generated with `columns = true`)\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     * @see ByteBuffer#toDebug\r\n     */\r\n    ByteBuffer.fromDebug = function(str, littleEndian, noAssert) {\r\n        var k = str.length,\r\n            bb = new ByteBuffer(((k+1)/3)|0, littleEndian, noAssert);\r\n        var i = 0, j = 0, ch, b,\r\n            rs = false, // Require symbol next\r\n            ho = false, hm = false, hl = false, // Already has offset (ho), markedOffset (hm), limit (hl)?\r\n            fail = false;\r\n        while (i<k) {\r\n            switch (ch = str.charAt(i++)) {\r\n                case '!':\r\n                    if (!noAssert) {\r\n                        if (ho || hm || hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hm = hl = true;\r\n                    }\r\n                    bb.offset = bb.markedOffset = bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case '|':\r\n                    if (!noAssert) {\r\n                        if (ho || hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hl = true;\r\n                    }\r\n                    bb.offset = bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case '[':\r\n                    if (!noAssert) {\r\n                        if (ho || hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hm = true;\r\n                    }\r\n                    bb.offset = bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case '<':\r\n                    if (!noAssert) {\r\n                        if (ho) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = true;\r\n                    }\r\n                    bb.offset = j;\r\n                    rs = false;\r\n                    break;\r\n                case ']':\r\n                    if (!noAssert) {\r\n                        if (hl || hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hl = hm = true;\r\n                    }\r\n                    bb.limit = bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case '>':\r\n                    if (!noAssert) {\r\n                        if (hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hl = true;\r\n                    }\r\n                    bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case \"'\":\r\n                    if (!noAssert) {\r\n                        if (hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hm = true;\r\n                    }\r\n                    bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case ' ':\r\n                    rs = false;\r\n                    break;\r\n                default:\r\n                    if (!noAssert) {\r\n                        if (rs) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    b = parseInt(ch+str.charAt(i++), 16);\r\n                    if (!noAssert) {\r\n                        if (isNaN(b) || b < 0 || b > 255)\r\n                            throw TypeError(\"Illegal str: Not a debug encoded string\");\r\n                    }\r\n                    bb.buffer[j++] = b;\r\n                    rs = true;\r\n            }\r\n            if (fail)\r\n                throw TypeError(\"Illegal str: Invalid symbol at \"+i);\r\n        }\r\n        if (!noAssert) {\r\n            if (!ho || !hl)\r\n                throw TypeError(\"Illegal str: Missing offset or limit\");\r\n            if (j<bb.buffer.length)\r\n                throw TypeError(\"Illegal str: Not a debug encoded string (is it hex?) \"+j+\" < \"+k);\r\n        }\r\n        return bb;\r\n    };\r\n\r\n    // encodings/hex\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents to a hex encoded string.\r\n     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Hex encoded string\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toHex = function(begin, end) {\r\n        begin = typeof begin === 'undefined' ? this.offset : begin;\r\n        end = typeof end === 'undefined' ? this.limit : end;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        return this.buffer.toString(\"hex\", begin, end);\r\n    };\r\n\r\n    /**\r\n     * Decodes a hex encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromHex = function(str, littleEndian, noAssert) {\r\n        if (!noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (str.length % 2 !== 0)\r\n                throw TypeError(\"Illegal str: Length not a multiple of 2\");\r\n        }\r\n        var bb = new ByteBuffer(0, littleEndian, true);\r\n        bb.buffer = new Buffer(str, \"hex\");\r\n        bb.limit = bb.buffer.length;\r\n        return bb;\r\n    };\r\n\r\n    // utfx-embeddable\r\n\r\n    /**\r\n     * utfx-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n     * Released under the Apache License, Version 2.0\r\n     * see: https://github.com/dcodeIO/utfx for details\r\n     */\r\n    var utfx = function() {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * utfx namespace.\r\n         * @inner\r\n         * @type {!Object.<string,*>}\r\n         */\r\n        var utfx = {};\r\n\r\n        /**\r\n         * Maximum valid code point.\r\n         * @type {number}\r\n         * @const\r\n         */\r\n        utfx.MAX_CODEPOINT = 0x10FFFF;\r\n\r\n        /**\r\n         * Encodes UTF8 code points to UTF8 bytes.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte\r\n         */\r\n        utfx.encodeUTF8 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src,\r\n                src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp < 0x80)\r\n                    dst(cp&0x7F);\r\n                else if (cp < 0x800)\r\n                    dst(((cp>>6)&0x1F)|0xC0),\r\n                    dst((cp&0x3F)|0x80);\r\n                else if (cp < 0x10000)\r\n                    dst(((cp>>12)&0x0F)|0xE0),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                else\r\n                    dst(((cp>>18)&0x07)|0xF0),\r\n                    dst(((cp>>12)&0x3F)|0x80),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Decodes UTF8 bytes to UTF8 code points.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each decoded code point.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the\r\n         *  remaining bytes.\r\n         */\r\n        utfx.decodeUTF8 = function(src, dst) {\r\n            var a, b, c, d, fail = function(b) {\r\n                b = b.slice(0, b.indexOf(null));\r\n                var err = Error(b.toString());\r\n                err.name = \"TruncatedError\";\r\n                err['bytes'] = b;\r\n                throw err;\r\n            };\r\n            while ((a = src()) !== null) {\r\n                if ((a&0x80) === 0)\r\n                    dst(a);\r\n                else if ((a&0xE0) === 0xC0)\r\n                    ((b = src()) === null) && fail([a, b]),\r\n                    dst(((a&0x1F)<<6) | (b&0x3F));\r\n                else if ((a&0xF0) === 0xE0)\r\n                    ((b=src()) === null || (c=src()) === null) && fail([a, b, c]),\r\n                    dst(((a&0x0F)<<12) | ((b&0x3F)<<6) | (c&0x3F));\r\n                else if ((a&0xF8) === 0xF0)\r\n                    ((b=src()) === null || (c=src()) === null || (d=src()) === null) && fail([a, b, c ,d]),\r\n                    dst(((a&0x07)<<18) | ((b&0x3F)<<12) | ((c&0x3F)<<6) | (d&0x3F));\r\n                else throw RangeError(\"Illegal starting byte: \"+a);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts UTF16 characters to UTF8 code points.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each converted code\r\n         *  point.\r\n         */\r\n        utfx.UTF16toUTF8 = function(src, dst) {\r\n            var c1, c2 = null;\r\n            while (true) {\r\n                if ((c1 = c2 !== null ? c2 : src()) === null)\r\n                    break;\r\n                if (c1 >= 0xD800 && c1 <= 0xDFFF) {\r\n                    if ((c2 = src()) !== null) {\r\n                        if (c2 >= 0xDC00 && c2 <= 0xDFFF) {\r\n                            dst((c1-0xD800)*0x400+c2-0xDC00+0x10000);\r\n                            c2 = null; continue;\r\n                        }\r\n                    }\r\n                }\r\n                dst(c1);\r\n            }\r\n            if (c2 !== null) dst(c2);\r\n        };\r\n\r\n        /**\r\n         * Converts UTF8 code points to UTF16 characters.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a code point is out of range\r\n         */\r\n        utfx.UTF8toUTF16 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src, src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp <= 0xFFFF)\r\n                    dst(cp);\r\n                else\r\n                    cp -= 0x10000,\r\n                    dst((cp>>10)+0xD800),\r\n                    dst((cp%0x400)+0xDC00);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts and encodes UTF16 characters to UTF8 bytes.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`\r\n         *  if there are no more characters left.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\r\n         */\r\n        utfx.encodeUTF16toUTF8 = function(src, dst) {\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                utfx.encodeUTF8(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Decodes and converts UTF8 bytes to UTF16 characters.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the remaining bytes.\r\n         */\r\n        utfx.decodeUTF8toUTF16 = function(src, dst) {\r\n            utfx.decodeUTF8(src, function(cp) {\r\n                utfx.UTF8toUTF16(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Calculates the byte length of an UTF8 code point.\r\n         * @param {number} cp UTF8 code point\r\n         * @returns {number} Byte length\r\n         */\r\n        utfx.calculateCodePoint = function(cp) {\r\n            return (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 bytes required to store UTF8 code points.\r\n         * @param {(!function():number|null)} src Code points source as a function returning the next code point respectively\r\n         *  `null` if there are no more code points left.\r\n         * @returns {number} The number of UTF8 bytes required\r\n         */\r\n        utfx.calculateUTF8 = function(src) {\r\n            var cp, l=0;\r\n            while ((cp = src()) !== null)\r\n                l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n            return l;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 code points respectively UTF8 bytes required to store UTF16 char codes.\r\n         * @param {(!function():number|null)} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @returns {!Array.<number>} The number of UTF8 code points at index 0 and the number of UTF8 bytes required at index 1.\r\n         */\r\n        utfx.calculateUTF16asUTF8 = function(src) {\r\n            var n=0, l=0;\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                ++n; l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n            });\r\n            return [n,l];\r\n        };\r\n\r\n        return utfx;\r\n    }();\r\n\r\n    // encodings/utf8\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents between {@link ByteBuffer#offset} and {@link ByteBuffer#limit} to an UTF8 encoded\r\n     *  string.\r\n     * @returns {string} Hex encoded string\r\n     * @throws {RangeError} If `offset > limit`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toUTF8 = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        return this.buffer.toString(\"utf8\", begin, end);\r\n    };\r\n\r\n    /**\r\n     * Decodes an UTF8 encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromUTF8 = function(str, littleEndian, noAssert) {\r\n        if (!noAssert)\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n        var bb = new ByteBuffer(0, littleEndian, noAssert);\r\n        bb.buffer = new Buffer(str, \"utf8\");\r\n        bb.limit = bb.buffer.length;\r\n        return bb;\r\n    };\r\n\r\n\r\n    /**\r\n     * node-memcpy. This is an optional binding dependency and may not be present.\r\n     * @function\r\n     * @param {!(Buffer|ArrayBuffer|Uint8Array)} target Destination\r\n     * @param {number|!(Buffer|ArrayBuffer)} targetStart Destination start, defaults to 0.\r\n     * @param {(!(Buffer|ArrayBuffer|Uint8Array)|number)=} source Source\r\n     * @param {number=} sourceStart Source start, defaults to 0.\r\n     * @param {number=} sourceEnd Source end, defaults to capacity.\r\n     * @returns {number} Number of bytes copied\r\n     * @throws {Error} If any index is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBuffer.memcpy = memcpy;\r\n\r\n    return ByteBuffer;\r\n\r\n})();\r\n","/*\r\n Copyright 2013 Daniel Wirtz <dcode@dcode.io>\r\n Copyright 2009 The Closure Library Authors. All Rights Reserved.\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/long.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module[\"exports\"] = factory();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"Long\"] = factory();\r\n\r\n})(this, function() {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n     *  See the from* functions below for more convenient ways of constructing Longs.\r\n     * @exports Long\r\n     * @class A Long class for representing a 64 bit two's-complement integer value.\r\n     * @param {number} low The low (signed) 32 bits of the long\r\n     * @param {number} high The high (signed) 32 bits of the long\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @constructor\r\n     */\r\n    function Long(low, high, unsigned) {\r\n\r\n        /**\r\n         * The low 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.low = low | 0;\r\n\r\n        /**\r\n         * The high 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.high = high | 0;\r\n\r\n        /**\r\n         * Whether unsigned or not.\r\n         * @type {boolean}\r\n         */\r\n        this.unsigned = !!unsigned;\r\n    }\r\n\r\n    // The internal representation of a long is the two given signed, 32-bit values.\r\n    // We use 32-bit pieces because these are the size of integers on which\r\n    // Javascript performs bit-operations.  For operations like addition and\r\n    // multiplication, we split each number into 16 bit pieces, which can easily be\r\n    // multiplied within Javascript's floating-point representation without overflow\r\n    // or change in sign.\r\n    //\r\n    // In the algorithms below, we frequently reduce the negative case to the\r\n    // positive case by negating the input(s) and then post-processing the result.\r\n    // Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n    // a positive number, it overflows back into a negative).  Not handling this\r\n    // case would often result in infinite recursion.\r\n    //\r\n    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n    // methods on which they depend.\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a Long or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @private\r\n     */\r\n    Long.prototype.__isLong__;\r\n\r\n    Object.defineProperty(Long.prototype, \"__isLong__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    /**\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     * @inner\r\n     */\r\n    function isLong(obj) {\r\n        return (obj && obj[\"__isLong__\"]) === true;\r\n    }\r\n\r\n    /**\r\n     * Tests if the specified object is a Long.\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     */\r\n    Long.isLong = isLong;\r\n\r\n    /**\r\n     * A cache of the Long representations of small integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var INT_CACHE = {};\r\n\r\n    /**\r\n     * A cache of the Long representations of small unsigned integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var UINT_CACHE = {};\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromInt(value, unsigned) {\r\n        var obj, cachedObj, cache;\r\n        if (unsigned) {\r\n            value >>>= 0;\r\n            if (cache = (0 <= value && value < 256)) {\r\n                cachedObj = UINT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n            if (cache)\r\n                UINT_CACHE[value] = obj;\r\n            return obj;\r\n        } else {\r\n            value |= 0;\r\n            if (cache = (-128 <= value && value < 128)) {\r\n                cachedObj = INT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n            if (cache)\r\n                INT_CACHE[value] = obj;\r\n            return obj;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given 32 bit integer value.\r\n     * @function\r\n     * @param {number} value The 32 bit integer in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromInt = fromInt;\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromNumber(value, unsigned) {\r\n        if (isNaN(value) || !isFinite(value))\r\n            return unsigned ? UZERO : ZERO;\r\n        if (unsigned) {\r\n            if (value < 0)\r\n                return UZERO;\r\n            if (value >= TWO_PWR_64_DBL)\r\n                return MAX_UNSIGNED_VALUE;\r\n        } else {\r\n            if (value <= -TWO_PWR_63_DBL)\r\n                return MIN_VALUE;\r\n            if (value + 1 >= TWO_PWR_63_DBL)\r\n                return MAX_VALUE;\r\n        }\r\n        if (value < 0)\r\n            return fromNumber(-value, unsigned).neg();\r\n        return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n     * @function\r\n     * @param {number} value The number in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromNumber = fromNumber;\r\n\r\n    /**\r\n     * @param {number} lowBits\r\n     * @param {number} highBits\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromBits(lowBits, highBits, unsigned) {\r\n        return new Long(lowBits, highBits, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n     *  assumed to use 32 bits.\r\n     * @function\r\n     * @param {number} lowBits The low 32 bits\r\n     * @param {number} highBits The high 32 bits\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromBits = fromBits;\r\n\r\n    /**\r\n     * @function\r\n     * @param {number} base\r\n     * @param {number} exponent\r\n     * @returns {number}\r\n     * @inner\r\n     */\r\n    var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n    /**\r\n     * @param {string} str\r\n     * @param {(boolean|number)=} unsigned\r\n     * @param {number=} radix\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromString(str, unsigned, radix) {\r\n        if (str.length === 0)\r\n            throw Error('empty string');\r\n        if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n            return ZERO;\r\n        if (typeof unsigned === 'number') {\r\n            // For goog.math.long compatibility\r\n            radix = unsigned,\r\n            unsigned = false;\r\n        } else {\r\n            unsigned = !! unsigned;\r\n        }\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n\r\n        var p;\r\n        if ((p = str.indexOf('-')) > 0)\r\n            throw Error('interior hyphen');\r\n        else if (p === 0) {\r\n            return fromString(str.substring(1), unsigned, radix).neg();\r\n        }\r\n\r\n        // Do several (8) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n        var result = ZERO;\r\n        for (var i = 0; i < str.length; i += 8) {\r\n            var size = Math.min(8, str.length - i),\r\n                value = parseInt(str.substring(i, i + size), radix);\r\n            if (size < 8) {\r\n                var power = fromNumber(pow_dbl(radix, size));\r\n                result = result.mul(power).add(fromNumber(value));\r\n            } else {\r\n                result = result.mul(radixToPower);\r\n                result = result.add(fromNumber(value));\r\n            }\r\n        }\r\n        result.unsigned = unsigned;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representation of the given string, written using the specified radix.\r\n     * @function\r\n     * @param {string} str The textual representation of the Long\r\n     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromString = fromString;\r\n\r\n    /**\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromValue(val) {\r\n        if (val /* is compatible */ instanceof Long)\r\n            return val;\r\n        if (typeof val === 'number')\r\n            return fromNumber(val);\r\n        if (typeof val === 'string')\r\n            return fromString(val);\r\n        // Throws for non-objects, converts non-instanceof Long:\r\n        return fromBits(val.low, val.high, val.unsigned);\r\n    }\r\n\r\n    /**\r\n     * Converts the specified value to a Long.\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n     * @returns {!Long}\r\n     */\r\n    Long.fromValue = fromValue;\r\n\r\n    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n    // no runtime penalty for these.\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_16_DBL = 1 << 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24_DBL = 1 << 24;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ZERO = fromInt(0);\r\n\r\n    /**\r\n     * Signed zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.ZERO = ZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UZERO = fromInt(0, true);\r\n\r\n    /**\r\n     * Unsigned zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.UZERO = UZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ONE = fromInt(1);\r\n\r\n    /**\r\n     * Signed one.\r\n     * @type {!Long}\r\n     */\r\n    Long.ONE = ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UONE = fromInt(1, true);\r\n\r\n    /**\r\n     * Unsigned one.\r\n     * @type {!Long}\r\n     */\r\n    Long.UONE = UONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var NEG_ONE = fromInt(-1);\r\n\r\n    /**\r\n     * Signed negative one.\r\n     * @type {!Long}\r\n     */\r\n    Long.NEG_ONE = NEG_ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n    /**\r\n     * Maximum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_VALUE = MAX_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n    /**\r\n     * Maximum unsigned value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n    /**\r\n     * Minimum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MIN_VALUE = MIN_VALUE;\r\n\r\n    /**\r\n     * @alias Long.prototype\r\n     * @inner\r\n     */\r\n    var LongPrototype = Long.prototype;\r\n\r\n    /**\r\n     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toInt = function toInt() {\r\n        return this.unsigned ? this.low >>> 0 : this.low;\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toNumber = function toNumber() {\r\n        if (this.unsigned)\r\n            return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a string written in the specified radix.\r\n     * @param {number=} radix Radix (2-36), defaults to 10\r\n     * @returns {string}\r\n     * @override\r\n     * @throws {RangeError} If `radix` is out of range\r\n     */\r\n    LongPrototype.toString = function toString(radix) {\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n        if (this.isZero())\r\n            return '0';\r\n        if (this.isNegative()) { // Unsigned Longs are never negative\r\n            if (this.eq(MIN_VALUE)) {\r\n                // We need to change the Long value before it can be negated, so we remove\r\n                // the bottom-most digit in this base and then recurse to do the rest.\r\n                var radixLong = fromNumber(radix),\r\n                    div = this.div(radixLong),\r\n                    rem1 = div.mul(radixLong).sub(this);\r\n                return div.toString(radix) + rem1.toInt().toString(radix);\r\n            } else\r\n                return '-' + this.neg().toString(radix);\r\n        }\r\n\r\n        // Do several (6) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n            rem = this;\r\n        var result = '';\r\n        while (true) {\r\n            var remDiv = rem.div(radixToPower),\r\n                intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n                digits = intval.toString(radix);\r\n            rem = remDiv;\r\n            if (rem.isZero())\r\n                return digits + result;\r\n            else {\r\n                while (digits.length < 6)\r\n                    digits = '0' + digits;\r\n                result = '' + digits + result;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as a signed integer.\r\n     * @returns {number} Signed high bits\r\n     */\r\n    LongPrototype.getHighBits = function getHighBits() {\r\n        return this.high;\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned high bits\r\n     */\r\n    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n        return this.high >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as a signed integer.\r\n     * @returns {number} Signed low bits\r\n     */\r\n    LongPrototype.getLowBits = function getLowBits() {\r\n        return this.low;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned low bits\r\n     */\r\n    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n        return this.low >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the number of bits needed to represent the absolute value of this Long.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n        if (this.isNegative()) // Unsigned Longs are never negative\r\n            return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n        var val = this.high != 0 ? this.high : this.low;\r\n        for (var bit = 31; bit > 0; bit--)\r\n            if ((val & (1 << bit)) != 0)\r\n                break;\r\n        return this.high != 0 ? bit + 33 : bit + 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals zero.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isZero = function isZero() {\r\n        return this.high === 0 && this.low === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is negative.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isNegative = function isNegative() {\r\n        return !this.unsigned && this.high < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is positive.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isPositive = function isPositive() {\r\n        return this.unsigned || this.high >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is odd.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isOdd = function isOdd() {\r\n        return (this.low & 1) === 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is even.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isEven = function isEven() {\r\n        return (this.low & 1) === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.equals = function equals(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n            return false;\r\n        return this.high === other.high && this.low === other.low;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.eq = LongPrototype.equals;\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.notEquals = function notEquals(other) {\r\n        return !this.eq(/* validates */ other);\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.neq = LongPrototype.notEquals;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThan = function lessThan(other) {\r\n        return this.comp(/* validates */ other) < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lt = LongPrototype.lessThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) <= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThan = function greaterThan(other) {\r\n        return this.comp(/* validates */ other) > 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.compare = function compare(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.eq(other))\r\n            return 0;\r\n        var thisNeg = this.isNegative(),\r\n            otherNeg = other.isNegative();\r\n        if (thisNeg && !otherNeg)\r\n            return -1;\r\n        if (!thisNeg && otherNeg)\r\n            return 1;\r\n        // At this point the sign bits are the same\r\n        if (!this.unsigned)\r\n            return this.sub(other).isNegative() ? -1 : 1;\r\n        // Both are positive if at least one is unsigned\r\n        return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n    };\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.comp = LongPrototype.compare;\r\n\r\n    /**\r\n     * Negates this Long's value.\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.negate = function negate() {\r\n        if (!this.unsigned && this.eq(MIN_VALUE))\r\n            return MIN_VALUE;\r\n        return this.not().add(ONE);\r\n    };\r\n\r\n    /**\r\n     * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n     * @function\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.neg = LongPrototype.negate;\r\n\r\n    /**\r\n     * Returns the sum of this and the specified Long.\r\n     * @param {!Long|number|string} addend Addend\r\n     * @returns {!Long} Sum\r\n     */\r\n    LongPrototype.add = function add(addend) {\r\n        if (!isLong(addend))\r\n            addend = fromValue(addend);\r\n\r\n        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = addend.high >>> 16;\r\n        var b32 = addend.high & 0xFFFF;\r\n        var b16 = addend.low >>> 16;\r\n        var b00 = addend.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 + b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 + b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 + b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 + b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long.\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.subtract = function subtract(subtrahend) {\r\n        if (!isLong(subtrahend))\r\n            subtrahend = fromValue(subtrahend);\r\n        return this.add(subtrahend.neg());\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n     * @function\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.sub = LongPrototype.subtract;\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long.\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.multiply = function multiply(multiplier) {\r\n        if (this.isZero())\r\n            return ZERO;\r\n        if (!isLong(multiplier))\r\n            multiplier = fromValue(multiplier);\r\n        if (multiplier.isZero())\r\n            return ZERO;\r\n        if (this.eq(MIN_VALUE))\r\n            return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n        if (multiplier.eq(MIN_VALUE))\r\n            return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n        if (this.isNegative()) {\r\n            if (multiplier.isNegative())\r\n                return this.neg().mul(multiplier.neg());\r\n            else\r\n                return this.neg().mul(multiplier).neg();\r\n        } else if (multiplier.isNegative())\r\n            return this.mul(multiplier.neg()).neg();\r\n\r\n        // If both longs are small, use float multiplication\r\n        if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n            return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n        // We can skip products that would overflow.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = multiplier.high >>> 16;\r\n        var b32 = multiplier.high & 0xFFFF;\r\n        var b16 = multiplier.low >>> 16;\r\n        var b00 = multiplier.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 * b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 * b00;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c16 += a00 * b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 * b00;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a16 * b16;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a00 * b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n     * @function\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.mul = LongPrototype.multiply;\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n     *  unsigned if this Long is unsigned.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.divide = function divide(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        if (divisor.isZero())\r\n            throw Error('division by zero');\r\n        if (this.isZero())\r\n            return this.unsigned ? UZERO : ZERO;\r\n        var approx, rem, res;\r\n        if (!this.unsigned) {\r\n            // This section is only relevant for signed longs and is derived from the\r\n            // closure library as a whole.\r\n            if (this.eq(MIN_VALUE)) {\r\n                if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                    return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n                else if (divisor.eq(MIN_VALUE))\r\n                    return ONE;\r\n                else {\r\n                    // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                    var halfThis = this.shr(1);\r\n                    approx = halfThis.div(divisor).shl(1);\r\n                    if (approx.eq(ZERO)) {\r\n                        return divisor.isNegative() ? ONE : NEG_ONE;\r\n                    } else {\r\n                        rem = this.sub(divisor.mul(approx));\r\n                        res = approx.add(rem.div(divisor));\r\n                        return res;\r\n                    }\r\n                }\r\n            } else if (divisor.eq(MIN_VALUE))\r\n                return this.unsigned ? UZERO : ZERO;\r\n            if (this.isNegative()) {\r\n                if (divisor.isNegative())\r\n                    return this.neg().div(divisor.neg());\r\n                return this.neg().div(divisor).neg();\r\n            } else if (divisor.isNegative())\r\n                return this.div(divisor.neg()).neg();\r\n            res = ZERO;\r\n        } else {\r\n            // The algorithm below has not been made for unsigned longs. It's therefore\r\n            // required to take special care of the MSB prior to running it.\r\n            if (!divisor.unsigned)\r\n                divisor = divisor.toUnsigned();\r\n            if (divisor.gt(this))\r\n                return UZERO;\r\n            if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n                return UONE;\r\n            res = UZERO;\r\n        }\r\n\r\n        // Repeat the following until the remainder is less than other:  find a\r\n        // floating-point that approximates remainder / other *from below*, add this\r\n        // into the result, and subtract it from the remainder.  It is critical that\r\n        // the approximate value is less than or equal to the real value so that the\r\n        // remainder never becomes negative.\r\n        rem = this;\r\n        while (rem.gte(divisor)) {\r\n            // Approximate the result of division. This may be a little greater or\r\n            // smaller than the actual value.\r\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n            // We will tweak the approximate result by changing it in the 48-th digit or\r\n            // the smallest non-fractional digit, whichever is larger.\r\n            var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n                delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n            // Decrease the approximation until it is smaller than the remainder.  Note\r\n            // that if it is too large, the product overflows and is negative.\r\n                approxRes = fromNumber(approx),\r\n                approxRem = approxRes.mul(divisor);\r\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n                approx -= delta;\r\n                approxRes = fromNumber(approx, this.unsigned);\r\n                approxRem = approxRes.mul(divisor);\r\n            }\r\n\r\n            // We know the answer can't be zero... and actually, zero would cause\r\n            // infinite recursion since we would make no progress.\r\n            if (approxRes.isZero())\r\n                approxRes = ONE;\r\n\r\n            res = res.add(approxRes);\r\n            rem = rem.sub(approxRem);\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.div = LongPrototype.divide;\r\n\r\n    /**\r\n     * Returns this Long modulo the specified.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.modulo = function modulo(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        return this.sub(this.div(divisor).mul(divisor));\r\n    };\r\n\r\n    /**\r\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.mod = LongPrototype.modulo;\r\n\r\n    /**\r\n     * Returns the bitwise NOT of this Long.\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.not = function not() {\r\n        return fromBits(~this.low, ~this.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise AND of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.and = function and(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise OR of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.or = function or(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise XOR of this Long and the given one.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.xor = function xor(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n        else\r\n            return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRight = function shiftRight(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n        else\r\n            return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        numBits &= 63;\r\n        if (numBits === 0)\r\n            return this;\r\n        else {\r\n            var high = this.high;\r\n            if (numBits < 32) {\r\n                var low = this.low;\r\n                return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n            } else if (numBits === 32)\r\n                return fromBits(high, 0, this.unsigned);\r\n            else\r\n                return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n    /**\r\n     * Converts this Long to signed.\r\n     * @returns {!Long} Signed long\r\n     */\r\n    LongPrototype.toSigned = function toSigned() {\r\n        if (!this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, false);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to unsigned.\r\n     * @returns {!Long} Unsigned long\r\n     */\r\n    LongPrototype.toUnsigned = function toUnsigned() {\r\n        if (this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, true);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to its byte representation.\r\n     * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n     * @returns {!Array.<number>} Byte representation\r\n     */\r\n    LongPrototype.toBytes = function(le) {\r\n        return le ? this.toBytesLE() : this.toBytesBE();\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its little endian byte representation.\r\n     * @returns {!Array.<number>} Little endian byte representation\r\n     */\r\n    LongPrototype.toBytesLE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n             lo         & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n             hi         & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>> 24) & 0xff\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its big endian byte representation.\r\n     * @returns {!Array.<number>} Big endian byte representation\r\n     */\r\n    LongPrototype.toBytesBE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n            (hi >>> 24) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n             hi         & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n             lo         & 0xff\r\n        ];\r\n    }\r\n\r\n    return Long;\r\n});\r\n","import * as slots from './slots'\n\nfunction timeAgo(time: number): string {\n  let d: Date = slots.beginEpochTime()\n\n  let t: number = d.getTime() / 1000\n\n  let datetime: Date = new Date((time + t) * 1000)\n\n  let currentTime: number = new Date().getTime()\n  let diffTime: number = (currentTime - datetime.getTime()) / 1000\n\n  if (diffTime < 60) {\n    return Math.floor(diffTime) + ' sec ago'\n  }\n  if (Math.floor(diffTime / 60) <= 1) {\n    return Math.floor(diffTime / 60) + ' min ago'\n  }\n  if (diffTime / 60 < 60) {\n    return Math.floor(diffTime / 60) + ' mins ago'\n  }\n  if (Math.floor(diffTime / 60 / 60) <= 1) {\n    return Math.floor(diffTime / 60 / 60) + ' hour ago'\n  }\n  if (diffTime / 60 / 60 < 24) {\n    return Math.floor(diffTime / 60 / 60) + ' hours ago'\n  }\n  if (Math.floor(diffTime / 60 / 60 / 24) <= 1) {\n    return Math.floor(diffTime / 60 / 60 / 24) + ' day ago'\n  }\n  if (diffTime / 60 / 60 / 24 < 30) {\n    return Math.floor(diffTime / 60 / 60 / 24) + ' days ago'\n  }\n  if (Math.floor(diffTime / 60 / 60 / 24 / 30) <= 1) {\n    return Math.floor(diffTime / 60 / 60 / 24 / 30) + ' month ago'\n  }\n  if (diffTime / 60 / 60 / 24 / 30 < 12) {\n    return Math.floor(diffTime / 60 / 60 / 24 / 30) + ' months ago'\n  }\n  if (Math.floor(diffTime / 60 / 60 / 24 / 30 / 12) <= 1) {\n    return Math.floor(diffTime / 60 / 60 / 24 / 30 / 12) + ' year ago'\n  }\n\n  return Math.floor(diffTime / 60 / 60 / 24 / 30 / 12) + ' years ago'\n}\n\nfunction fullTimestamp(time: number): string {\n  let d = slots.beginEpochTime()\n  let t = d.getTime() / 1000\n\n  d = new Date((time + t) * 1000)\n  let month: number = d.getMonth() + 1\n  let monthStr: string = month + ''\n  if (month < 10) {\n    monthStr = '0' + monthStr\n  }\n\n  let day: number = d.getDate()\n  let dayStr: string = day + ''\n  if (day < 10) {\n    dayStr = '0' + day\n  }\n\n  let h: number = d.getHours()\n  let m: number = d.getMinutes()\n  let s: number = d.getSeconds()\n\n  let hStr: string = h + ''\n  let mStr: string = m + ''\n  let sStr: string = s + ''\n\n  if (h < 10) {\n    hStr = '0' + h\n  }\n\n  if (m < 10) {\n    mStr = '0' + m\n  }\n\n  if (s < 10) {\n    sStr = '0' + s\n  }\n\n  return d.getFullYear() + '/' + month + '/' + day + ' ' + h + ':' + m + ':' + s\n}\n\nexport { timeAgo, fullTimestamp }\n","\n\nfunction checkSecret(secret: string): boolean{\n    return (secret!=null && secret.length>0)\n}\n\n\nfunction checkPublicKey(publicKey: string): boolean{\n     return (publicKey!=null && publicKey.length>0)\n}\n\nfunction checkAddress(address: string): boolean{\n    return (address!=null && address.length>0)\n}\n\n\nexport {\n    checkSecret,\n    checkPublicKey,\n    checkAddress\n}","import { ObjectType, Method } from './type'\nimport AschAPI from './asch-api'\nimport { ContractMetadataMananger, ContractMetadataObject, MethodMetadata, ParameterMetadata, TypeKind,StateMetadata } from './contract/metadata'\n\n\nexport class AschContract {\n  contractJson: ObjectType\n  tid: string\n  name: string\n  address: string\n  ownerId: string\n  consumeOwnerEnergy: boolean\n  desc: string\n  vmVersion: string\n  code: string\n  metadata: ContractMetadataObject\n  metadataManager: ContractMetadataMananger\n  api: AschAPI\n  [key: string]: any\n\n  private _gasLimit: number\n  private _enablePayGasInXAS: boolean\n\n\n  /**\n   * constructor\n   * @param contractJson \n   * @param api \n   */\n  constructor(contractJson: ObjectType, api: AschAPI) {\n    this.contractJson = contractJson\n    this.tid = contractJson.tid\n    this.name = contractJson.name\n    this.address = contractJson.address\n    this.ownerId = contractJson.ownerId\n    this.consumeOwnerEnergy = (contractJson.consumeOwnerEnergy == 1) ? true : false\n    this.desc = contractJson.desc\n    this.vmVersion = contractJson.vmVersion\n    this.code = contractJson.code\n    this.metadata = contractJson.metadata\n    this.metadataManager = ContractMetadataMananger.fromJSONObject(this.metadata)\n    this.api = api\n    this._gasLimit=1000000\n    this._enablePayGasInXAS=true\n    this.initMethods(this.metadata)\n  }\n\n  public get gasLimit(){\n    return this._gasLimit\n  }\n\n  public set gasLimit(gasLimit: number) {\n    this._gasLimit = gasLimit;\n  }\n\n   public get enablePayGasInXAS(){\n     return this._enablePayGasInXAS\n   }\n\n   public set enablePayGasInXAS(enablePayGasInXAS:boolean){\n     this._enablePayGasInXAS=enablePayGasInXAS\n   }\n\n  /**\n   * \n   * @param contractJson \n   * @param api \n   */\n  static fromJSONObject(contractJson: ObjectType, api: AschAPI): AschContract {\n    const contract = new AschContract(contractJson, api)\n    return contract\n  }\n\n  /**\n   * \n   * @param metadata \n   */\n  public initMethods(metadata:ContractMetadataObject):void{\n    let manager: ContractMetadataMananger= this.metadataManager\n    let methods: MethodMetadata[] = manager.methods\n    \n    methods.forEach(method => {\n        if(method.public && !method.constant && method.payable && !method.isConstructor){\n          if(method.defaultPayable){\n            this.addPayDefaultMethod(method)\n          }else{\n            this.addPayMethod(method)\n          }\n        }else if(method.public && !method.constant && !method.payable && !method.isConstructor){\n          this.addCallMethod(method)\n        }else if(method.public && method.constant){\n          this.addConstantMethod(method)\n        }\n    });\n    let states: StateMetadata[] = manager.states\n    states.forEach(state => {\n        if(state.public && state.type.kind==0){\n          this.addStateMethod(state)\n        }\n    });\n  }\n\n  /**\n   * \n   * @param methodData \n   */\n  public addPayMethod(methodData: MethodMetadata): void {\n    if (!this.hasOwnProperty(methodData.name)) {\n      this[methodData.name] = (\n        currency: string,\n        amount: string,\n        args: Array<any>\n        // gasLimit: number = 1000000,\n        // enablePayGasInXAS: boolean = true\n      ): Promise<object> => {\n        return this.pay(currency, amount, args,  methodData.name, this.gasLimit, this.enablePayGasInXAS)\n      }\n    } else {\n      console.log('already has the method:' + methodData.name)\n    }\n  }\n\n  public addPayDefaultMethod(methodData: MethodMetadata): void {\n    if (!this.hasOwnProperty(methodData.name)) {\n      this[methodData.name] = (\n        currency: string,\n        amount: string,\n        // gasLimit: number = 1000000,\n        // enablePayGasInXAS: boolean = true\n      ): Promise<object> => {\n        return this.payDefault(currency, amount, this.gasLimit, this.enablePayGasInXAS)\n      }\n    } else {\n      console.log('already has the method:' + methodData.name)\n    }\n  }\n\n  /**\n   * \n   * @param methodData \n   */\n  public addCallMethod(methodData: MethodMetadata): void {\n    if (!this.hasOwnProperty(methodData.name)) {\n      this[methodData.name] = (\n        ... methodArgs: Array<any>\n        // gasLimit: number = 10000000,\n        // enablePayGasInXAS: boolean = true\n      ): Promise<object> => {\n        return this.call(methodData.name, methodArgs,this.gasLimit,this.enablePayGasInXAS)\n      }\n    } else {\n      console.log('already has the method:' + methodData.name)\n    }\n  }\n\n  /**\n   * \n   * @param methodData \n   */\n  public addConstantMethod(methodData: MethodMetadata): void {\n    if (!this.hasOwnProperty(methodData.name)) {\n      this[methodData.name] = (\n        ...methodArgs: Array<any>  \n      ): Promise<object> => {\n        // console.log('addConstantMethod:'+JSON.stringify(methodArgs))\n        return this.constant(methodData.name, ...methodArgs)\n      }\n    } else {\n      console.log('already has the method:' + methodData.name)\n    }\n  }\n\n  /**\n   * \n   * @param stateData \n   */\n  public addStateMethod(stateData: StateMetadata): void {\n    let methodName = 'get'+stateData.name.substring(0,1).toUpperCase()+stateData.name.substring(1)\n    if (!this.hasOwnProperty(methodName)) {\n      this[methodName] = (\n      ): Promise<object> => {\n        return this.queryStates(stateData.name)\n      }\n    } else {\n      console.log('already has the method:' + methodName)\n    }\n  }\n\n  extractParamType(param: ParameterMetadata): string {\n    switch (param.type.kind) {\n      case TypeKind.unknow:\n        {\n          return 'any'\n        }\n      case TypeKind.primitive:\n        {\n          return param.type.name === 'bigint' ? 'string' : param.type.name\n        }\n      case TypeKind.stateCollection:\n        {\n          return 'any'\n        }\n      case TypeKind.customeState:\n        {\n          return 'any'\n        }\n      case TypeKind.array:\n        {\n          return 'any'\n        }\n      case TypeKind.interface:\n        {\n          return 'any'\n        }\n    }\n    return 'any'\n  }\n\n  /**\n   * 调用合约方法\n   * @param methodName 要调用的方法名称\n   * @param methodArgs 调用方法所需要的参数列表\n   * @param gasLimit 最大消耗的Gas, 10,000,000 > gasLimit > 0\n   * @param enablePayGasInXAS 当调用者能量不足时，是否使用XAS支付Gas\n   */\n  public async call(\n    methodName: string,\n    methodArgs: Array<any>,\n    gasLimit: number = this.gasLimit,\n    enablePayGasInXAS: boolean = this.enablePayGasInXAS\n  ): Promise<object> {\n    try {\n      let method: MethodMetadata | undefined = this.metadataManager.getMethod(methodName)\n      if (method && method.public && !method.constant && !method.payable) {\n        return this.api.callContract(this.name, methodName, methodArgs, gasLimit, enablePayGasInXAS)\n      } else {\n        return Promise.reject(`contract has no method called ${methodName}`)\n      }\n    } catch (e) {\n      return Promise.reject(e)\n    }\n  }\n\n  /**\n   * 合约默认接收方法\n   * @param currency 转账资产名称\n   * @param amount 转账金额\n   * @param gasLimit 最大消耗的Gas, 10,000,000 > gasLimit > 0\n   * @param enablePayGasInXAS 当调用者能量不足时，是否使用XAS支付Gas\n   */\n  public async payDefault(\n    currency: string,\n    amount: string,\n    gasLimit: number = this.gasLimit,\n    enablePayGasInXAS: boolean = this.enablePayGasInXAS\n  ): Promise<object> {\n    try {\n       \n      // let method: MethodMetadata | undefined = this.metadataManager.getMethod(methodName)\n      // if (method && method.public && method.payable) {\n     return this.api.payDefaultContract(currency, amount, this.name, gasLimit, enablePayGasInXAS)\n      // } else {\n        // return Promise.reject(`contract has no method called ${method ? method.name : ''}`)\n      // }\n    } catch (e) {\n      return Promise.reject(e)\n    }\n  }\n\n  /**\n   * 转账到合约\n   * @param currency 转账资产名称\n   * @param amount 转账金额\n   * @param extraArgs 额外参数\n   * @param methodName payable方法名字，当methodName=''时，调用默认payable方法\n   * @param gasLimit 最大消耗的Gas, 10,000,000 > gasLimit > 0\n   * @param enablePayGasInXAS 当调用者能量不足时，是否使用XAS支付Gas\n   */\n  public async pay(\n    currency: string,\n    amount: string,\n    extraArgs: Array<any>,\n    methodName: string,\n    gasLimit: number = this.gasLimit,\n    enablePayGasInXAS: boolean = this.enablePayGasInXAS\n  ): Promise<object> {\n    try {\n      // if (!methodName || methodName.length==0)\n      //   return this.api.payContract(currency, amount, extraArgs, this.name, '', gasLimit, enablePayGasInXAS)\n      let method: MethodMetadata | undefined = this.metadataManager.getMethod(methodName)\n      if (method && method.public && method.payable) {\n        return this.api.payContract(currency, amount, extraArgs, this.name, methodName, gasLimit, enablePayGasInXAS)\n      } else {\n        return Promise.reject(`contract has no method called ${method ? method.name : ''}`)\n      }\n    } catch (e) {\n      return Promise.reject(e)\n    }\n  }\n\n\n\n  /**\n   * 调用当前合约的查询方法\n   * @param methodName 查询方法名称\n   * @param args 查询方法参数数组，以json形式放在请求的body中。查询方法参数必须是数组，如果没有参数请使用空数组\n   */\n  public async constant(methodName: string, ... methodArgs: Array<any>): Promise<object> {\n    try {\n      let method: MethodMetadata | undefined = this.metadataManager.getMethod(methodName)\n      if (method && method.constant && methodArgs instanceof Array) {\n        // console.log('constant:'+JSON.stringify(methodArgs))\n        return this.api.callConstantMethod(this.name, methodName, ...methodArgs)\n      } else {\n        return Promise.reject(`constant get error`)\n      }\n    } catch (e) {\n      return Promise.reject(e)\n    }\n  }\n\n  /**\n   * 查询当前合约的公开状态\n   * @param path 状态的路径，状态路径是用'.'号分隔的一个字符串，表示要查询的状态所在的合约对象的位置。\n   * 如：\n   * 'amount'表示查询合约的amount属性，\n   * 'payments.0'表示payments对象的第0个元素，\n   * 'paymentOfAddress.ABuH9VHV3cFi9UKzcHXGMPGnSC4QqT2cZ5'表示合约的paymentOfAddress['ABuH9VHV3cFi9UKzcHXGMPGnSC4QqT2cZ5']。\n   * 以此类推\n   * \n   * ~~~\n   * 需要注意的是，该方法仅可查询公开的简单属性的值，否则会失败。\n   * 如amount是private的则查询会失败。如paymentOfAddress的类型是Mapping<Payment>这种复杂类型，查询也会失败。\n   * 如需实现更复杂的查询，请参考智能合约开发文档，使用查询方法\n   * ~~~\n   */\n  public async queryStates(path: string): Promise<object> {\n    try {\n      if (path) {\n        return this.api.queryStatesOfContract(this.name, path)\n        //return this.api.get(`${this.name}/states/${path}`)\n      } else {\n        return Promise.reject(`path is required`)\n      }\n    } catch (e) {\n      return Promise.reject(e)\n    }\n  }\n\n  /**\n   * 查询智能合约执行结果\n   * @param tid 执行合约的交易Id\n   */\n  public async getResultOfContract(tid: string): Promise<object>{\n    try {\n      if (tid && tid.length>0) {\n        return this.api.getResultOfContract(this.name, tid)\n      } else {\n        return Promise.reject(`tid is required`)\n      }\n    } catch (e) {\n      return Promise.reject(e)\n    }\n  }\n}\n","import { SignKeyPair } from 'tweetnacl'\nexport interface Transaction {\n  type: number\n  timestamp: number\n  id?: string\n  message?: string\n  fee: number\n  args: Array<any>\n  senderId: string\n  senderPublicKey: string\n  signatures?: Array<string>\n  secondSignature?: string\n  signSignature?: string\n}\n\nexport interface Keypair {\n  privateKey: string\n  publicKey: string\n}\n\nexport interface Keys {\n  keypair: SignKeyPair\n  privateKey: string\n  publicKey: string\n}\n\nexport interface Account {\n  privateKey: string\n  address: string\n}\n\nexport interface ObjectType {\n  [key: string]: any\n}\n\nexport interface Param {\n  name: string\n  type: { name: string; text: string }\n  index: number\n  require: boolean\n}\n\nexport interface Reponse {\n  success: boolean\n  error: string\n}\n\nexport interface Method {\n  name: string\n  returnType?: { name: string; text: string }\n  parameters: Array<Param>\n  isConstructor: boolean\n  isPublic: boolean\n  isDefaultPayable: boolean\n  isPayable: boolean\n  isConstant: boolean\n}\n\n//Contract meta data\nexport interface ParameterMetadata {\n  index: number\n  name: string\n  type: TypeInfo\n  require: boolean\n }\n \n export interface TypeInfo {\n  text: string\n  name: string\n  kind: TypeKind\n  typeArguments?: TypeInfo[]\n }\n \n export enum TypeKind {\n  primitive = 0,\n  collection = 1,\n  custome = 2\n }\n \n export interface MethodMetadata {\n  name: string\n  parameters: ParameterMetadata[]\n  returnType?: TypeInfo\n  isConstructor: boolean\n  isPublic: boolean\n  isPayable: boolean\n  isDefaultPayable: boolean\n  isConstant: boolean\n }\n \n export interface StateMetadata {\n  name: string\n  isPublic: boolean\n  isReadonly: boolean\n  type: TypeInfo\n }\n \n export interface CustomeStateType {\n  name: string\n  flat: boolean\n  properties: StateMetadata[]\n }\n \n export interface ContractMetadataObject {\n  className: string\n  customeTypes: CustomeStateType[]\n  states: StateMetadata[]\n  methods: MethodMetadata[]\n }"],"sourceRoot":""}